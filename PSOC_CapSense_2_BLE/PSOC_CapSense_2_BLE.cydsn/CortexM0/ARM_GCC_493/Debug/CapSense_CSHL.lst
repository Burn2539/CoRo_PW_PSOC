ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CapSense_CSHL.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.CapSense_BaseInit,"ax",%progbits
  18              		.align	2
  19              		.global	CapSense_BaseInit
  20              		.code	16
  21              		.thumb_func
  22              		.type	CapSense_BaseInit, %function
  23              	CapSense_BaseInit:
  24              	.LFB35:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\CapSense_CSHL.c"
   1:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * File Name: CapSense_CSHL.c
   3:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Version 2.20
   4:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
   5:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Description:
   6:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CSD component.
   8:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
   9:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Note:
  10:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
  11:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  18:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_CSHL.h"
  19:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_PVT.h"
  20:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  21:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /* SmartSense functions */
  22:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  23:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     extern void CapSense_UpdateThresholds(uint32 sensor);
  24:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  25:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  26:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /* Storage of filters data */
  27:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
  28:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) )
  29:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  30:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  31:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData2[CapSense_TOTAL_SENSOR_COUNT];
  32:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 2


  33:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #elif ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER))   || \
  34:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER))   || \
  35:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
  36:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))   || \
  37:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)) )
  38:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  39:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  40:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
  41:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         *    (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) )
  42:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         */
  43:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  44:.\Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint16 CapSense_sensorRaw[CapSense_TOTAL_SENSOR_COUNT];
  45:.\Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint8 CapSense_sensorEnableMask[CapSense_TOTAL_SENSOR_MASK];
  46:.\Generated_Source\PSoC4/CapSense_CSHL.c **** extern const uint8 CapSense_widgetNumber[CapSense_TOTAL_SENSOR_COUNT];
  47:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  48:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
  49:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     extern uint32 CapSense_widgetResolution[CapSense_RESOLUTIONS_TBL_SIZE];
  50:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
  51:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  52:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_sensorBaseline[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  53:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorBaselineLow[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  54:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_sensorSignal[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  55:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorOnMask[CapSense_TOTAL_SENSOR_MASK] = {0u};
  56:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  57:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineResetCnt[CapSense_TOTAL_SENSOR_COUNT];
  58:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineReset[CapSense_TOTAL_SENSOR_COUNT] = {
  59:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     5u, 5u, 5u, 5u, 5u, 5u, 5u, 5u, 5u, 5u, 
  60:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  61:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  62:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  63:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  64:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  65:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     extern CapSense_CONFIG_TYPE_P4_v2_30 CapSense_config;
  66:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  67:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  68:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
  69:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
  70:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
  71:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  72:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /* Generated by Customizer */
  73:.\Generated_Source\PSoC4/CapSense_CSHL.c **** const uint16 CapSense_fingerThreshold[] = {
  74:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, 1u, 1u, 1u, 1u, 1u, 1u, 1u, 1u, 1u, 
  75:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  76:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  77:.\Generated_Source\PSoC4/CapSense_CSHL.c **** const uint16 CapSense_noiseThreshold[] = {
  78:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, 1u, 1u, 1u, 1u, 1u, 1u, 1u, 1u, 1u, 
  79:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  80:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  81:.\Generated_Source\PSoC4/CapSense_CSHL.c **** const uint16 CapSense_hysteresis[] = {
  82:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, 1u, 1u, 1u, 1u, 1u, 1u, 1u, 1u, 1u, 
  83:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  84:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  85:.\Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_debounce[] = {
  86:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, 1u, 1u, 1u, 1u, 1u, 1u, 1u, 1u, 1u, 
  87:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  88:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  89:.\Generated_Source\PSoC4/CapSense_CSHL.c **** static uint8 CapSense_debounceCounter[] = {
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 3


  90:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 
  91:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  92:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  93:.\Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_rawDataIndex[] = {
  94:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, /* Button0__BTN */
  95:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button1__BTN */
  96:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     2u, /* Button2__BTN */
  97:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     3u, /* Button3__BTN */
  98:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     4u, /* Button4__BTN */
  99:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     5u, /* Button5__BTN */
 100:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     6u, /* Button6__BTN */
 101:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     7u, /* Button7__BTN */
 102:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     8u, /* Button8__BTN */
 103:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     9u, /* Button9__BTN */
 104:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
 105:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 106:.\Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_numberOfSensors[] = {
 107:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button0__BTN */
 108:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button1__BTN */
 109:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button2__BTN */
 110:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button3__BTN */
 111:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button4__BTN */
 112:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button5__BTN */
 113:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button6__BTN */
 114:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button7__BTN */
 115:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button8__BTN */
 116:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button9__BTN */
 117:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
 118:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 119:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 120:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 121:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 122:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 123:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_BaseInit
 124:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 125:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 126:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 127:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an
 128:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value.
 129:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Resets to zero CapSense_sensorBaselineLow[sensor] and
 130:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[sensor] array element.
 131:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_rawFilterData2[sensor] and
 132:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[sensor] array element with an
 133:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value if the raw data filter is enabled.
 134:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 135:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 136:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 137:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 138:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 139:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 140:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 141:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 142:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store the baseline value.
 143:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store the fraction byte of
 144:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the baseline value.
 145:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store a difference between
 146:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and the previous value of the baseline.
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 4


 147:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store a previous sample of
 148:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
 149:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before a previous sample
 150:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  of the enabled raw data filter. Required only for median or average filters.
 151:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 152:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 153:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 154:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 155:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 156:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_BaseInit(uint32 sensor)
 157:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
  26              		.loc 1 157 0
  27              		.cfi_startproc
  28              	.LVL0:
  29 0000 30B5     		push	{r4, r5, lr}
  30              		.cfi_def_cfa_offset 12
  31              		.cfi_offset 4, -12
  32              		.cfi_offset 5, -8
  33              		.cfi_offset 14, -4
 158:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((CapSense_TOTAL_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || \
 159:.\Generated_Source\PSoC4/CapSense_CSHL.c ****          (CapSense_TOTAL_GENERICS_COUNT))
 160:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 widget = CapSense_widgetNumber[sensor];
  34              		.loc 1 160 0
  35 0002 094B     		ldr	r3, .L2
  36 0004 1C5C     		ldrb	r4, [r3, r0]
  37              	.LVL1:
 161:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* ((CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
 162:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 163:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)
 164:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 debounceIndex;
 165:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) */
 166:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 167:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 168:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 169:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 170:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 171:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 172:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 173:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline */
 174:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaseline[sensor] = CapSense_sensorRaw[sensor];
  38              		.loc 1 174 0
  39 0006 4200     		lsl	r2, r0, #1
  40 0008 084B     		ldr	r3, .L2+4
  41 000a D15A     		ldrh	r1, [r2, r3]
  42 000c 084B     		ldr	r3, .L2+8
  43 000e D152     		strh	r1, [r2, r3]
 175:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaselineLow[sensor] = 0u;
  44              		.loc 1 175 0
  45 0010 1818     		add	r0, r3, r0
  46              	.LVL2:
  47 0012 0025     		mov	r5, #0
  48 0014 0575     		strb	r5, [r0, #20]
 176:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = 0u;
  49              		.loc 1 176 0
  50 0016 9818     		add	r0, r3, r2
  51 0018 0584     		strh	r5, [r0, #32]
 177:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 5


 178:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_debounceCounter[widget] =  CapSense_debounce[widget];
  52              		.loc 1 178 0
  53 001a 0648     		ldr	r0, .L2+12
  54 001c 005D     		ldrb	r0, [r0, r4]
  55 001e 3433     		add	r3, r3, #52
  56 0020 1855     		strb	r0, [r3, r4]
 179:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 180:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 181:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) ||\
 182:.\Generated_Source\PSoC4/CapSense_CSHL.c ****          (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)))
 183:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 184:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
 185:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_sensorRaw[sensor];
 186:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 187:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #elif ((CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER) ||\
 188:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER) ||\
 189:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER) ||\
 190:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER) ||\
 191:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
 192:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 193:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
  57              		.loc 1 193 0
  58 0022 054B     		ldr	r3, .L2+16
  59 0024 D152     		strh	r1, [r2, r3]
 194:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 195:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 196:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* No Raw filters */
 197:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* ((CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
 198:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             *   (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER))
 199:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             */
 200:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 201:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 202:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 203:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 204:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 205:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
  60              		.loc 1 205 0
  61              		@ sp needed
  62              	.LVL3:
  63 0026 30BD     		pop	{r4, r5, pc}
  64              	.L3:
  65              		.align	2
  66              	.L2:
  67 0028 00000000 		.word	CapSense_widgetNumber
  68 002c 00000000 		.word	CapSense_sensorRaw
  69 0030 00000000 		.word	.LANCHOR0
  70 0034 00000000 		.word	.LANCHOR1
  71 0038 00000000 		.word	CapSense_rawFilterData1
  72              		.cfi_endproc
  73              	.LFE35:
  74              		.size	CapSense_BaseInit, .-CapSense_BaseInit
  75              		.section	.text.CapSense_InitializeSensorBaseline,"ax",%progbits
  76              		.align	2
  77              		.global	CapSense_InitializeSensorBaseline
  78              		.code	16
  79              		.thumb_func
  80              		.type	CapSense_InitializeSensorBaseline, %function
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 6


  81              	CapSense_InitializeSensorBaseline:
  82              	.LFB36:
 206:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 207:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 208:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 209:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeSensorBaseline
 210:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 211:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 212:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 213:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an
 214:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or a pair
 215:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the
 216:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if
 217:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  enabled.
 218:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 219:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 220:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 221:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 222:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 223:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 224:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 225:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 226:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 227:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 228:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 229:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 230:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 231:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 232:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeSensorBaseline(uint32 sensor)
 233:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
  83              		.loc 1 233 0
  84              		.cfi_startproc
  85              	.LVL4:
  86 0000 10B5     		push	{r4, lr}
  87              		.cfi_def_cfa_offset 8
  88              		.cfi_offset 4, -8
  89              		.cfi_offset 14, -4
  90 0002 041C     		mov	r4, r0
 234:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Scan sensor */
 235:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanSensor(sensor);
  91              		.loc 1 235 0
  92 0004 FFF7FEFF 		bl	CapSense_ScanSensor
  93              	.LVL5:
  94              	.L5:
 236:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
  95              		.loc 1 236 0 discriminator 1
  96 0008 FFF7FEFF 		bl	CapSense_IsBusy
  97              	.LVL6:
  98 000c 0028     		cmp	r0, #0
  99 000e FBD1     		bne	.L5
 237:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 238:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
 239:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 240:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 241:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline, Signal and debounce counters */
 242:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_BaseInit(sensor);
 100              		.loc 1 242 0
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 7


 101 0010 201C     		mov	r0, r4
 102 0012 FFF7FEFF 		bl	CapSense_BaseInit
 103              	.LVL7:
 243:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 104              		.loc 1 243 0
 105              		@ sp needed
 106              	.LVL8:
 107 0016 10BD     		pop	{r4, pc}
 108              		.cfi_endproc
 109              	.LFE36:
 110              		.size	CapSense_InitializeSensorBaseline, .-CapSense_InitializeSensorBaseline
 111              		.section	.text.CapSense_InitializeAllBaselines,"ax",%progbits
 112              		.align	2
 113              		.global	CapSense_InitializeAllBaselines
 114              		.code	16
 115              		.thumb_func
 116              		.type	CapSense_InitializeAllBaselines, %function
 117              	CapSense_InitializeAllBaselines:
 118              	.LFB37:
 244:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 245:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 246:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 247:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeAllBaselines
 248:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 249:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 250:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 251:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Uses the CapSense_InitializeSensorBaseline function to load the
 252:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] array with an initial values by scanning
 253:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw count values are copied into the baseline array for
 254:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw data filters are initialized if enabled.
 255:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 256:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 257:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 258:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 259:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 260:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 261:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 262:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 263:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 264:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 265:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 266:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 267:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 268:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 269:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeAllBaselines(void)
 270:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 119              		.loc 1 270 0
 120              		.cfi_startproc
 121 0000 10B5     		push	{r4, lr}
 122              		.cfi_def_cfa_offset 8
 123              		.cfi_offset 4, -8
 124              		.cfi_offset 14, -4
 125              	.LVL9:
 271:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 272:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 273:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 126              		.loc 1 273 0
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 8


 127 0002 0024     		mov	r4, #0
 128 0004 03E0     		b	.L7
 129              	.LVL10:
 130              	.L8:
 274:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 275:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_InitializeSensorBaseline(i);
 131              		.loc 1 275 0 discriminator 3
 132 0006 201C     		mov	r0, r4
 133 0008 FFF7FEFF 		bl	CapSense_InitializeSensorBaseline
 134              	.LVL11:
 273:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 135              		.loc 1 273 0 discriminator 3
 136 000c 0134     		add	r4, r4, #1
 137              	.LVL12:
 138              	.L7:
 273:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 139              		.loc 1 273 0 is_stmt 0 discriminator 1
 140 000e 092C     		cmp	r4, #9
 141 0010 F9D9     		bls	.L8
 276:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 277:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 142              		.loc 1 277 0 is_stmt 1
 143              		@ sp needed
 144              	.LVL13:
 145 0012 10BD     		pop	{r4, pc}
 146              		.cfi_endproc
 147              	.LFE37:
 148              		.size	CapSense_InitializeAllBaselines, .-CapSense_InitializeAllBaselines
 149              		.section	.text.CapSense_InitializeEnabledBaselines,"ax",%progbits
 150              		.align	2
 151              		.global	CapSense_InitializeEnabledBaselines
 152              		.code	16
 153              		.thumb_func
 154              		.type	CapSense_InitializeEnabledBaselines, %function
 155              	CapSense_InitializeEnabledBaselines:
 156              	.LFB38:
 278:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 279:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 280:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 281:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeEnabledBaselines
 282:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 283:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 284:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 285:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Scans all the enabled widgets and the raw count values are copied into the
 286:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for all the sensors enabled in the scanning process. The baselines
 287:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  are initialized with zero values for sensors disabled from the scanning process.
 288:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  The raw data filters are initialized if enabled.
 289:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 290:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 291:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 292:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 293:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 294:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 295:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 296:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 297:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorRaw[] - used to store the sensors raw data.
 298:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[ ] - used to store bit masks of the enabled sensors.
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 9


 299:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 300:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 301:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 302:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 303:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 304:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeEnabledBaselines(void)
 305:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 157              		.loc 1 305 0
 158              		.cfi_startproc
 159 0000 10B5     		push	{r4, lr}
 160              		.cfi_def_cfa_offset 8
 161              		.cfi_offset 4, -8
 162              		.cfi_offset 14, -4
 306:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 307:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 308:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 309:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanEnabledWidgets();
 163              		.loc 1 309 0
 164 0002 FFF7FEFF 		bl	CapSense_ScanEnabledWidgets
 165              	.LVL14:
 166              	.L10:
 310:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 167              		.loc 1 310 0 discriminator 1
 168 0006 FFF7FEFF 		bl	CapSense_IsBusy
 169              	.LVL15:
 170 000a 0028     		cmp	r0, #0
 171 000c FBD1     		bne	.L10
 172 000e 0024     		mov	r4, #0
 173 0010 09E0     		b	.L11
 174              	.LVL16:
 175              	.L13:
 311:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 312:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
 313:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 314:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 315:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 316:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 317:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 176              		.loc 1 317 0
 177 0012 0648     		ldr	r0, .L14
 178 0014 211C     		mov	r1, r4
 179 0016 FFF7FEFF 		bl	CapSense_GetBitValue
 180              	.LVL17:
 318:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 319:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 320:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(isSensorEnabled != 0u)
 181              		.loc 1 320 0
 182 001a 0028     		cmp	r0, #0
 183 001c 02D0     		beq	.L12
 321:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 322:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Initialize baselines */
 323:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(i);
 184              		.loc 1 323 0
 185 001e 201C     		mov	r0, r4
 186              	.LVL18:
 187 0020 FFF7FEFF 		bl	CapSense_BaseInit
 188              	.LVL19:
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 10


 189              	.L12:
 315:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 190              		.loc 1 315 0 discriminator 2
 191 0024 0134     		add	r4, r4, #1
 192              	.LVL20:
 193              	.L11:
 315:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 194              		.loc 1 315 0 is_stmt 0 discriminator 1
 195 0026 092C     		cmp	r4, #9
 196 0028 F3D9     		bls	.L13
 324:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 325:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 326:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 197              		.loc 1 326 0 is_stmt 1
 198              		@ sp needed
 199              	.LVL21:
 200 002a 10BD     		pop	{r4, pc}
 201              	.L15:
 202              		.align	2
 203              	.L14:
 204 002c 00000000 		.word	CapSense_sensorEnableMask
 205              		.cfi_endproc
 206              	.LFE38:
 207              		.size	CapSense_InitializeEnabledBaselines, .-CapSense_InitializeEnabledBaselines
 208              		.section	.text.CapSense_GetBaselineData,"ax",%progbits
 209              		.align	2
 210              		.global	CapSense_GetBaselineData
 211              		.code	16
 212              		.thumb_func
 213              		.type	CapSense_GetBaselineData, %function
 214              	CapSense_GetBaselineData:
 215              	.LFB43:
 327:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 328:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 329:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 330:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateBaselineNoThreshold
 331:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 332:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 333:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 334:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the
 335:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by
 336:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 337:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor].
 338:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold.
 339:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating; baseline is loaded
 340:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  with a raw count value if a signal is greater than zero and if signal is less
 341:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  than noise threshold.
 342:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline
 343:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 344:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 345:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API does not update the thresholds in the Smartsense Mode.
 346:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 347:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 348:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 349:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 350:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 351:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 11


 352:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 353:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 354:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
 355:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store baseline value.
 356:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store fraction byte of
 357:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline value.
 358:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store difference between
 359:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
 360:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store previous sample of
 361:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
 362:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before previous sample
 363:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 364:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 365:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 366:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 367:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 368:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 369:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateBaselineNoThreshold(uint32 sensor)
 370:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 371:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 calc;
 372:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sign;
 373:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 tempRaw;
 374:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 filteredRawData;
 375:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 widget = CapSense_widgetNumber[sensor];
 376:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 noiseThreshold;
 377:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 378:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 379:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 380:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 381:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 382:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 383:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 384:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     noiseThreshold = CapSense_noiseThreshold[widget];
 385:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     filteredRawData = CapSense_sensorRaw[sensor];
 386:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 387:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_RAW_FILTER_MASK != 0u)
 388:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if(CapSense_enableRawFilters != 0u)
 389:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 390:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)
 391:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             tempRaw = filteredRawData;
 392:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_MedianFilter(filteredRawData, CapSense_rawFilterData1[sensor
 393:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                             CapSense_rawFilterData2[sensor]);
 394:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 395:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = tempRaw;
 396:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 397:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)
 398:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             tempRaw = filteredRawData;
 399:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_AveragingFilter(filteredRawData, CapSense_rawFilterData1[sen
 400:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                CapSense_rawFilterData2[sensor]);
 401:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 402:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = tempRaw;
 403:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 404:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)
 405:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR2Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 406:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 407:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 408:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 12


 409:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR4Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 410:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 411:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 412:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)
 413:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_JitterFilter(filteredRawData, CapSense_rawFilterData1[sensor
 414:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 415:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 416:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)
 417:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR8Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 418:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 419:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 420:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)
 421:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR16Filter(filteredRawData, CapSense_rawFilterData1[sensor]
 422:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 423:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 424:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 425:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* No Raw filters */
 426:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) */
 427:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 428:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
 429:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 430:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
 431:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         MeasureNoiseEnvelope_P4_v2_30(&CapSense_config, (uint8)sensor, CapSense_sensorRaw);
 432:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 433:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 434:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Baseline calculation */
 435:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 436:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if(filteredRawData >= CapSense_sensorBaseline[sensor])
 437:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 438:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_lowBaselineResetCnt[sensor] = 0u;
 439:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = filteredRawData - CapSense_sensorBaseline[sensor];
 440:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 441:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 442:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 443:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 444:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = CapSense_sensorBaseline[sensor] - filteredRawData;
 445:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 446:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 447:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 448:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 449:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if((sign == 0u) && (tempRaw > (uint16) CapSense_negativeNoiseThreshold[widget]))
 450:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 451:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if((sign == 0u) && (tempRaw > (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD))
 452:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 453:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 454:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_lowBaselineResetCnt[sensor] >= CapSense_lowBaselineReset[sensor])
 455:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 456:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(sensor);
 457:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor] = 0u;
 458:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 459:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
 460:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 461:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor]++;
 462:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 463:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 464:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 465:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 13


 466:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 467:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 468:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Update Baseline if lower than noiseThreshold */
 469:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if ( (tempRaw <= noiseThreshold) ||
 470:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 471:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                && (sign == 0u)))
 472:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 473:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 474:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Update Baseline if lower than noiseThreshold */
 475:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if ( (tempRaw <= noiseThreshold) ||
 476:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                  ((tempRaw < (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD)
 477:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                    && (sign == 0u)))
 478:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 479:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 480:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 481:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make full Baseline 23 bits */
 482:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc = (uint32) CapSense_sensorBaseline[sensor] << 8u;
 483:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc |= (uint32) CapSense_sensorBaselineLow[sensor];
 484:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 485:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Add Raw Data to Baseline */
 486:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc += filteredRawData;
 487:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 488:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Sub the high Baseline */
 489:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc -= CapSense_sensorBaseline[sensor];
 490:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 491:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Put Baseline and BaselineLow */
 492:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 493:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaselineLow[sensor] = ((uint8) calc);
 494:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 495:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_lowBaselineResetCnt[sensor] = 0u;
 496:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 497:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 498:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 499:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 500:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 501:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate Signal if positive difference > noiseThreshold */
 502:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (sign != 0u))
 503:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 504:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8)
 505:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Over flow defence for uint8 */
 506:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (tempRaw > 0xFFu)
 507:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 508:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = 0xFFu;
 509:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 510:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
 511:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 512:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = ((uint8) tempRaw);
 513:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 514:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 515:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_sensorSignal[sensor] = ((uint16) tempRaw);
 516:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8) */
 517:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 518:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 519:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 520:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Signal is zero */
 521:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_sensorSignal[sensor] = 0u;
 522:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 14


 523:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 524:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 525:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 526:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 527:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 528:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 529:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 530:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 531:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 532:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateSensorBaseline
 533:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 534:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 535:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 536:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the
 537:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by
 538:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 539:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor].
 540:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold.
 541:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating.
 542:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Baseline is loaded with raw count value if a signal is greater than zero and
 543:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  if signal is less than noise threshold.
 544:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline
 545:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 546:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API updates the thresholds in the Smartsense Mode.
 547:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 548:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 549:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 550:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 551:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 552:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 553:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 554:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 555:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
 556:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 557:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 558:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 559:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 560:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 561:.\Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateSensorBaseline(uint32 sensor)
 562:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 563:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 564:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 widget;
 565:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 566:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         widget = CapSense_widgetNumber[sensor];
 567:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 568:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 569:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 570:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 571:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 572:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 573:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
 574:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_UpdateThresholds(sensor);
 575:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 576:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 577:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_UpdateBaselineNoThreshold(sensor);
 578:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 579:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 15


 580:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 581:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 582:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 583:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 584:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 585:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 586:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 587:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateEnabledBaselines
 588:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 589:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 590:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 591:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the
 592:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines
 593:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors.
 594:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 595:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 596:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 597:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 598:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 599:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 600:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 601:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 602:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
 603:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 604:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
 605:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 606:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
 607:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 608:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 609:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 610:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 611:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 612:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 613:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 614:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 615:.\Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateEnabledBaselines(void)
 616:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 617:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 618:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 619:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 620:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 621:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 622:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 623:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 624:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 625:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 626:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 627:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 628:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 629:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 630:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 631:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 632:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateWidgetBaseline
 633:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 634:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 635:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 636:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 16


 637:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines
 638:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors that belong to widget.
 639:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 640:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 641:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  Widget number.
 642:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 643:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 644:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 645:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 646:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 647:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
 648:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 649:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
 650:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 651:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
 652:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 653:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 654:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 655:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 656:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 657:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 658:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 659:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 660:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateWidgetBaseline(uint32 widget)
 661:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 662:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sensorsPerWidget;
 663:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 firstSensor;
 664:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 lastSensor;
 665:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 666:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 667:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 668:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get number of sensors in widget */
 669:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     sensorsPerWidget = CapSense_numberOfSensors[widget];
 670:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 671:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get first sensor in widget */
 672:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     firstSensor = CapSense_rawDataIndex[widget];
 673:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 674:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get last sensor in widget */
 675:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     lastSensor = (CapSense_rawDataIndex[widget] + sensorsPerWidget);
 676:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 677:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 678:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 679:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 680:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 681:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 682:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 683:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 684:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 685:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 686:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 687:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 688:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 689:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 690:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetBaselineData
 691:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 692:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 693:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 17


 694:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the sensor baseline from the component.
 695:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 696:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 697:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 698:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 699:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 700:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the baseline value of the sensor indicated by an argument.
 701:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 702:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 703:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with an initial values by scanning
 704:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 705:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 706:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 707:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 708:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 709:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_GetBaselineData(uint32 sensor)
 710:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 216              		.loc 1 710 0
 217              		.cfi_startproc
 218              	.LVL22:
 711:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_sensorBaseline[sensor]);
 219              		.loc 1 711 0
 220 0000 4000     		lsl	r0, r0, #1
 221              	.LVL23:
 222 0002 014B     		ldr	r3, .L17
 223 0004 185A     		ldrh	r0, [r3, r0]
 712:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 224              		.loc 1 712 0
 225              		@ sp needed
 226 0006 7047     		bx	lr
 227              	.L18:
 228              		.align	2
 229              	.L17:
 230 0008 00000000 		.word	.LANCHOR0
 231              		.cfi_endproc
 232              	.LFE43:
 233              		.size	CapSense_GetBaselineData, .-CapSense_GetBaselineData
 234              		.section	.text.CapSense_SetBaselineData,"ax",%progbits
 235              		.align	2
 236              		.global	CapSense_SetBaselineData
 237              		.code	16
 238              		.thumb_func
 239              		.type	CapSense_SetBaselineData, %function
 240              	CapSense_SetBaselineData:
 241              	.LFB44:
 713:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 714:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 715:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 716:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetBaselineData
 717:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 718:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 719:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 720:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor baseline array.
 721:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 722:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 723:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 724:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  data:    Sensor baseline.
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 18


 725:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 726:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 727:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 728:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 729:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 730:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with initial values by scanning
 731:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 732:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 733:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 734:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 735:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 736:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetBaselineData(uint32 sensor, uint16 data)
 737:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 242              		.loc 1 737 0
 243              		.cfi_startproc
 244              	.LVL24:
 738:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaseline[sensor] = data;
 245              		.loc 1 738 0
 246 0000 4000     		lsl	r0, r0, #1
 247              	.LVL25:
 248 0002 014B     		ldr	r3, .L20
 249 0004 C152     		strh	r1, [r0, r3]
 739:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 250              		.loc 1 739 0
 251              		@ sp needed
 252 0006 7047     		bx	lr
 253              	.L21:
 254              		.align	2
 255              	.L20:
 256 0008 00000000 		.word	.LANCHOR0
 257              		.cfi_endproc
 258              	.LFE44:
 259              		.size	CapSense_SetBaselineData, .-CapSense_SetBaselineData
 260              		.section	.text.CapSense_GetDiffCountData,"ax",%progbits
 261              		.align	2
 262              		.global	CapSense_GetDiffCountData
 263              		.code	16
 264              		.thumb_func
 265              		.type	CapSense_GetDiffCountData, %function
 266              	CapSense_GetDiffCountData:
 267              	.LFB45:
 740:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 741:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 742:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 743:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDiffCountData
 744:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 745:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 746:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 747:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function returns the Sensor Signal from the component.
 748:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 749:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 750:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 751:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 752:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 753:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the difference count value of the sensor indicated by the
 754:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  argument.
 755:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 19


 756:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 757:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 758:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 759:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 760:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 761:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 762:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 763:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_GetDiffCountData(uint32 sensor)
 764:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 268              		.loc 1 764 0
 269              		.cfi_startproc
 270              	.LVL26:
 765:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_sensorSignal[sensor]);
 271              		.loc 1 765 0
 272 0000 4000     		lsl	r0, r0, #1
 273              	.LVL27:
 274 0002 024B     		ldr	r3, .L23
 275 0004 1818     		add	r0, r3, r0
 276 0006 008C     		ldrh	r0, [r0, #32]
 766:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 277              		.loc 1 766 0
 278              		@ sp needed
 279 0008 7047     		bx	lr
 280              	.L24:
 281 000a C046     		.align	2
 282              	.L23:
 283 000c 00000000 		.word	.LANCHOR0
 284              		.cfi_endproc
 285              	.LFE45:
 286              		.size	CapSense_GetDiffCountData, .-CapSense_GetDiffCountData
 287              		.section	.text.CapSense_SetDiffCountData,"ax",%progbits
 288              		.align	2
 289              		.global	CapSense_SetDiffCountData
 290              		.code	16
 291              		.thumb_func
 292              		.type	CapSense_SetDiffCountData, %function
 293              	CapSense_SetDiffCountData:
 294              	.LFB46:
 767:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 768:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 769:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 770:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetDiffCountData
 771:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 772:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 773:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 774:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor signal array.
 775:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 776:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 777:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 778:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  value:   Sensor signal.
 779:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 780:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 781:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 782:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 783:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 784:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 785:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 20


 786:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 787:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 788:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 789:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 790:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetDiffCountData(uint32 sensor, uint16 value)
 791:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 295              		.loc 1 791 0
 296              		.cfi_startproc
 297              	.LVL28:
 792:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = value;
 298              		.loc 1 792 0
 299 0000 4000     		lsl	r0, r0, #1
 300              	.LVL29:
 301 0002 024B     		ldr	r3, .L26
 302 0004 1818     		add	r0, r3, r0
 303 0006 0184     		strh	r1, [r0, #32]
 793:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 304              		.loc 1 793 0
 305              		@ sp needed
 306 0008 7047     		bx	lr
 307              	.L27:
 308 000a C046     		.align	2
 309              	.L26:
 310 000c 00000000 		.word	.LANCHOR0
 311              		.cfi_endproc
 312              	.LFE46:
 313              		.size	CapSense_SetDiffCountData, .-CapSense_SetDiffCountData
 314              		.section	.text.CapSense_GetFingerThreshold,"ax",%progbits
 315              		.align	2
 316              		.global	CapSense_GetFingerThreshold
 317              		.code	16
 318              		.thumb_func
 319              		.type	CapSense_GetFingerThreshold, %function
 320              	CapSense_GetFingerThreshold:
 321              	.LFB47:
 794:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 795:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 796:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 797:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerThreshold
 798:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 799:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 800:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 801:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the finger threshold from the component.
 802:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 803:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 804:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 805:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 806:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 807:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the finger threshold of the widget indicated by the argument.
 808:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 809:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 810:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_fingerThreshold[] - This array contains the level of signal
 811:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that is determined if a finger is present on the widget.
 812:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 813:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 814:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 815:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 21


 816:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 817:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_GetFingerThreshold(uint32 widget)
 818:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 322              		.loc 1 818 0
 323              		.cfi_startproc
 324              	.LVL30:
 819:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_fingerThreshold[widget]);
 325              		.loc 1 819 0
 326 0000 4000     		lsl	r0, r0, #1
 327              	.LVL31:
 328 0002 024B     		ldr	r3, .L29
 329 0004 1818     		add	r0, r3, r0
 330 0006 8089     		ldrh	r0, [r0, #12]
 820:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 331              		.loc 1 820 0
 332              		@ sp needed
 333 0008 7047     		bx	lr
 334              	.L30:
 335 000a C046     		.align	2
 336              	.L29:
 337 000c 00000000 		.word	.LANCHOR1
 338              		.cfi_endproc
 339              	.LFE47:
 340              		.size	CapSense_GetFingerThreshold, .-CapSense_GetFingerThreshold
 341              		.section	.text.CapSense_GetNoiseThreshold,"ax",%progbits
 342              		.align	2
 343              		.global	CapSense_GetNoiseThreshold
 344              		.code	16
 345              		.thumb_func
 346              		.type	CapSense_GetNoiseThreshold, %function
 347              	CapSense_GetNoiseThreshold:
 348              	.LFB48:
 821:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 822:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 823:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 824:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNoiseThreshold
 825:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 826:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 827:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 828:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the noise threshold from the component.
 829:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 830:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 831:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 832:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 833:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 834:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the noise threshold of the widget indicated by the argument.
 835:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 836:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 837:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_noiseThreshold[] - This array contains the level of signal
 838:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that determines the level of noise in the capacitive scan.
 839:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 840:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 841:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 842:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 843:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 844:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_GetNoiseThreshold(uint32 widget)
 845:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 22


 349              		.loc 1 845 0
 350              		.cfi_startproc
 351              	.LVL32:
 846:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_noiseThreshold[widget]);
 352              		.loc 1 846 0
 353 0000 4000     		lsl	r0, r0, #1
 354              	.LVL33:
 355 0002 024B     		ldr	r3, .L32
 356 0004 1818     		add	r0, r3, r0
 357 0006 008C     		ldrh	r0, [r0, #32]
 847:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 358              		.loc 1 847 0
 359              		@ sp needed
 360 0008 7047     		bx	lr
 361              	.L33:
 362 000a C046     		.align	2
 363              	.L32:
 364 000c 00000000 		.word	.LANCHOR1
 365              		.cfi_endproc
 366              	.LFE48:
 367              		.size	CapSense_GetNoiseThreshold, .-CapSense_GetNoiseThreshold
 368              		.section	.text.CapSense_GetFingerHysteresis,"ax",%progbits
 369              		.align	2
 370              		.global	CapSense_GetFingerHysteresis
 371              		.code	16
 372              		.thumb_func
 373              		.type	CapSense_GetFingerHysteresis, %function
 374              	CapSense_GetFingerHysteresis:
 375              	.LFB49:
 848:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 849:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 850:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 851:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerHysteresis
 852:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 853:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 854:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 855:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the Hysteresis value from the component.
 856:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 857:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 858:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 859:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 860:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 861:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the Hysteresis of the widget indicated by the argument.
 862:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 863:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 864:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_hysteresis[] - This array contains the hysteresis value
 865:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   for each widget.
 866:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 867:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 868:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 869:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 870:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 871:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 872:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_GetFingerHysteresis(uint32 widget)
 873:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 376              		.loc 1 873 0
 377              		.cfi_startproc
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 23


 378              	.LVL34:
 874:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_hysteresis[widget]);
 379              		.loc 1 874 0
 380 0000 4000     		lsl	r0, r0, #1
 381              	.LVL35:
 382 0002 024B     		ldr	r3, .L35
 383 0004 1818     		add	r0, r3, r0
 384 0006 808E     		ldrh	r0, [r0, #52]
 875:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 385              		.loc 1 875 0
 386              		@ sp needed
 387 0008 7047     		bx	lr
 388              	.L36:
 389 000a C046     		.align	2
 390              	.L35:
 391 000c 00000000 		.word	.LANCHOR1
 392              		.cfi_endproc
 393              	.LFE49:
 394              		.size	CapSense_GetFingerHysteresis, .-CapSense_GetFingerHysteresis
 395              		.section	.text.CapSense_GetNegativeNoiseThreshold,"ax",%progbits
 396              		.align	2
 397              		.global	CapSense_GetNegativeNoiseThreshold
 398              		.code	16
 399              		.thumb_func
 400              		.type	CapSense_GetNegativeNoiseThreshold, %function
 401              	CapSense_GetNegativeNoiseThreshold:
 402              	.LFB50:
 876:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 877:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 878:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 879:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNegativeNoiseThreshold
 880:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 881:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 882:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 883:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the negative noise threshold from the component.
 884:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 885:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 886:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 887:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 888:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return Value:
 889:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the negative noise threshold
 890:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 891:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 892:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_negativeNoiseThreshold - This variable specifies the negative
 893:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   difference between the raw count and baseline levels for Baseline resetting
 894:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   to the raw count level.
 895:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 896:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 897:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 898:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 899:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 900:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_GetNegativeNoiseThreshold(uint32 widget)
 901:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 403              		.loc 1 901 0
 404              		.cfi_startproc
 405              	.LVL36:
 902:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 24


 903:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_negativeNoiseThreshold[widget]);
 904:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #else
 905:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_NEGATIVE_NOISE_THRESHOLD);
 906:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 907:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 406              		.loc 1 907 0
 407 0000 1420     		mov	r0, #20
 408              	.LVL37:
 409              		@ sp needed
 410 0002 7047     		bx	lr
 411              		.cfi_endproc
 412              	.LFE50:
 413              		.size	CapSense_GetNegativeNoiseThreshold, .-CapSense_GetNegativeNoiseThreshold
 414              		.section	.text.CapSense_CheckIsSensorActive,"ax",%progbits
 415              		.align	2
 416              		.global	CapSense_CheckIsSensorActive
 417              		.code	16
 418              		.thumb_func
 419              		.type	CapSense_CheckIsSensorActive, %function
 420              	CapSense_CheckIsSensorActive:
 421              	.LFB51:
 908:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 909:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 910:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 911:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 912:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetFingerThreshold
 913:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 914:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 915:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 916:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the finger threshold value for a widget.
 917:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 918:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 919:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensorNumber:  widget index.
 920:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Finger threshold value for the widget.
 921:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 922:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 923:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 924:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 925:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 926:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_fingerThreshold[] - This array contains the level of signal
 927:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   for each widget that determines if a finger is present on the widget.
 928:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 929:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 930:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 931:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 932:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 933:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetFingerThreshold(uint32 widget, uint16 value)
 934:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 935:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_fingerThreshold[widget] = value;
 936:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 937:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 938:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 939:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 940:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetNoiseThreshold
 941:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 942:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 943:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 25


 944:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Noise Threshold value for each widget.
 945:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 946:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 947:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Sensor index number.
 948:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:   Noise Threshold value for widget.
 949:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 950:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 951:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 952:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 953:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 954:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_noiseThreshold[] - This array contains the level of signal
 955:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   for each widget that determines the level of noise in the capacitive scan.
 956:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 957:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 958:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 959:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 960:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 961:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetNoiseThreshold(uint32 widget, uint16 value)
 962:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 963:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_noiseThreshold[widget] = value;
 964:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 965:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 966:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 967:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 968:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetFingerHysteresis
 969:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 970:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 971:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 972:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Hysteresis value of a widget
 973:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 974:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 975:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Hysteresis value for widgets.
 976:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  widget number
 977:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 978:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 979:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 980:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 981:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 982:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_hysteresis[] - This array contains the hysteresis value for each widget.
 983:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 984:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 985:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 986:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 987:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 988:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 989:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetFingerHysteresis(uint32 widget, uint16 value)
 990:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 991:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_hysteresis[widget] = value;
 992:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 993:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 994:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 995:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 996:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetNegativeNoiseThreshold
 997:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 998:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 999:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1000:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Negative Noise Threshold value of a widget
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 26


1001:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1002:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1003:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Negative Noise Threshold value for widgets.
1004:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget: widget number
1005:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1006:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
1007:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1008:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1009:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1010:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_negativeNoiseThreshold  - This parameter specifies the negative
1011:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   difference between the raw count and baseline levels for Baseline resetting to
1012:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   the raw count level.
1013:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1014:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1015:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1016:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1017:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1018:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetNegativeNoiseThreshold(uint32 widget, uint16 value)
1019:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1020:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_negativeNoiseThreshold[widget] = value;
1021:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1022:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1023:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1024:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1025:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetDebounce
1026:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1027:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1028:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1029:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the debounce value for a widget.
1030:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1031:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1032:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Debounce value for widget.
1033:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget: widget index.
1034:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1035:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
1036:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1037:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1038:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1039:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_debounce[] - This array contains the debounce value for each widget.
1040:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
1041:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1042:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1043:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1044:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1045:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1046:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetDebounce(uint32 widget, uint8 value)
1047:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1048:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_debounce[widget] = value;
1049:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1050:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1051:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1052:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1053:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetLowBaselineReset
1054:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1055:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1056:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1057:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the low baseline reset threshold value for the sensor.
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 27


1058:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1059:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1060:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value: low baseline reset threshold value.
1061:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensor: Sensor index.
1062:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1063:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
1064:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1065:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1066:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1067:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_lowBaselineReset[] - This array contains the Baseline update
1068:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold value for each sensor.
1069:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1070:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1071:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1072:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1073:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1074:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetLowBaselineReset(uint32 sensor, uint8 value)
1075:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1076:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_lowBaselineReset[sensor] = value;
1077:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1078:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
1079:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1080:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1081:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1082:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsSensorActive
1083:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1084:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1085:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1086:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[sensor] array element to the finger
1087:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold of the widget it belongs to. The hysteresis and debounce are taken into
1088:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold
1089:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  based on whether the sensor is currently active.
1090:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
1091:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
1092:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  The debounce counter is added to the sensor active transition.
1093:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function updates the CapSense_sensorOnMask[] array element.
1094:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1095:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1096:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
1097:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1098:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1099:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
1100:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1101:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1102:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - used to store the difference between
1103:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and a previous value of the baseline.
1104:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounceCounter[]   - used to store the current debounce
1105:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  counter of the sensor. the widget which have this parameter are buttons, matrix
1106:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  buttons, proximity, and guard. All other widgets don't have the  debounce parameter
1107:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
1108:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[] - used to store the sensors on/off state.
1109:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[0] contains the masked bits for sensors
1110:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1111:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1112:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1113:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor is inactive.
1114:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is active.
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 28


1115:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1116:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1117:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1118:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1119:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1120:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsSensorActive(uint32 sensor)
1121:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 422              		.loc 1 1121 0
 423              		.cfi_startproc
 424              	.LVL38:
 425 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 426              		.cfi_def_cfa_offset 20
 427              		.cfi_offset 4, -20
 428              		.cfi_offset 5, -16
 429              		.cfi_offset 6, -12
 430              		.cfi_offset 7, -8
 431              		.cfi_offset 14, -4
 432 0002 4746     		mov	r7, r8
 433 0004 80B4     		push	{r7}
 434              		.cfi_def_cfa_offset 24
 435              		.cfi_offset 8, -24
 436 0006 041C     		mov	r4, r0
1122:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 widget;
1123:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 debounce;
1124:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 debounceIndex;
1125:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1126:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 fingerThreshold;
1127:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 hysteresis;
1128:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1129:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1130:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Prepare to find debounce counter index */
1131:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     widget = CapSense_widgetNumber[sensor];
 437              		.loc 1 1131 0
 438 0008 224B     		ldr	r3, .L43
 439 000a 1E5C     		ldrb	r6, [r3, r0]
1132:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1133:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     fingerThreshold = CapSense_fingerThreshold[widget];
 440              		.loc 1 1133 0
 441 000c 224A     		ldr	r2, .L43+4
 442 000e 7300     		lsl	r3, r6, #1
 443 0010 D318     		add	r3, r2, r3
 444 0012 9F89     		ldrh	r7, [r3, #12]
 445              	.LVL39:
1134:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     hysteresis = CapSense_hysteresis[widget];
 446              		.loc 1 1134 0
 447 0014 9D8E     		ldrh	r5, [r3, #52]
 448              	.LVL40:
1135:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     debounce = CapSense_debounce[widget];
 449              		.loc 1 1135 0
 450 0016 935D     		ldrb	r3, [r2, r6]
 451 0018 9846     		mov	r8, r3
 452              	.LVL41:
1136:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1137:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         debounceIndex = widget;
1138:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1139:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1140:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Was on */
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 29


1141:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if (0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor))
 453              		.loc 1 1141 0
 454 001a 2048     		ldr	r0, .L43+8
 455              	.LVL42:
 456 001c 4030     		add	r0, r0, #64
 457 001e 211C     		mov	r1, r4
 458 0020 FFF7FEFF 		bl	CapSense_GetBitValue
 459              	.LVL43:
 460 0024 0028     		cmp	r0, #0
 461 0026 11D0     		beq	.L39
1142:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1143:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis minus */
1144:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 462              		.loc 1 1144 0
 463 0028 6300     		lsl	r3, r4, #1
 464 002a 1C4A     		ldr	r2, .L43+8
 465 002c D318     		add	r3, r2, r3
 466 002e 1B8C     		ldrh	r3, [r3, #32]
 467 0030 7D1B     		sub	r5, r7, r5
 468              	.LVL44:
 469 0032 AB42     		cmp	r3, r5
 470 0034 23DA     		bge	.L40
1145:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1146:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 0u);
 471              		.loc 1 1146 0
 472 0036 151C     		mov	r5, r2
 473 0038 101C     		mov	r0, r2
 474 003a 4030     		add	r0, r0, #64
 475 003c 211C     		mov	r1, r4
 476 003e 0022     		mov	r2, #0
 477 0040 FFF7FEFF 		bl	CapSense_SetBitValue
 478              	.LVL45:
1147:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1148:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 479              		.loc 1 1148 0
 480 0044 3435     		add	r5, r5, #52
 481 0046 4346     		mov	r3, r8
 482 0048 AB55     		strb	r3, [r5, r6]
 483 004a 18E0     		b	.L40
 484              	.LVL46:
 485              	.L39:
1149:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1150:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1151:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else    /* Was off */
1152:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1153:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis plus */
1154:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] >= (fingerThreshold + hysteresis))
 486              		.loc 1 1154 0
 487 004c 6300     		lsl	r3, r4, #1
 488 004e 134A     		ldr	r2, .L43+8
 489 0050 D318     		add	r3, r2, r3
 490 0052 1B8C     		ldrh	r3, [r3, #32]
 491 0054 7D19     		add	r5, r7, r5
 492              	.LVL47:
 493 0056 AB42     		cmp	r3, r5
 494 0058 0DDB     		blt	.L41
1155:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 30


1156:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex]--;
 495              		.loc 1 1156 0
 496 005a 3432     		add	r2, r2, #52
 497 005c 935D     		ldrb	r3, [r2, r6]
 498 005e 013B     		sub	r3, r3, #1
 499 0060 DBB2     		uxtb	r3, r3
 500 0062 9355     		strb	r3, [r2, r6]
1157:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor active, decrement debounce counter */
1158:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(CapSense_debounceCounter[debounceIndex] == 0u)
 501              		.loc 1 1158 0
 502 0064 002B     		cmp	r3, #0
 503 0066 0AD1     		bne	.L40
1159:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1160:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 1u);
 504              		.loc 1 1160 0
 505 0068 0C48     		ldr	r0, .L43+8
 506 006a 4030     		add	r0, r0, #64
 507 006c 211C     		mov	r1, r4
 508 006e 0122     		mov	r2, #1
 509 0070 FFF7FEFF 		bl	CapSense_SetBitValue
 510              	.LVL48:
 511 0074 03E0     		b	.L40
 512              	.L41:
1161:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1162:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1163:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1164:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1165:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1166:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 513              		.loc 1 1166 0
 514 0076 094B     		ldr	r3, .L43+8
 515 0078 3433     		add	r3, r3, #52
 516 007a 4246     		mov	r2, r8
 517 007c 9A55     		strb	r2, [r3, r6]
 518              	.L40:
1167:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1168:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1169:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1170:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return ((uint32)((0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor)) ? 1u : 0u));
 519              		.loc 1 1170 0
 520 007e 0748     		ldr	r0, .L43+8
 521 0080 4030     		add	r0, r0, #64
 522 0082 211C     		mov	r1, r4
 523 0084 FFF7FEFF 		bl	CapSense_GetBitValue
 524              	.LVL49:
 525 0088 0028     		cmp	r0, #0
 526 008a 00D0     		beq	.L42
 527 008c 0120     		mov	r0, #1
 528              	.L42:
1171:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 529              		.loc 1 1171 0 discriminator 4
 530              		@ sp needed
 531              	.LVL50:
 532              	.LVL51:
 533              	.LVL52:
 534              	.LVL53:
 535 008e 04BC     		pop	{r2}
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 31


 536 0090 9046     		mov	r8, r2
 537 0092 F0BD     		pop	{r4, r5, r6, r7, pc}
 538              	.L44:
 539              		.align	2
 540              	.L43:
 541 0094 00000000 		.word	CapSense_widgetNumber
 542 0098 00000000 		.word	.LANCHOR1
 543 009c 00000000 		.word	.LANCHOR0
 544              		.cfi_endproc
 545              	.LFE51:
 546              		.size	CapSense_CheckIsSensorActive, .-CapSense_CheckIsSensorActive
 547              		.section	.text.CapSense_CheckIsWidgetActive,"ax",%progbits
 548              		.align	2
 549              		.global	CapSense_CheckIsWidgetActive
 550              		.code	16
 551              		.thumb_func
 552              		.type	CapSense_CheckIsWidgetActive, %function
 553              	CapSense_CheckIsWidgetActive:
 554              	.LFB52:
1172:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1173:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1174:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1175:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsWidgetActive
1176:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1177:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1178:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1179:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[] array element to the finger threshold of
1180:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * the widget it belongs to. The hysteresis and debounce are taken into account.
1181:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * The hysteresis is added or subtracted from the finger threshold based on whether
1182:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the sensor is currently active. If the sensor is active, the threshold is
1183:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  lowered by the hysteresis amount. If the sensor is inactive, the threshold
1184:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  is raised by the hysteresis amount.
1185:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * The debounce counter added to the sensor active transition.
1186:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * This function updates CapSense_sensorOnMask[] array element
1187:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1188:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1189:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1190:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1191:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1192:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are
1193:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
1194:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1195:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1196:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  rawDataIndex[]: Contains the  1st sensor position in the widget
1197:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1198:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1199:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1200:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1201:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1202:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsWidgetActive(uint32 widget)
1203:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 555              		.loc 1 1203 0
 556              		.cfi_startproc
 557              	.LVL54:
 558 0000 70B5     		push	{r4, r5, r6, lr}
 559              		.cfi_def_cfa_offset 16
 560              		.cfi_offset 4, -16
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 32


 561              		.cfi_offset 5, -12
 562              		.cfi_offset 6, -8
 563              		.cfi_offset 14, -4
1204:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 rawIndex = (uint32)CapSense_rawDataIndex[widget];
 564              		.loc 1 1204 0
 565 0002 094B     		ldr	r3, .L49
 566 0004 1A1C     		mov	r2, r3
 567 0006 4832     		add	r2, r2, #72
 568 0008 145C     		ldrb	r4, [r2, r0]
 569              	.LVL55:
1205:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 numOfSensors = (uint32)CapSense_numberOfSensors[widget] + rawIndex;
 570              		.loc 1 1205 0
 571 000a 5433     		add	r3, r3, #84
 572 000c 1D5C     		ldrb	r5, [r3, r0]
 573 000e 2D19     		add	r5, r5, r4
 574              	.LVL56:
1206:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
 575              		.loc 1 1206 0
 576 0010 0026     		mov	r6, #0
 577              	.LVL57:
 578              	.L47:
1207:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1208:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Check all sensors of widget */
1209:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1210:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1211:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_CheckIsSensorActive((uint32)rawIndex) != 0u)
 579              		.loc 1 1211 0
 580 0012 201C     		mov	r0, r4
 581 0014 FFF7FEFF 		bl	CapSense_CheckIsSensorActive
 582              	.LVL58:
 583 0018 0028     		cmp	r0, #0
 584 001a 00D0     		beq	.L46
1212:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1213:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_SENSOR_IS_ACTIVE;
 585              		.loc 1 1213 0
 586 001c 0126     		mov	r6, #1
 587              	.LVL59:
 588              	.L46:
1214:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1215:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 589              		.loc 1 1215 0
 590 001e 0134     		add	r4, r4, #1
 591              	.LVL60:
1216:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1217:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 592              		.loc 1 1217 0
 593 0020 AC42     		cmp	r4, r5
 594 0022 F6D3     		bcc	.L47
1218:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1219:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1220:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1221:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
1222:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 595              		.loc 1 1222 0
 596 0024 301C     		mov	r0, r6
 597              		@ sp needed
 598              	.LVL61:
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 33


 599              	.LVL62:
 600              	.LVL63:
 601 0026 70BD     		pop	{r4, r5, r6, pc}
 602              	.L50:
 603              		.align	2
 604              	.L49:
 605 0028 00000000 		.word	.LANCHOR1
 606              		.cfi_endproc
 607              	.LFE52:
 608              		.size	CapSense_CheckIsWidgetActive, .-CapSense_CheckIsWidgetActive
 609              		.section	.text.CapSense_CheckIsAnyWidgetActive,"ax",%progbits
 610              		.align	2
 611              		.global	CapSense_CheckIsAnyWidgetActive
 612              		.code	16
 613              		.thumb_func
 614              		.type	CapSense_CheckIsAnyWidgetActive, %function
 615              	CapSense_CheckIsAnyWidgetActive:
 616              	.LFB53:
1223:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1224:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1225:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1226:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsAnyWidgetActive
1227:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1228:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1229:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1230:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares all the sensors of the CapSense_Signal[] array to their finger
1231:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold. Calls CapSense_CheckIsWidgetActive() for each widget so
1232:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the CapSense_sensorOnMask[] array is up to date after calling this
1233:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  function.
1234:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1235:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1236:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1237:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1238:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1239:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
1240:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1241:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1242:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1243:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1244:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1245:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1246:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1247:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1248:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsAnyWidgetActive(void)
1249:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 617              		.loc 1 1249 0
 618              		.cfi_startproc
 619 0000 38B5     		push	{r3, r4, r5, lr}
 620              		.cfi_def_cfa_offset 16
 621              		.cfi_offset 3, -16
 622              		.cfi_offset 4, -12
 623              		.cfi_offset 5, -8
 624              		.cfi_offset 14, -4
 625              	.LVL64:
1250:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1251:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 i;
1252:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 34


 626              		.loc 1 1252 0
 627 0002 0025     		mov	r5, #0
1253:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1254:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 628              		.loc 1 1254 0
 629 0004 0024     		mov	r4, #0
 630 0006 06E0     		b	.L52
 631              	.LVL65:
 632              	.L54:
1255:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1256:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(i) != 0u)
 633              		.loc 1 1256 0
 634 0008 201C     		mov	r0, r4
 635 000a FFF7FEFF 		bl	CapSense_CheckIsWidgetActive
 636              	.LVL66:
 637 000e 0028     		cmp	r0, #0
 638 0010 00D0     		beq	.L53
1257:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1258:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_WIDGET_IS_ACTIVE;
 639              		.loc 1 1258 0
 640 0012 0125     		mov	r5, #1
 641              	.LVL67:
 642              	.L53:
1254:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 643              		.loc 1 1254 0 discriminator 2
 644 0014 0134     		add	r4, r4, #1
 645              	.LVL68:
 646              	.L52:
1254:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 647              		.loc 1 1254 0 is_stmt 0 discriminator 1
 648 0016 092C     		cmp	r4, #9
 649 0018 F6D9     		bls	.L54
1259:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1260:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1261:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1262:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1263:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1264:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
1265:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 650              		.loc 1 1265 0 is_stmt 1
 651 001a 281C     		mov	r0, r5
 652              		@ sp needed
 653              	.LVL69:
 654              	.LVL70:
 655 001c 38BD     		pop	{r3, r4, r5, pc}
 656              		.cfi_endproc
 657              	.LFE53:
 658              		.size	CapSense_CheckIsAnyWidgetActive, .-CapSense_CheckIsAnyWidgetActive
 659 001e C046     		.section	.text.CapSense_EnableWidget,"ax",%progbits
 660              		.align	2
 661              		.global	CapSense_EnableWidget
 662              		.code	16
 663              		.thumb_func
 664              		.type	CapSense_EnableWidget, %function
 665              	CapSense_EnableWidget:
 666              	.LFB54:
1266:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 35


1267:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1268:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1269:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_EnableWidget
1270:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1271:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1272:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1273:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Enables all the widget elements (sensors) to the scanning process.
1274:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1275:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1276:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1277:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1278:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1279:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1280:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1281:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1282:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
1283:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1284:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
1285:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1286:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1287:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1288:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
1289:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
1290:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1291:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1292:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1293:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1294:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1295:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_EnableWidget(uint32 widget)
1296:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 667              		.loc 1 1296 0
 668              		.cfi_startproc
 669              	.LVL71:
 670 0000 38B5     		push	{r3, r4, r5, lr}
 671              		.cfi_def_cfa_offset 16
 672              		.cfi_offset 3, -16
 673              		.cfi_offset 4, -12
 674              		.cfi_offset 5, -8
 675              		.cfi_offset 14, -4
1297:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1298:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 676              		.loc 1 1298 0
 677 0002 094B     		ldr	r3, .L58
 678 0004 1A1C     		mov	r2, r3
 679 0006 4832     		add	r2, r2, #72
 680 0008 145C     		ldrb	r4, [r2, r0]
 681              	.LVL72:
1299:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 682              		.loc 1 1299 0
 683 000a 5433     		add	r3, r3, #84
 684 000c 1D5C     		ldrb	r5, [r3, r0]
 685 000e 2D19     		add	r5, r5, r4
 686 0010 EDB2     		uxtb	r5, r5
 687              	.LVL73:
 688              	.L57:
1300:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1301:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Enable all sensors of widget */
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 36


1302:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1303:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1304:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 1u);
 689              		.loc 1 1304 0 discriminator 1
 690 0012 0648     		ldr	r0, .L58+4
 691 0014 211C     		mov	r1, r4
 692 0016 0122     		mov	r2, #1
 693 0018 FFF7FEFF 		bl	CapSense_SetBitValue
 694              	.LVL74:
1305:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 695              		.loc 1 1305 0 discriminator 1
 696 001c 0134     		add	r4, r4, #1
 697              	.LVL75:
 698 001e E4B2     		uxtb	r4, r4
 699              	.LVL76:
1306:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1307:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 700              		.loc 1 1307 0 discriminator 1
 701 0020 AC42     		cmp	r4, r5
 702 0022 F6D3     		bcc	.L57
1308:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 703              		.loc 1 1308 0
 704              		@ sp needed
 705              	.LVL77:
 706              	.LVL78:
 707 0024 38BD     		pop	{r3, r4, r5, pc}
 708              	.L59:
 709 0026 C046     		.align	2
 710              	.L58:
 711 0028 00000000 		.word	.LANCHOR1
 712 002c 00000000 		.word	CapSense_sensorEnableMask
 713              		.cfi_endproc
 714              	.LFE54:
 715              		.size	CapSense_EnableWidget, .-CapSense_EnableWidget
 716              		.section	.text.CapSense_DisableWidget,"ax",%progbits
 717              		.align	2
 718              		.global	CapSense_DisableWidget
 719              		.code	16
 720              		.thumb_func
 721              		.type	CapSense_DisableWidget, %function
 722              	CapSense_DisableWidget:
 723              	.LFB55:
1309:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1310:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1311:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1312:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_DisableWidget
1313:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1314:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1315:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1316:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Disables all the widget elements (sensors) from the scanning process.
1317:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1318:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1319:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1320:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1321:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1322:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1323:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 37


1324:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1325:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
1326:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1327:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
1328:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1329:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1330:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1331:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor isn't scanned by CapSense_ScanEnabledWidgets().
1332:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is scanned by CapSense_ScanEnabledWidgets().
1333:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1334:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1335:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1336:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1337:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1338:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_DisableWidget(uint32 widget)
1339:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 724              		.loc 1 1339 0
 725              		.cfi_startproc
 726              	.LVL79:
 727 0000 38B5     		push	{r3, r4, r5, lr}
 728              		.cfi_def_cfa_offset 16
 729              		.cfi_offset 3, -16
 730              		.cfi_offset 4, -12
 731              		.cfi_offset 5, -8
 732              		.cfi_offset 14, -4
1340:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 733              		.loc 1 1340 0
 734 0002 094B     		ldr	r3, .L62
 735 0004 1A1C     		mov	r2, r3
 736 0006 4832     		add	r2, r2, #72
 737 0008 145C     		ldrb	r4, [r2, r0]
 738              	.LVL80:
1341:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 739              		.loc 1 1341 0
 740 000a 5433     		add	r3, r3, #84
 741 000c 1D5C     		ldrb	r5, [r3, r0]
 742 000e 2D19     		add	r5, r5, r4
 743 0010 EDB2     		uxtb	r5, r5
 744              	.LVL81:
 745              	.L61:
1342:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1343:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Disable all sensors of widget */
1344:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1345:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1346:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1347:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 0u);
 746              		.loc 1 1347 0 discriminator 1
 747 0012 0648     		ldr	r0, .L62+4
 748 0014 211C     		mov	r1, r4
 749 0016 0022     		mov	r2, #0
 750 0018 FFF7FEFF 		bl	CapSense_SetBitValue
 751              	.LVL82:
1348:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 752              		.loc 1 1348 0 discriminator 1
 753 001c 0134     		add	r4, r4, #1
 754              	.LVL83:
 755 001e E4B2     		uxtb	r4, r4
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 38


 756              	.LVL84:
1349:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1350:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 757              		.loc 1 1350 0 discriminator 1
 758 0020 AC42     		cmp	r4, r5
 759 0022 F6D3     		bcc	.L61
1351:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 760              		.loc 1 1351 0
 761              		@ sp needed
 762              	.LVL85:
 763              	.LVL86:
 764 0024 38BD     		pop	{r3, r4, r5, pc}
 765              	.L63:
 766 0026 C046     		.align	2
 767              	.L62:
 768 0028 00000000 		.word	.LANCHOR1
 769 002c 00000000 		.word	CapSense_sensorEnableMask
 770              		.cfi_endproc
 771              	.LFE55:
 772              		.size	CapSense_DisableWidget, .-CapSense_DisableWidget
 773              		.section	.text.CapSense_IIR4Filter,"ax",%progbits
 774              		.align	2
 775              		.global	CapSense_IIR4Filter
 776              		.code	16
 777              		.thumb_func
 778              		.type	CapSense_IIR4Filter, %function
 779              	CapSense_IIR4Filter:
 780              	.LFB56:
1352:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1353:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1354:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1355:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1356:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_FindMaximum
1357:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1358:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1359:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1360:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Finds the index of the maximum element within a defined centroid. Checks
1361:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_sensorSignal[] within a defined centroid and
1362:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  returns the index of the maximum element. The values below the finger threshold are
1363:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  ignored.
1364:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The centroid is defined by offset of the first element and a number of elements - count.
1365:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The diplexed centroid requires at least two consecutive elements above
1366:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  FingerThreshold to find the index of the maximum element.
1367:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1368:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1369:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:  Start index of centroid in CapSense_sensorSignal[] array.
1370:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:   number of elements within centroid.
1371:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  fingerThreshold:  Finger threshold.
1372:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:   pointer to diplex table.
1373:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1374:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1375:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns the index of the maximum element within a defined centroid.
1376:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If the index of the maximum element isn't found it returns 0xFF.
1377:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1378:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1379:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_startOfSlider[] - contains the index of the first slider element
1380:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 39


1381:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1382:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1383:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1384:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1385:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_IS_DIPLEX_SLIDER)
1386:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint16 fingerThreshold, const uint8 *
1387:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
1388:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint16 fingerThreshold)
1389:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1390:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1391:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
1392:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1393:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curPos = 0u;
1394:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* No centroid at Start */
1395:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCntrdSize = 0u;
1396:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1397:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Biggest centroid is zero */
1398:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdSize = 0u;
1399:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
1400:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1401:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum = CapSense_MAXIMUM_CENTROID;
1402:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1403:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 temp = 0u;
1404:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 *startOfSlider = &CapSense_sensorSignal[offset];
1405:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1406:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1407:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(diplex != 0u)
1408:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1409:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Initialize */
1410:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 i = 0u;
1411:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1412:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make slider x2 as Diplexed */
1413:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 count <<= 1u;
1414:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 while(1u)
1415:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1416:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
1417:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1418:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (curCtrdStartPos == CapSense_MAXIMUM_CENTROID)
1419:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1420:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Start of centroid */
1421:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = i;
1422:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
1423:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1424:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
1425:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1426:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
1427:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1428:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1429:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else   /* Select biggest and indicate zero start */
1430:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1431:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(curCntrdSize > 0u)
1432:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1433:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* We are at the end of current */
1434:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
1435:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1436:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
1437:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 40


1438:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1439:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1440:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize = 0u;
1441:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1442:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1443:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1444:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1445:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     i++;
1446:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     curPos = diplex[i];
1447:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(i == count)
1448:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1449:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         break;
1450:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1451:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1452:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1453:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Find biggest centroid if two are same size, last one wins
1454:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                        We are at the end of current */
1455:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize)
1456:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1457:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
1458:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
1459:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1460:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1461:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1462:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1463:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Without diplexing */
1464:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 biggestCtrdSize = count;
1465:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1466:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1467:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1468:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Check centroid size */
1469:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_NON_DIPLEX_SLIDER)
1470:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
1471:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #else
1472:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(biggestCtrdSize >= 2u)
1473:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_NON_DIPLEX_SLIDER) */
1474:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1475:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
1476:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1477:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)
1478:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (diplex == 0u)
1479:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1480:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = i;
1481:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1482:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             else
1483:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1484:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = diplex[i];
1485:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1486:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #elif (CapSense_IS_DIPLEX_SLIDER)
1487:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curPos = diplex[i];
1488:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1489:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Looking for greater element within centroid */
1490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
1491:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1492:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(startOfSlider[curPos] > temp)
1493:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1494:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 maximum = i;
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 41


1495:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 temp = startOfSlider[curPos];
1496:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1497:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1498:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1499:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1500:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1501:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for (i = 0u; i < count; i++)
1502:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1503:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Looking for greater element within centroid */
1504:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
1505:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1506:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(startOfSlider[i] > temp)
1507:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1508:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         maximum = i;
1509:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         temp = startOfSlider[i];
1510:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1511:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1512:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1513:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1514:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (maximum);
1515:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1516:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1517:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1518:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1519:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_CalcCentroid
1520:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1521:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1522:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1523:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value calculated according to the index of the maximum element and API
1524:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution.
1525:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1526:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1527:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  type:  widget type.
1528:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:  pointer to diplex table.
1529:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
1530:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:   Start index of centroid in CapSense_sensorSignal[] array.
1531:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:    Number of elements within centroid.
1532:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
1533:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  API resolution.
1534:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  noiseThreshold:  Noise threshold.
1535:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1536:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1537:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the slider.
1538:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1539:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1540:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1541:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1542:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1543:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u)
1544:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset,
1545:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint32 resolution, uint16 noiseThreshold)
1546:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #else
1547:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset,
1548:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint16 resolution, uint16 noiseThreshold)
1549:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u) */
1550:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1551:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 42


1552:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posPrev;
1553:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posNext;
1554:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1555:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1556:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Helps during centroid calculation */
1557:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1558:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             static uint16 CapSense_centroid[3u];
1559:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1560:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1561:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1562:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 pos;
1563:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1564:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1565:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 position;
1566:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 numerator;
1567:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         int32 denominator;
1568:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1569:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16  *startOfSlider = &CapSense_sensorSignal[offset];
1570:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1571:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1572:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             posPrev = 0u;
1573:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1574:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1575:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1576:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(type == CapSense_TYPE_RADIAL_SLIDER)
1577:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1578:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1579:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1580:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1581:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1582:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
1583:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1584:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for ROTARY Slider */
1585:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1586:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1587:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[count - 1u];
1588:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[1u];
1589:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1590:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1591:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1592:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1593:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[0u];
1594:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1595:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1596:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1597:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1598:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[maximum + 1u];
1599:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1600:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1601:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1602:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1603:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1604:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1605:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1606:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1607:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1608:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 43


1609:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)
1610:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1611:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(diplex == 0u)
1612:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1613:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = maximum;
1614:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1615:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = maximum + 1u;
1616:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1617:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1618:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1619:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = diplex[maximum];
1620:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1621:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = diplex[maximum + 1u];
1622:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         count <<= 1u;
1623:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1624:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #elif (CapSense_IS_DIPLEX_SLIDER)
1625:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1626:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     pos     = diplex[maximum];
1627:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1628:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = diplex[maximum + 1u];
1629:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     count <<= 1u;
1630:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else
1631:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1632:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (maximum >= 1u)
1633:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1634:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1635:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1636:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = maximum + 1u;
1637:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1638:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1639:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1640:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER)
1641:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[pos];
1642:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else
1643:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
1644:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1645:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1646:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for LINEAR Slider */
1647:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1648:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1649:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = 0u;
1650:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
1651:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1652:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
1653:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1654:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
1655:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = 0u;
1656:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1657:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1658:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1659:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
1660:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
1661:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1662:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_TOTAL_TOUCH_PADS_BASIC_C
1663:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1664:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1665:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 44


1666:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1667:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1668:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1669:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_PREV] > noiseThreshold)
1670:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1671:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] -= noiseThreshold;
1672:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1673:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1674:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1675:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] = 0u;
1676:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1677:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1678:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Maximum always greater than fingerThreshold, so greater than noiseThreshold */
1679:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_centroid[CapSense_POS] -= noiseThreshold;
1680:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1681:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1682:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_NEXT] > noiseThreshold)
1683:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1684:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] -= noiseThreshold;
1685:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1686:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1687:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1688:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] = 0u;
1689:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1690:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1691:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1692:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 - Si-1 */
1693:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         numerator = (uint32) CapSense_centroid[CapSense_POS_NEXT] -
1694:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     (uint32) CapSense_centroid[CapSense_POS_PREV];
1695:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1696:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 + Si + Si-1 */
1697:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (int32) CapSense_centroid[CapSense_POS_PREV] +
1698:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS] +
1699:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS_NEXT];
1700:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1701:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* (numerator/denominator) + maximum */
1702:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
1703:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1704:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if(CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1705:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Only required for RADIAL Slider */
1706:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(denominator < 0)
1707:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1708:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
1709:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1710:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1711:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1712:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator *= (int16)resolution;
1713:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1714:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Round result and put it to uint8 */
1715:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + CapSense_CENTROID_ROUND_VALUE));
1716:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1717:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
1718:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1719:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1720:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1721:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1722:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 45


1723:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1724:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetCentroidPos
1725:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1726:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1727:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1728:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1729:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1730:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1731:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1732:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1733:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1734:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1735:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1736:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__LS           5
1737:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1738:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1739:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the linear slider.
1740:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1741:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1742:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1743:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1744:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1745:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1746:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1747:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1748:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1749:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1750:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1751:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1752:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1753:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1754:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1755:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1756:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1757:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1758:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_GetCentroidPos(uint32 widget)
1759:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1760:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1761:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             const uint8 *diplex;
1762:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1763:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1764:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1765:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1766:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1767:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
1768:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1769:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1770:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1771:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1772:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1773:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1774:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1775:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1776:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1777:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1778:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1779:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 46


1780:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
1781:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1782:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1783:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(widget < CapSense_TOTAL_DIPLEXED_SLIDERS_COUNT)
1784:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1785:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 maximum = CapSense_diplexTable[widget];
1786:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = &CapSense_diplexTable[maximum];
1787:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1788:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1789:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1790:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = 0u;
1791:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1792:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1793:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1794:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within centroid */
1795:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1796:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint16)CapSense_fingerThreshold[widget],
1797:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1798:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint16)CapSense_fingerThreshold[widget])
1799:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1800:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1801:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != 0xFFu)
1802:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1803:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
1804:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum,
1805:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1806:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1807:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1808:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1809:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1810:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1811:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
1812:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1813:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1814:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1815:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1816:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
1817:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1818:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1819:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1820:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1821:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1822:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1823:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) ||
1824:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1825:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1826:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
1827:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1828:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1829:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1830:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
1831:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1832:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1833:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1834:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
1835:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1836:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 47


1837:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1838:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
1839:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1840:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
1841:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1842:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1843:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
1844:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1845:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1846:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] =
1847:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
1848:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1849:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1850:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /*(0u != (CapSense_MEDIAN_FILTER &
1851:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *         CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1852:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1853:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1854:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if(0u!=(CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1855:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
1856:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1857:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1858:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
1859:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1860:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1861:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]=CapSense_posFiltersData[posInd
1862:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1863:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1864:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
1865:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1866:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1867:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1868:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1869:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
1870:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1871:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
1872:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1873:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1874:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1875:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER & \
1876:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1877:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1878:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1879:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1880:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
1881:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1882:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
1883:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1884:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1885:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1886:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER & \
1887:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1888:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1889:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1890:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1891:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
1892:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1893:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position,
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 48


1894:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1895:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1896:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1897:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER & \
1898:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1899:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1900:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1901:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1902:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1903:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1904:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1905:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1906:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1907:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum wasn't found */
1908:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
1909:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1910:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if(0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1911:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
1912:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1913:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1914:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
1915:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1916:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1917:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1918:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1919:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1920:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
1921:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1922:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
1923:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1924:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1925:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1926:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1927:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetRadialCentroidPos
1928:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1929:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1930:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1931:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1932:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1933:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1934:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1935:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1936:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1937:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1938:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every radial slider widget there are defines in this format:
1939:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__RS           5
1940:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1941:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1942:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the radial slider.
1943:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1944:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1945:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
1946:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1947:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1948:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1949:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1950:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF.
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 49


1951:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1952:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1953:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1954:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1955:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1956:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1957:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1958:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1959:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1960:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1961:.\Generated_Source\PSoC4/CapSense_CSHL.c ****      uint16 CapSense_GetRadialCentroidPos(uint32 widget)
1962:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1963:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1964:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1965:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1966:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
1967:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1968:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1969:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1970:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1971:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1972:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1973:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1974:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1975:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1976:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1977:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1978:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
1979:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
1980:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1981:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within centroid */
1982:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1983:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint16)CapSense_fingerThreshold[widget],
1984:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1985:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint16)CapSense_fingerThreshold[widget])
1986:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1987:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1988:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != CapSense_MAXIMUM_CENTROID)
1989:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1990:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
1991:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum,
1992:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1993:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1994:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1995:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this Radial slider has enabled filters */
1996:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1997:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1998:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
1999:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
2000:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2001:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
2002:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2003:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
2004:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
2005:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
2006:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
2007:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 50


2008:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
2009:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2010:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))  ||
2011:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
2012:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2013:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
2014:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2015:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
2016:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
2017:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
2018:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
2019:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2020:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2021:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
2022:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2023:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
2024:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2025:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
2026:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2027:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2028:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2029:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2030:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
2031:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2032:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2033:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] =
2034:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                               CapSense_posFiltersDa
2035:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2036:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2037:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_MEDIAN_FILTER &
2038:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2039:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2040:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2041:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_AVERAGING_FILTER & \
2042:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2043:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2044:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2045:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2046:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
2047:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2048:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2049:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]= CapSense_posFiltersData[posIn
2050:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2051:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2052:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2053:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2054:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2055:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2056:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2057:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2058:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2059:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
2060:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2061:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2062:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2063:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER &
2064:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 51


2065:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2066:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2067:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2068:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
2069:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2070:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
2071:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2072:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2073:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2074:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER &
2075:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2076:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2077:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2078:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2079:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2080:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2081:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position,
2082:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                          CapSense_posFiltersData[po
2083:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2084:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2085:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER &
2086:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2087:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2088:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2089:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2090:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2091:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2092:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2093:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2094:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2095:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum was not found */
2096:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
2097:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2098:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
2099:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
2100:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2101:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2102:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2103:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2104:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2105:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2106:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2107:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
2108:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2109:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
2110:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2111:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2112:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u)
2113:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2114:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetTouchCentroidPos
2115:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2116:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2117:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2118:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If a finger is present on a touchpad, this function calculates the X and Y
2119:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  position of the finger by calculating the centroids within touchpad specified
2120:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  range. The X and Y positions are calculated according to the API resolutions set in the
2121:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense customizer. Returns 1 if a finger is on the touchpad.
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 52


2122:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The position filter is applied to the result if enabled.
2123:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This function is available only if a touch pad is defined by the CapSense
2124:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  customizer.
2125:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2126:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2127:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
2128:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every touchpad widget there are defines in this format:
2129:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__TP            5
2130:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2131:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     Pointer to the array of two uint16 elements, where result
2132:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result of calculation of X and Y position are stored.
2133:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[0u]  - position of X
2134:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[1u]  - position of Y
2135:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2136:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2137:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a 1 if a finger is on the touch pad, 0 - if not.
2138:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2139:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2140:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2141:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2142:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2143:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   There are no checks of the widget type argument provided to this function.
2144:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   The unproper widget type provided will cause unexpected position
2145:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   calculations.
2146:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2147:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2148:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetTouchCentroidPos(uint32 widget, uint16* pos)
2149:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2150:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2151:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posXIndex;
2152:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posYIndex;
2153:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
2154:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
2155:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2156:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2157:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2158:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2159:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint16 tempPos;
2160:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2161:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2162:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                */
2163:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2164:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxX;
2165:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxY;
2166:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posX;
2167:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posY;
2168:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 touch = 0u;
2169:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
2170:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
2171:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2172:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within X centroid */
2173:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
2174:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget], 0u);
2175:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
2176:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget]);
2177:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2178:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 53


2179:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (MaxX != CapSense_MAXIMUM_CENTROID)
2180:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2181:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             offset = CapSense_rawDataIndex[widget + 1u];
2182:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             count = CapSense_numberOfSensors[widget + 1u];
2183:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2184:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find Maximum within Y centroid */
2185:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_DIPLEX_SLIDER)
2186:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u], 0
2187:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #else
2188:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u]);
2189:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2190:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2191:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (MaxY != CapSense_MAXIMUM_CENTROID)
2192:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2193:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* X and Y maximums are found = true touch */
2194:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 touch = 1u;
2195:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2196:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate Y centroid */
2197:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 posY = CapSense_CalcCentroid(MaxY, offset, count,
2198:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget + 1u], CapSense_noiseThreshold[widget + 1u
2199:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2200:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate X centroid */
2201:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 offset = CapSense_rawDataIndex[widget];
2202:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 count = CapSense_numberOfSensors[widget];
2203:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2204:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 posX = CapSense_CalcCentroid(MaxX, offset, count,
2205:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget],CapSense_noiseThreshold[widget]);
2206:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2207:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2208:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Check if this TP has enabled filters */
2209:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
2210:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2211:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Calculate position to store filters data */
2212:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posXIndex  = firstTimeIndex + 1u;
2213:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posYIndex  = CapSense_posFiltersData[widget + 1u];
2214:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2215:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (0u == CapSense_posFiltersData[firstTimeIndex])
2216:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2217:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Init filters */
2218:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posXIndex] = posX;
2219:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posYIndex] = posY;
2220:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2221:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if((0u != (CapSense_MEDIAN_FILTER & \
2222:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK))|| \
2223:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 (0u != (CapSense_AVERAGING_FILTER & \
2224:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2225:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2226:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) ||
2227:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
2228:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2229:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = posX;
2230:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = posY;
2231:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2232:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
2233:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2234:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *    (0u != (CapSense_AVERAGING_FILTER & \
2235:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *            CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 54


2236:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2237:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2238:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[firstTimeIndex] = 1u;
2239:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2240:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
2241:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2242:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Do filtering */
2243:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2244:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2245:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2246:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2247:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_MedianFilter(posX,
2248:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2249:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2250:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] =
2251:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2252:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2253:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2254:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2255:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_MedianFilter(posY,
2256:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2257:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2258:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] =
2259:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2260:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2261:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2262:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2263:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_MEDIAN_FILTER & \
2264:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2265:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2266:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2267:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if(0u !=(CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_M
2268:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2269:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2270:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2271:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_AveragingFilter(posX,
2272:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2273:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2274:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] =
2275:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2276:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2277:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2278:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2279:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_AveragingFilter(posY,
2280:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2281:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2282:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] =
2283:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2284:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2285:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2286:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2287:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2288:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2289:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2290:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2291:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR2_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2292:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 55


2293:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2294:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR2Filter(posX,
2295:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                            CapSense_posFiltersData[
2296:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2297:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2298:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR2Filter(posY,
2299:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2300:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2301:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2302:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2303:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR2_FILTER & \
2304:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2305:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2306:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2307:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR4_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2308:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
2309:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2310:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR4Filter((uint16)posX,
2311:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2312:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2313:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2314:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR4Filter((uint16)posY,
2315:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2316:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2317:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2318:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2319:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR4_FILTER & \
2320:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2321:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2322:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2323:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_JITTER_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2324:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2325:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     {
2326:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posX = (uint8) CapSense_JitterFilter(posX,
2327:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2328:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posXIndex] = posX;
2329:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2330:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posY = (uint8) CapSense_JitterFilter(posY,
2331:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2332:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posYIndex] = posY;
2333:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     }
2334:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_JITTER_FILTER & \
2335:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2336:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2337:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2338:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2339:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2340:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2341:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Save positions */
2342:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = posX;
2343:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = posY;
2344:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2345:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2346:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2347:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2348:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(touch == 0u)
2349:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 56


2350:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
2351:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if ((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2352:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2353:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2354:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2355:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2356:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2357:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2358:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (touch);
2359:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2360:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u) */
2361:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2362:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2363:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2364:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2365:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) )
2366:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2367:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_MedianFilter
2368:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2369:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2370:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2371:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Median filter function.
2372:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The median filter looks at the three most recent samples and reports the
2373:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  median value.
2374:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2375:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2376:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2377:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2378:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2379:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2380:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2381:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2382:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2383:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2384:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2385:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2386:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2387:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2388:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2389:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2390:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
2391:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2392:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 tmp;
2393:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2394:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
2395:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2396:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             tmp = x2;
2397:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x1;
2398:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x1 = tmp;
2399:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2400:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2401:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x2 > x3)
2402:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2403:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x3;
2404:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2405:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2406:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((x1 > x2) ? x1 : x2);
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 57


2407:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2408:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2409:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2410:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) ) */
2411:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2412:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2413:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) || \
2414:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER)) )
2415:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2416:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_AveragingFilter
2417:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2418:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2419:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2420:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Averaging filter function.
2421:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The averaging filter looks at the three most recent samples of a position and
2422:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  reports the averaging value.
2423:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2424:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2425:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2426:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2427:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2428:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2429:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2430:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2431:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2432:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2433:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2434:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2435:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2436:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2437:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2438:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2439:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_AveragingFilter(uint16 x1, uint16 x2, uint16 x3)
2440:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2441:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp = ((uint32)x1 + (uint32)x2 + (uint32)x3) / 3u;
2442:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2443:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2444:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2445:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) || \
2446:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER) ) */
2447:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2448:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2449:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2450:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2451:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2452:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR2Filter
2453:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2454:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2455:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2456:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/2 filter function. IIR1/2 = 1/2current + 1/2previous.
2457:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2458:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2459:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2460:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2461:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2462:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2463:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 58


2464:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2465:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2466:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2467:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2468:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2469:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2470:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2471:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2472:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR2Filter(uint16 x1, uint16 x2)
2473:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2474:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2475:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2476:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/2 Current Value+ 1/2 Previous Value */
2477:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
2478:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 1u;
2479:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2480:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2481:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2482:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2483:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2484:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2485:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2486:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2487:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2488:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2489:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR4Filter
2491:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2492:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2493:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2494:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/4 filter function. IIR1/4 = 1/4current + 3/4previous.
2495:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2496:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2497:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2498:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2499:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2500:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2501:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a filtered value.
2502:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2503:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2504:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2505:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2506:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2507:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2508:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2509:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2510:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR4Filter(uint16 x1, uint16 x2)
2511:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 781              		.loc 1 2511 0
 782              		.cfi_startproc
 783              	.LVL87:
2512:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2513:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2514:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/4 Current Value + 3/4 Previous Value */
2515:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
 784              		.loc 1 2515 0
 785 0000 4318     		add	r3, r0, r1
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 59


 786              	.LVL88:
2516:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += ((uint32)x2 << 1u);
 787              		.loc 1 2516 0
 788 0002 4900     		lsl	r1, r1, #1
 789              	.LVL89:
 790 0004 C818     		add	r0, r1, r3
 791              	.LVL90:
2517:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 2u;
 792              		.loc 1 2517 0
 793 0006 8008     		lsr	r0, r0, #2
 794              	.LVL91:
2518:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2519:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
 795              		.loc 1 2519 0
 796 0008 80B2     		uxth	r0, r0
 797              	.LVL92:
2520:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 798              		.loc 1 2520 0
 799              		@ sp needed
 800 000a 7047     		bx	lr
 801              		.cfi_endproc
 802              	.LFE56:
 803              		.size	CapSense_IIR4Filter, .-CapSense_IIR4Filter
 804              		.section	.text.CapSense_UpdateBaselineNoThreshold,"ax",%progbits
 805              		.align	2
 806              		.global	CapSense_UpdateBaselineNoThreshold
 807              		.code	16
 808              		.thumb_func
 809              		.type	CapSense_UpdateBaselineNoThreshold, %function
 810              	CapSense_UpdateBaselineNoThreshold:
 811              	.LFB39:
 370:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 calc;
 812              		.loc 1 370 0
 813              		.cfi_startproc
 814              	.LVL93:
 815 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 816              		.cfi_def_cfa_offset 20
 817              		.cfi_offset 4, -20
 818              		.cfi_offset 5, -16
 819              		.cfi_offset 6, -12
 820              		.cfi_offset 7, -8
 821              		.cfi_offset 14, -4
 822 0002 5746     		mov	r7, r10
 823 0004 4E46     		mov	r6, r9
 824 0006 4546     		mov	r5, r8
 825 0008 E0B4     		push	{r5, r6, r7}
 826              		.cfi_def_cfa_offset 32
 827              		.cfi_offset 8, -32
 828              		.cfi_offset 9, -28
 829              		.cfi_offset 10, -24
 830 000a 041C     		mov	r4, r0
 375:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 noiseThreshold;
 831              		.loc 1 375 0
 832 000c 334B     		ldr	r3, .L75
 833 000e 1B5C     		ldrb	r3, [r3, r0]
 834              	.LVL94:
 384:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     filteredRawData = CapSense_sensorRaw[sensor];
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 60


 835              		.loc 1 384 0
 836 0010 5B00     		lsl	r3, r3, #1
 837              	.LVL95:
 838 0012 334A     		ldr	r2, .L75+4
 839 0014 D318     		add	r3, r2, r3
 840 0016 1E8C     		ldrh	r6, [r3, #32]
 841              	.LVL96:
 385:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 842              		.loc 1 385 0
 843 0018 4200     		lsl	r2, r0, #1
 844 001a 324B     		ldr	r3, .L75+8
 845 001c D05A     		ldrh	r0, [r2, r3]
 846              	.LVL97:
 388:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 847              		.loc 1 388 0
 848 001e 324B     		ldr	r3, .L75+12
 849 0020 1B78     		ldrb	r3, [r3]
 850 0022 002B     		cmp	r3, #0
 851 0024 06D0     		beq	.L66
 409:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 852              		.loc 1 409 0
 853 0026 314D     		ldr	r5, .L75+16
 854 0028 171C     		mov	r7, r2
 855 002a 515B     		ldrh	r1, [r2, r5]
 856 002c FFF7FEFF 		bl	CapSense_IIR4Filter
 857              	.LVL98:
 858 0030 031C     		mov	r3, r0
 859              	.LVL99:
 410:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 860              		.loc 1 410 0
 861 0032 7B53     		strh	r3, [r7, r5]
 862              	.LVL100:
 863              	.L66:
 436:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 864              		.loc 1 436 0
 865 0034 6300     		lsl	r3, r4, #1
 866 0036 2E4A     		ldr	r2, .L75+20
 867 0038 9A5A     		ldrh	r2, [r3, r2]
 868 003a 8242     		cmp	r2, r0
 869 003c 06D8     		bhi	.L67
 438:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = filteredRawData - CapSense_sensorBaseline[sensor];
 870              		.loc 1 438 0
 871 003e 0021     		mov	r1, #0
 872 0040 2C4B     		ldr	r3, .L75+24
 873 0042 1955     		strb	r1, [r3, r4]
 439:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 874              		.loc 1 439 0
 875 0044 851A     		sub	r5, r0, r2
 876 0046 ADB2     		uxth	r5, r5
 877              	.LVL101:
 440:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 878              		.loc 1 440 0
 879 0048 0127     		mov	r7, #1
 880 004a 02E0     		b	.L68
 881              	.LVL102:
 882              	.L67:
 444:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 61


 883              		.loc 1 444 0
 884 004c 151A     		sub	r5, r2, r0
 885 004e ADB2     		uxth	r5, r5
 886              	.LVL103:
 445:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 887              		.loc 1 445 0
 888 0050 0027     		mov	r7, #0
 889              	.LVL104:
 890              	.L68:
 451:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 891              		.loc 1 451 0
 892 0052 002F     		cmp	r7, #0
 893 0054 13D1     		bne	.L69
 451:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 894              		.loc 1 451 0 is_stmt 0 discriminator 1
 895 0056 142D     		cmp	r5, #20
 896 0058 11D9     		bls	.L69
 454:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 897              		.loc 1 454 0 is_stmt 1
 898 005a 264B     		ldr	r3, .L75+24
 899 005c 1B5D     		ldrb	r3, [r3, r4]
 900 005e 224A     		ldr	r2, .L75+12
 901 0060 1219     		add	r2, r2, r4
 902 0062 1279     		ldrb	r2, [r2, #4]
 903 0064 9342     		cmp	r3, r2
 904 0066 06D3     		bcc	.L70
 456:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor] = 0u;
 905              		.loc 1 456 0
 906 0068 201C     		mov	r0, r4
 907              	.LVL105:
 908 006a FFF7FEFF 		bl	CapSense_BaseInit
 909              	.LVL106:
 457:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 910              		.loc 1 457 0
 911 006e 0022     		mov	r2, #0
 912 0070 204B     		ldr	r3, .L75+24
 913 0072 1A55     		strb	r2, [r3, r4]
 914 0074 1EE0     		b	.L71
 915              	.LVL107:
 916              	.L70:
 461:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 917              		.loc 1 461 0
 918 0076 0133     		add	r3, r3, #1
 919 0078 1E4A     		ldr	r2, .L75+24
 920 007a 1355     		strb	r3, [r2, r4]
 921 007c 1AE0     		b	.L71
 922              	.L69:
 475:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                  ((tempRaw < (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD)
 923              		.loc 1 475 0
 924 007e B542     		cmp	r5, r6
 925 0080 03D9     		bls	.L72
 475:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                  ((tempRaw < (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD)
 926              		.loc 1 475 0 is_stmt 0 discriminator 1
 927 0082 132D     		cmp	r5, #19
 928 0084 16D8     		bhi	.L71
 477:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 929              		.loc 1 477 0 is_stmt 1
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 62


 930 0086 002F     		cmp	r7, #0
 931 0088 14D1     		bne	.L71
 932              	.L72:
 482:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc |= (uint32) CapSense_sensorBaselineLow[sensor];
 933              		.loc 1 482 0
 934 008a 1302     		lsl	r3, r2, #8
 935 008c 9A46     		mov	r10, r3
 936              	.LVL108:
 483:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 937              		.loc 1 483 0
 938 008e 1849     		ldr	r1, .L75+20
 939 0090 8C46     		mov	ip, r1
 940 0092 8946     		mov	r9, r1
 941 0094 A144     		add	r9, r9, r4
 942 0096 4B46     		mov	r3, r9
 943              	.LVL109:
 944 0098 1B7D     		ldrb	r3, [r3, #20]
 945 009a 5146     		mov	r1, r10
 946 009c 1943     		orr	r1, r3
 947              	.LVL110:
 486:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 948              		.loc 1 486 0
 949 009e 4018     		add	r0, r0, r1
 950              	.LVL111:
 489:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 951              		.loc 1 489 0
 952 00a0 801A     		sub	r0, r0, r2
 953              	.LVL112:
 492:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaselineLow[sensor] = ((uint8) calc);
 954              		.loc 1 492 0
 955 00a2 020A     		lsr	r2, r0, #8
 956 00a4 6300     		lsl	r3, r4, #1
 957 00a6 6146     		mov	r1, ip
 958 00a8 CA52     		strh	r2, [r1, r3]
 493:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 959              		.loc 1 493 0
 960 00aa 4B46     		mov	r3, r9
 961 00ac 1875     		strb	r0, [r3, #20]
 495:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 962              		.loc 1 495 0
 963 00ae 0022     		mov	r2, #0
 964 00b0 104B     		ldr	r3, .L75+24
 965 00b2 1A55     		strb	r2, [r3, r4]
 966              	.LVL113:
 967              	.L71:
 502:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 968              		.loc 1 502 0
 969 00b4 B542     		cmp	r5, r6
 970 00b6 06D9     		bls	.L73
 502:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 971              		.loc 1 502 0 is_stmt 0 discriminator 1
 972 00b8 002F     		cmp	r7, #0
 973 00ba 04D0     		beq	.L73
 515:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8) */
 974              		.loc 1 515 0 is_stmt 1
 975 00bc 6400     		lsl	r4, r4, #1
 976              	.LVL114:
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 63


 977 00be 0C4B     		ldr	r3, .L75+20
 978 00c0 1C19     		add	r4, r3, r4
 979 00c2 2584     		strh	r5, [r4, #32]
 980 00c4 04E0     		b	.L65
 981              	.LVL115:
 982              	.L73:
 521:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 983              		.loc 1 521 0
 984 00c6 6400     		lsl	r4, r4, #1
 985              	.LVL116:
 986 00c8 094B     		ldr	r3, .L75+20
 987 00ca 1C19     		add	r4, r3, r4
 988 00cc 0023     		mov	r3, #0
 989 00ce 2384     		strh	r3, [r4, #32]
 990              	.L65:
 528:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 991              		.loc 1 528 0
 992              		@ sp needed
 993              	.LVL117:
 994              	.LVL118:
 995              	.LVL119:
 996 00d0 1CBC     		pop	{r2, r3, r4}
 997 00d2 9046     		mov	r8, r2
 998 00d4 9946     		mov	r9, r3
 999 00d6 A246     		mov	r10, r4
 1000 00d8 F0BD     		pop	{r4, r5, r6, r7, pc}
 1001              	.L76:
 1002 00da C046     		.align	2
 1003              	.L75:
 1004 00dc 00000000 		.word	CapSense_widgetNumber
 1005 00e0 00000000 		.word	.LANCHOR1
 1006 00e4 00000000 		.word	CapSense_sensorRaw
 1007 00e8 00000000 		.word	.LANCHOR2
 1008 00ec 00000000 		.word	CapSense_rawFilterData1
 1009 00f0 00000000 		.word	.LANCHOR0
 1010 00f4 00000000 		.word	CapSense_lowBaselineResetCnt
 1011              		.cfi_endproc
 1012              	.LFE39:
 1013              		.size	CapSense_UpdateBaselineNoThreshold, .-CapSense_UpdateBaselineNoThreshold
 1014              		.section	.text.CapSense_UpdateSensorBaseline,"ax",%progbits
 1015              		.align	2
 1016              		.global	CapSense_UpdateSensorBaseline
 1017              		.code	16
 1018              		.thumb_func
 1019              		.type	CapSense_UpdateSensorBaseline, %function
 1020              	CapSense_UpdateSensorBaseline:
 1021              	.LFB40:
 562:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 1022              		.loc 1 562 0
 1023              		.cfi_startproc
 1024              	.LVL120:
 1025 0000 08B5     		push	{r3, lr}
 1026              		.cfi_def_cfa_offset 8
 1027              		.cfi_offset 3, -8
 1028              		.cfi_offset 14, -4
 577:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1029              		.loc 1 577 0
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 64


 1030 0002 FFF7FEFF 		bl	CapSense_UpdateBaselineNoThreshold
 1031              	.LVL121:
 583:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1032              		.loc 1 583 0
 1033              		@ sp needed
 1034 0006 08BD     		pop	{r3, pc}
 1035              		.cfi_endproc
 1036              	.LFE40:
 1037              		.size	CapSense_UpdateSensorBaseline, .-CapSense_UpdateSensorBaseline
 1038              		.section	.text.CapSense_UpdateEnabledBaselines,"ax",%progbits
 1039              		.align	2
 1040              		.global	CapSense_UpdateEnabledBaselines
 1041              		.code	16
 1042              		.thumb_func
 1043              		.type	CapSense_UpdateEnabledBaselines, %function
 1044              	CapSense_UpdateEnabledBaselines:
 1045              	.LFB41:
 616:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 1046              		.loc 1 616 0
 1047              		.cfi_startproc
 1048 0000 10B5     		push	{r4, lr}
 1049              		.cfi_def_cfa_offset 8
 1050              		.cfi_offset 4, -8
 1051              		.cfi_offset 14, -4
 1052              	.LVL122:
 620:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1053              		.loc 1 620 0
 1054 0002 0024     		mov	r4, #0
 1055 0004 09E0     		b	.L79
 1056              	.LVL123:
 1057              	.L81:
 622:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1058              		.loc 1 622 0
 1059 0006 0648     		ldr	r0, .L82
 1060 0008 211C     		mov	r1, r4
 1061 000a FFF7FEFF 		bl	CapSense_GetBitValue
 1062              	.LVL124:
 624:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 1063              		.loc 1 624 0
 1064 000e 0028     		cmp	r0, #0
 1065 0010 02D0     		beq	.L80
 626:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 1066              		.loc 1 626 0
 1067 0012 201C     		mov	r0, r4
 1068              	.LVL125:
 1069 0014 FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 1070              	.LVL126:
 1071              	.L80:
 620:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1072              		.loc 1 620 0 discriminator 2
 1073 0018 0134     		add	r4, r4, #1
 1074              	.LVL127:
 1075              	.L79:
 620:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1076              		.loc 1 620 0 is_stmt 0 discriminator 1
 1077 001a 092C     		cmp	r4, #9
 1078 001c F3D9     		bls	.L81
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 65


 629:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1079              		.loc 1 629 0 is_stmt 1
 1080              		@ sp needed
 1081              	.LVL128:
 1082 001e 10BD     		pop	{r4, pc}
 1083              	.L83:
 1084              		.align	2
 1085              	.L82:
 1086 0020 00000000 		.word	CapSense_sensorEnableMask
 1087              		.cfi_endproc
 1088              	.LFE41:
 1089              		.size	CapSense_UpdateEnabledBaselines, .-CapSense_UpdateEnabledBaselines
 1090              		.section	.text.CapSense_UpdateWidgetBaseline,"ax",%progbits
 1091              		.align	2
 1092              		.global	CapSense_UpdateWidgetBaseline
 1093              		.code	16
 1094              		.thumb_func
 1095              		.type	CapSense_UpdateWidgetBaseline, %function
 1096              	CapSense_UpdateWidgetBaseline:
 1097              	.LFB42:
 661:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sensorsPerWidget;
 1098              		.loc 1 661 0
 1099              		.cfi_startproc
 1100              	.LVL129:
 1101 0000 38B5     		push	{r3, r4, r5, lr}
 1102              		.cfi_def_cfa_offset 16
 1103              		.cfi_offset 3, -16
 1104              		.cfi_offset 4, -12
 1105              		.cfi_offset 5, -8
 1106              		.cfi_offset 14, -4
 669:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1107              		.loc 1 669 0
 1108 0002 0A4B     		ldr	r3, .L88
 1109 0004 1A1C     		mov	r2, r3
 1110 0006 5432     		add	r2, r2, #84
 1111 0008 155C     		ldrb	r5, [r2, r0]
 1112              	.LVL130:
 672:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1113              		.loc 1 672 0
 1114 000a 4833     		add	r3, r3, #72
 1115 000c 1C5C     		ldrb	r4, [r3, r0]
 1116              	.LVL131:
 675:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1117              		.loc 1 675 0
 1118 000e 2D19     		add	r5, r5, r4
 1119              	.LVL132:
 677:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1120              		.loc 1 677 0
 1121 0010 09E0     		b	.L85
 1122              	.LVL133:
 1123              	.L87:
 679:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1124              		.loc 1 679 0
 1125 0012 0748     		ldr	r0, .L88+4
 1126 0014 211C     		mov	r1, r4
 1127 0016 FFF7FEFF 		bl	CapSense_GetBitValue
 1128              	.LVL134:
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 66


 681:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 1129              		.loc 1 681 0
 1130 001a 0028     		cmp	r0, #0
 1131 001c 02D0     		beq	.L86
 683:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 1132              		.loc 1 683 0
 1133 001e 201C     		mov	r0, r4
 1134              	.LVL135:
 1135 0020 FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 1136              	.LVL136:
 1137              	.L86:
 677:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1138              		.loc 1 677 0 discriminator 2
 1139 0024 0134     		add	r4, r4, #1
 1140              	.LVL137:
 1141              	.L85:
 677:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1142              		.loc 1 677 0 is_stmt 0 discriminator 1
 1143 0026 AC42     		cmp	r4, r5
 1144 0028 F3D3     		bcc	.L87
 686:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1145              		.loc 1 686 0 is_stmt 1
 1146              		@ sp needed
 1147              	.LVL138:
 1148              	.LVL139:
 1149 002a 38BD     		pop	{r3, r4, r5, pc}
 1150              	.L89:
 1151              		.align	2
 1152              	.L88:
 1153 002c 00000000 		.word	.LANCHOR1
 1154 0030 00000000 		.word	CapSense_sensorEnableMask
 1155              		.cfi_endproc
 1156              	.LFE42:
 1157              		.size	CapSense_UpdateWidgetBaseline, .-CapSense_UpdateWidgetBaseline
 1158              		.section	.text.CapSense_GetWidgetNumber,"ax",%progbits
 1159              		.align	2
 1160              		.global	CapSense_GetWidgetNumber
 1161              		.code	16
 1162              		.thumb_func
 1163              		.type	CapSense_GetWidgetNumber, %function
 1164              	CapSense_GetWidgetNumber:
 1165              	.LFB57:
2521:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2522:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2523:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2524:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2525:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2526:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2527:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) || \
2528:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)))
2529:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2530:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: uint16 CapSense_JitterFilter
2531:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2532:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2533:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2534:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Jitter filter function.
2535:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 67


2536:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2537:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2538:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2539:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2540:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2541:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2542:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2543:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2544:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2545:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2546:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2547:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2548:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2549:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2550:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_JitterFilter(uint16 x1, uint16 x2)
2551:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2552:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
2553:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2554:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x1--;
2555:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2556:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2557:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2558:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (x1 < x2)
2559:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2560:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 x1++;
2561:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2562:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2563:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2564:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return x1;
2565:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2566:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2567:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2568:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2569:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2570:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2571:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2572:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))
2573:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2574:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR8Filter
2575:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2576:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2577:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2578:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/8 filter function. IIR1/8 = 1/8current + 7/8previous.
2579:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2580:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2581:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2582:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2583:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2584:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2585:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2586:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2587:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2588:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2589:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2590:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2591:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2592:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 68


2593:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2594:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2595:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR8Filter(uint16 x1, uint16 x2)
2596:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2597:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2598:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2599:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/8 Current Value + 7/8 Previous Value */
2600:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2601:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 3u) - ((uint32)x2));
2602:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 3u;
2603:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2604:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2605:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2606:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)) */
2607:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2608:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2609:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
2610:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2611:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR16Filter
2612:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2613:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2614:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2615:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/16 filter function. IIR1/16 = 1/16current + 15/16previous.
2616:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2617:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2618:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2619:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2620:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2621:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2622:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2623:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2624:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2625:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2626:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2627:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2628:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2629:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2630:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2631:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2632:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR16Filter(uint16 x1, uint16 x2)
2633:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2634:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2635:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2636:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/16 Current Value + 15/16 Previous Value */
2637:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2638:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 4u) - ((uint32)x2));
2639:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 4u;
2640:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2641:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2642:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2643:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER) */
2644:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2645:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2646:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT))
2647:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2648:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2649:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetMatrixButtonPos
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 69


2650:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2651:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2652:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2653:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Function calculates and returns a touch position (column and row) for the matrix
2654:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  button widget.
2655:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2656:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2657:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  widget number;
2658:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     pointer to an array of two uint8, where touch position will be
2659:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *           stored:
2660:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[0] - column position;
2661:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[1] - raw position.
2662:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2663:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2664:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns 1 if row and column sensors of matrix button are active, 0 - in other
2665:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  cases.
2666:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2667:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2668:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_fingerThreshold[ ] - used to store the finger threshold for all widgets.
2669:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_sensorSignal[ ] - used to store a difference between the current value of
2670:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  raw data and a previous value of the baseline.
2671:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2672:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2673:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2674:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2675:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2676:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetMatrixButtonPos(uint32 widget, uint8* pos)
2677:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2678:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
2679:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 retVal = 0u;
2680:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 row_sig_max = 0u;
2681:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 col_sig_max = 0u;
2682:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 row_ind = 0u;
2683:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 col_ind = 0u;
2684:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2685:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(widget) == 1u)
2686:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2687:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2688:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget]; i < (CapSense_rawDataIndex[widget] + \
2689:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget]); i++)
2690:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2691:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > col_sig_max)
2692:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2693:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_ind = i;
2694:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_sig_max = CapSense_sensorSignal[i];
2695:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2696:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2697:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2698:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2699:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget+1u]; i < (CapSense_rawDataIndex[widget+1u] + \
2700:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget+1u]); i++)
2701:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2702:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > row_sig_max)
2703:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2704:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_ind = i;
2705:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_sig_max = CapSense_sensorSignal[i];
2706:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 70


2707:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2708:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2709:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if((col_sig_max >= CapSense_fingerThreshold[widget]) && \
2710:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                (row_sig_max >= CapSense_fingerThreshold[widget+1u]))
2711:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2712:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = col_ind - CapSense_rawDataIndex[widget];
2713:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = row_ind - CapSense_rawDataIndex[widget+1u];
2714:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 retVal = 1u;
2715:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2716:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2717:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (retVal);
2718:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2719:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2720:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
2721:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2722:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2723:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetWidgetNumber
2724:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2725:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2726:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2727:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor.
2728:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2729:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2730:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2731:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2732:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2733:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2734:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor.
2735:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2736:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2737:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
2738:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2739:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2740:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2741:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2742:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2743:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_GetWidgetNumber(uint32 sensor)
2744:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1166              		.loc 1 2744 0
 1167              		.cfi_startproc
 1168              	.LVL140:
2745:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return((uint32)CapSense_widgetNumber[sensor]);
 1169              		.loc 1 2745 0
 1170 0000 014B     		ldr	r3, .L91
 1171 0002 185C     		ldrb	r0, [r3, r0]
 1172              	.LVL141:
2746:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1173              		.loc 1 2746 0
 1174              		@ sp needed
 1175 0004 7047     		bx	lr
 1176              	.L92:
 1177 0006 C046     		.align	2
 1178              	.L91:
 1179 0008 00000000 		.word	CapSense_widgetNumber
 1180              		.cfi_endproc
 1181              	.LFE57:
 1182              		.size	CapSense_GetWidgetNumber, .-CapSense_GetWidgetNumber
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 71


 1183              		.section	.text.CapSense_GetLowBaselineReset,"ax",%progbits
 1184              		.align	2
 1185              		.global	CapSense_GetLowBaselineReset
 1186              		.code	16
 1187              		.thumb_func
 1188              		.type	CapSense_GetLowBaselineReset, %function
 1189              	CapSense_GetLowBaselineReset:
 1190              	.LFB58:
2747:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2748:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2749:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetLowBaselineReset
2750:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2751:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2752:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2753:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the low baseline reset threshold value for the  sensor.
2754:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2755:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2756:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2757:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2758:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2759:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2760:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  low baseline reset threshold value a sensor.
2761:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2762:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2763:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_lowBaselineReset[]  - stores low baseline reset values.
2764:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2765:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2766:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2767:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2768:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2769:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetLowBaselineReset(uint32 sensor)
2770:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1191              		.loc 1 2770 0
 1192              		.cfi_startproc
 1193              	.LVL142:
2771:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_lowBaselineReset[sensor]);
 1194              		.loc 1 2771 0
 1195 0000 014B     		ldr	r3, .L94
 1196 0002 1818     		add	r0, r3, r0
 1197              	.LVL143:
 1198 0004 0079     		ldrb	r0, [r0, #4]
2772:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1199              		.loc 1 2772 0
 1200              		@ sp needed
 1201 0006 7047     		bx	lr
 1202              	.L95:
 1203              		.align	2
 1204              	.L94:
 1205 0008 00000000 		.word	.LANCHOR2
 1206              		.cfi_endproc
 1207              	.LFE58:
 1208              		.size	CapSense_GetLowBaselineReset, .-CapSense_GetLowBaselineReset
 1209              		.section	.text.CapSense_GetDebounce,"ax",%progbits
 1210              		.align	2
 1211              		.global	CapSense_GetDebounce
 1212              		.code	16
 1213              		.thumb_func
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 72


 1214              		.type	CapSense_GetDebounce, %function
 1215              	CapSense_GetDebounce:
 1216              	.LFB59:
2773:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2774:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2775:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDebounce
2776:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2777:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2778:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2779:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns a debounce value.
2780:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2781:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2782:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2783:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2784:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2785:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2786:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Debounce value
2787:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2788:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2789:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounce[]  - stores the debounce value.
2790:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2791:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2792:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2793:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2794:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2795:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetDebounce(uint32 widget)
2796:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1217              		.loc 1 2796 0
 1218              		.cfi_startproc
 1219              	.LVL144:
2797:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_debounce[widget]);
 1220              		.loc 1 2797 0
 1221 0000 014B     		ldr	r3, .L97
 1222 0002 185C     		ldrb	r0, [r3, r0]
 1223              	.LVL145:
2798:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1224              		.loc 1 2798 0
 1225              		@ sp needed
 1226 0004 7047     		bx	lr
 1227              	.L98:
 1228 0006 C046     		.align	2
 1229              	.L97:
 1230 0008 00000000 		.word	.LANCHOR1
 1231              		.cfi_endproc
 1232              	.LFE59:
 1233              		.size	CapSense_GetDebounce, .-CapSense_GetDebounce
 1234              		.section	.text.CapSense_EnableRawDataFilters,"ax",%progbits
 1235              		.align	2
 1236              		.global	CapSense_EnableRawDataFilters
 1237              		.code	16
 1238              		.thumb_func
 1239              		.type	CapSense_EnableRawDataFilters, %function
 1240              	CapSense_EnableRawDataFilters:
 1241              	.LFB60:
2799:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2800:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
2801:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 73


2802:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_EnableRawDataFilters
2803:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2804:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2805:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2806:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Enables the rawdata filters for the sensor signals.
2807:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2808:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2809:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2810:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2811:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2812:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2813:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2814:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2815:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_enableRawFilters defines if the filters are enabled or not.
2816:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2817:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2818:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2819:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2820:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2821:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_EnableRawDataFilters(void)
2822:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1242              		.loc 1 2822 0
 1243              		.cfi_startproc
2823:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
 1244              		.loc 1 2823 0
 1245 0000 0122     		mov	r2, #1
 1246 0002 014B     		ldr	r3, .L100
 1247 0004 1A70     		strb	r2, [r3]
2824:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1248              		.loc 1 2824 0
 1249              		@ sp needed
 1250 0006 7047     		bx	lr
 1251              	.L101:
 1252              		.align	2
 1253              	.L100:
 1254 0008 00000000 		.word	.LANCHOR2
 1255              		.cfi_endproc
 1256              	.LFE60:
 1257              		.size	CapSense_EnableRawDataFilters, .-CapSense_EnableRawDataFilters
 1258              		.section	.text.CapSense_DisableRawDataFilters,"ax",%progbits
 1259              		.align	2
 1260              		.global	CapSense_DisableRawDataFilters
 1261              		.code	16
 1262              		.thumb_func
 1263              		.type	CapSense_DisableRawDataFilters, %function
 1264              	CapSense_DisableRawDataFilters:
 1265              	.LFB61:
2825:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2826:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2827:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_DisableRawDataFilters
2828:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2829:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2830:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2831:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Disables the rawdata filters for the sensor signals.
2832:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2833:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2834:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 74


2835:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2836:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2837:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2838:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2839:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2840:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_enableRawFilters defines if the filters are enabled or not.
2841:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2842:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2843:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2844:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2845:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2846:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_DisableRawDataFilters(void)
2847:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1266              		.loc 1 2847 0
 1267              		.cfi_startproc
2848:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_enableRawFilters = CapSense_RAW_FILTERS_DISABLED;
 1268              		.loc 1 2848 0
 1269 0000 0022     		mov	r2, #0
 1270 0002 014B     		ldr	r3, .L103
 1271 0004 1A70     		strb	r2, [r3]
2849:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1272              		.loc 1 2849 0
 1273              		@ sp needed
 1274 0006 7047     		bx	lr
 1275              	.L104:
 1276              		.align	2
 1277              	.L103:
 1278 0008 00000000 		.word	.LANCHOR2
 1279              		.cfi_endproc
 1280              	.LFE61:
 1281              		.size	CapSense_DisableRawDataFilters, .-CapSense_DisableRawDataFilters
 1282              		.global	CapSense_numberOfSensors
 1283              		.global	CapSense_rawDataIndex
 1284              		.global	CapSense_debounce
 1285              		.global	CapSense_hysteresis
 1286              		.global	CapSense_noiseThreshold
 1287              		.global	CapSense_fingerThreshold
 1288              		.global	CapSense_enableRawFilters
 1289              		.global	CapSense_lowBaselineReset
 1290              		.comm	CapSense_lowBaselineResetCnt,10,4
 1291              		.global	CapSense_sensorOnMask
 1292              		.global	CapSense_sensorSignal
 1293              		.global	CapSense_sensorBaselineLow
 1294              		.global	CapSense_sensorBaseline
 1295              		.comm	CapSense_rawFilterData1,20,4
 1296              		.section	.rodata
 1297              		.align	2
 1298              		.set	.LANCHOR1,. + 0
 1299              		.type	CapSense_debounce, %object
 1300              		.size	CapSense_debounce, 10
 1301              	CapSense_debounce:
 1302 0000 01       		.byte	1
 1303 0001 01       		.byte	1
 1304 0002 01       		.byte	1
 1305 0003 01       		.byte	1
 1306 0004 01       		.byte	1
 1307 0005 01       		.byte	1
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 75


 1308 0006 01       		.byte	1
 1309 0007 01       		.byte	1
 1310 0008 01       		.byte	1
 1311 0009 01       		.byte	1
 1312 000a 0000     		.space	2
 1313              		.type	CapSense_fingerThreshold, %object
 1314              		.size	CapSense_fingerThreshold, 20
 1315              	CapSense_fingerThreshold:
 1316 000c 0100     		.short	1
 1317 000e 0100     		.short	1
 1318 0010 0100     		.short	1
 1319 0012 0100     		.short	1
 1320 0014 0100     		.short	1
 1321 0016 0100     		.short	1
 1322 0018 0100     		.short	1
 1323 001a 0100     		.short	1
 1324 001c 0100     		.short	1
 1325 001e 0100     		.short	1
 1326              		.type	CapSense_noiseThreshold, %object
 1327              		.size	CapSense_noiseThreshold, 20
 1328              	CapSense_noiseThreshold:
 1329 0020 0100     		.short	1
 1330 0022 0100     		.short	1
 1331 0024 0100     		.short	1
 1332 0026 0100     		.short	1
 1333 0028 0100     		.short	1
 1334 002a 0100     		.short	1
 1335 002c 0100     		.short	1
 1336 002e 0100     		.short	1
 1337 0030 0100     		.short	1
 1338 0032 0100     		.short	1
 1339              		.type	CapSense_hysteresis, %object
 1340              		.size	CapSense_hysteresis, 20
 1341              	CapSense_hysteresis:
 1342 0034 0100     		.short	1
 1343 0036 0100     		.short	1
 1344 0038 0100     		.short	1
 1345 003a 0100     		.short	1
 1346 003c 0100     		.short	1
 1347 003e 0100     		.short	1
 1348 0040 0100     		.short	1
 1349 0042 0100     		.short	1
 1350 0044 0100     		.short	1
 1351 0046 0100     		.short	1
 1352              		.type	CapSense_rawDataIndex, %object
 1353              		.size	CapSense_rawDataIndex, 10
 1354              	CapSense_rawDataIndex:
 1355 0048 00       		.byte	0
 1356 0049 01       		.byte	1
 1357 004a 02       		.byte	2
 1358 004b 03       		.byte	3
 1359 004c 04       		.byte	4
 1360 004d 05       		.byte	5
 1361 004e 06       		.byte	6
 1362 004f 07       		.byte	7
 1363 0050 08       		.byte	8
 1364 0051 09       		.byte	9
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 76


 1365 0052 0000     		.space	2
 1366              		.type	CapSense_numberOfSensors, %object
 1367              		.size	CapSense_numberOfSensors, 10
 1368              	CapSense_numberOfSensors:
 1369 0054 01       		.byte	1
 1370 0055 01       		.byte	1
 1371 0056 01       		.byte	1
 1372 0057 01       		.byte	1
 1373 0058 01       		.byte	1
 1374 0059 01       		.byte	1
 1375 005a 01       		.byte	1
 1376 005b 01       		.byte	1
 1377 005c 01       		.byte	1
 1378 005d 01       		.byte	1
 1379 005e 0000     		.data
 1380              		.align	2
 1381              		.set	.LANCHOR2,. + 0
 1382              		.type	CapSense_enableRawFilters, %object
 1383              		.size	CapSense_enableRawFilters, 1
 1384              	CapSense_enableRawFilters:
 1385 0000 01       		.byte	1
 1386 0001 000000   		.space	3
 1387              		.type	CapSense_lowBaselineReset, %object
 1388              		.size	CapSense_lowBaselineReset, 10
 1389              	CapSense_lowBaselineReset:
 1390 0004 05       		.byte	5
 1391 0005 05       		.byte	5
 1392 0006 05       		.byte	5
 1393 0007 05       		.byte	5
 1394 0008 05       		.byte	5
 1395 0009 05       		.byte	5
 1396 000a 05       		.byte	5
 1397 000b 05       		.byte	5
 1398 000c 05       		.byte	5
 1399 000d 05       		.byte	5
 1400 000e 0000     		.bss
 1401              		.align	2
 1402              		.set	.LANCHOR0,. + 0
 1403              		.type	CapSense_sensorBaseline, %object
 1404              		.size	CapSense_sensorBaseline, 20
 1405              	CapSense_sensorBaseline:
 1406 0000 00000000 		.space	20
 1406      00000000 
 1406      00000000 
 1406      00000000 
 1406      00000000 
 1407              		.type	CapSense_sensorBaselineLow, %object
 1408              		.size	CapSense_sensorBaselineLow, 10
 1409              	CapSense_sensorBaselineLow:
 1410 0014 00000000 		.space	10
 1410      00000000 
 1410      0000
 1411 001e 0000     		.space	2
 1412              		.type	CapSense_sensorSignal, %object
 1413              		.size	CapSense_sensorSignal, 20
 1414              	CapSense_sensorSignal:
 1415 0020 00000000 		.space	20
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 77


 1415      00000000 
 1415      00000000 
 1415      00000000 
 1415      00000000 
 1416              		.type	CapSense_debounceCounter, %object
 1417              		.size	CapSense_debounceCounter, 11
 1418              	CapSense_debounceCounter:
 1419 0034 00000000 		.space	11
 1419      00000000 
 1419      000000
 1420 003f 00       		.space	1
 1421              		.type	CapSense_sensorOnMask, %object
 1422              		.size	CapSense_sensorOnMask, 2
 1423              	CapSense_sensorOnMask:
 1424 0040 0000     		.space	2
 1425 0042 0000     		.text
 1426              	.Letext0:
 1427              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1428              		.file 3 ".\\Generated_Source\\PSoC4\\CapSense.h"
 1429              		.file 4 ".\\Generated_Source\\PSoC4\\CapSense_PVT.h"
 1430              		.section	.debug_info,"",%progbits
 1431              	.Ldebug_info0:
 1432 0000 2E0A0000 		.4byte	0xa2e
 1433 0004 0400     		.2byte	0x4
 1434 0006 00000000 		.4byte	.Ldebug_abbrev0
 1435 000a 04       		.byte	0x4
 1436 000b 01       		.uleb128 0x1
 1437 000c 54040000 		.4byte	.LASF81
 1438 0010 01       		.byte	0x1
 1439 0011 76030000 		.4byte	.LASF82
 1440 0015 CB000000 		.4byte	.LASF83
 1441 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1442 001d 00000000 		.4byte	0
 1443 0021 00000000 		.4byte	.Ldebug_line0
 1444 0025 02       		.uleb128 0x2
 1445 0026 01       		.byte	0x1
 1446 0027 06       		.byte	0x6
 1447 0028 AD010000 		.4byte	.LASF0
 1448 002c 02       		.uleb128 0x2
 1449 002d 01       		.byte	0x1
 1450 002e 08       		.byte	0x8
 1451 002f 68050000 		.4byte	.LASF1
 1452 0033 02       		.uleb128 0x2
 1453 0034 02       		.byte	0x2
 1454 0035 05       		.byte	0x5
 1455 0036 BE050000 		.4byte	.LASF2
 1456 003a 02       		.uleb128 0x2
 1457 003b 02       		.byte	0x2
 1458 003c 07       		.byte	0x7
 1459 003d 1F030000 		.4byte	.LASF3
 1460 0041 02       		.uleb128 0x2
 1461 0042 04       		.byte	0x4
 1462 0043 05       		.byte	0x5
 1463 0044 F8010000 		.4byte	.LASF4
 1464 0048 02       		.uleb128 0x2
 1465 0049 04       		.byte	0x4
 1466 004a 07       		.byte	0x7
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 78


 1467 004b CA020000 		.4byte	.LASF5
 1468 004f 02       		.uleb128 0x2
 1469 0050 08       		.byte	0x8
 1470 0051 05       		.byte	0x5
 1471 0052 9F010000 		.4byte	.LASF6
 1472 0056 02       		.uleb128 0x2
 1473 0057 08       		.byte	0x8
 1474 0058 07       		.byte	0x7
 1475 0059 B4000000 		.4byte	.LASF7
 1476 005d 03       		.uleb128 0x3
 1477 005e 04       		.byte	0x4
 1478 005f 05       		.byte	0x5
 1479 0060 696E7400 		.ascii	"int\000"
 1480 0064 02       		.uleb128 0x2
 1481 0065 04       		.byte	0x4
 1482 0066 07       		.byte	0x7
 1483 0067 BD020000 		.4byte	.LASF8
 1484 006b 04       		.uleb128 0x4
 1485 006c 21020000 		.4byte	.LASF9
 1486 0070 02       		.byte	0x2
 1487 0071 C2       		.byte	0xc2
 1488 0072 2C000000 		.4byte	0x2c
 1489 0076 04       		.uleb128 0x4
 1490 0077 00000000 		.4byte	.LASF10
 1491 007b 02       		.byte	0x2
 1492 007c C3       		.byte	0xc3
 1493 007d 3A000000 		.4byte	0x3a
 1494 0081 04       		.uleb128 0x4
 1495 0082 7D020000 		.4byte	.LASF11
 1496 0086 02       		.byte	0x2
 1497 0087 C4       		.byte	0xc4
 1498 0088 48000000 		.4byte	0x48
 1499 008c 02       		.uleb128 0x2
 1500 008d 04       		.byte	0x4
 1501 008e 04       		.byte	0x4
 1502 008f 28050000 		.4byte	.LASF12
 1503 0093 02       		.uleb128 0x2
 1504 0094 08       		.byte	0x8
 1505 0095 04       		.byte	0x4
 1506 0096 60020000 		.4byte	.LASF13
 1507 009a 02       		.uleb128 0x2
 1508 009b 01       		.byte	0x1
 1509 009c 08       		.byte	0x8
 1510 009d 5D060000 		.4byte	.LASF14
 1511 00a1 02       		.uleb128 0x2
 1512 00a2 04       		.byte	0x4
 1513 00a3 07       		.byte	0x7
 1514 00a4 C2030000 		.4byte	.LASF15
 1515 00a8 05       		.uleb128 0x5
 1516 00a9 04       		.byte	0x4
 1517 00aa 6B000000 		.4byte	0x6b
 1518 00ae 05       		.uleb128 0x5
 1519 00af 04       		.byte	0x4
 1520 00b0 B4000000 		.4byte	0xb4
 1521 00b4 06       		.uleb128 0x6
 1522 00b5 6B000000 		.4byte	0x6b
 1523 00b9 07       		.uleb128 0x7
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 79


 1524 00ba DF050000 		.4byte	.LASF16
 1525 00be 01       		.byte	0x1
 1526 00bf 9C       		.byte	0x9c
 1527 00c0 00000000 		.4byte	.LFB35
 1528 00c4 3C000000 		.4byte	.LFE35-.LFB35
 1529 00c8 01       		.uleb128 0x1
 1530 00c9 9C       		.byte	0x9c
 1531 00ca ED000000 		.4byte	0xed
 1532 00ce 08       		.uleb128 0x8
 1533 00cf 32030000 		.4byte	.LASF18
 1534 00d3 01       		.byte	0x1
 1535 00d4 9C       		.byte	0x9c
 1536 00d5 81000000 		.4byte	0x81
 1537 00d9 00000000 		.4byte	.LLST0
 1538 00dd 09       		.uleb128 0x9
 1539 00de C8050000 		.4byte	.LASF20
 1540 00e2 01       		.byte	0x1
 1541 00e3 A0       		.byte	0xa0
 1542 00e4 6B000000 		.4byte	0x6b
 1543 00e8 21000000 		.4byte	.LLST1
 1544 00ec 00       		.byte	0
 1545 00ed 07       		.uleb128 0x7
 1546 00ee E1030000 		.4byte	.LASF17
 1547 00f2 01       		.byte	0x1
 1548 00f3 E8       		.byte	0xe8
 1549 00f4 00000000 		.4byte	.LFB36
 1550 00f8 18000000 		.4byte	.LFE36-.LFB36
 1551 00fc 01       		.uleb128 0x1
 1552 00fd 9C       		.byte	0x9c
 1553 00fe 3F010000 		.4byte	0x13f
 1554 0102 08       		.uleb128 0x8
 1555 0103 32030000 		.4byte	.LASF18
 1556 0107 01       		.byte	0x1
 1557 0108 E8       		.byte	0xe8
 1558 0109 81000000 		.4byte	0x81
 1559 010d 34000000 		.4byte	.LLST2
 1560 0111 0A       		.uleb128 0xa
 1561 0112 08000000 		.4byte	.LVL5
 1562 0116 DD090000 		.4byte	0x9dd
 1563 011a 25010000 		.4byte	0x125
 1564 011e 0B       		.uleb128 0xb
 1565 011f 01       		.uleb128 0x1
 1566 0120 50       		.byte	0x50
 1567 0121 02       		.uleb128 0x2
 1568 0122 74       		.byte	0x74
 1569 0123 00       		.sleb128 0
 1570 0124 00       		.byte	0
 1571 0125 0C       		.uleb128 0xc
 1572 0126 0C000000 		.4byte	.LVL6
 1573 012a EE090000 		.4byte	0x9ee
 1574 012e 0D       		.uleb128 0xd
 1575 012f 16000000 		.4byte	.LVL7
 1576 0133 B9000000 		.4byte	0xb9
 1577 0137 0B       		.uleb128 0xb
 1578 0138 01       		.uleb128 0x1
 1579 0139 50       		.byte	0x50
 1580 013a 02       		.uleb128 0x2
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 80


 1581 013b 74       		.byte	0x74
 1582 013c 00       		.sleb128 0
 1583 013d 00       		.byte	0
 1584 013e 00       		.byte	0
 1585 013f 0E       		.uleb128 0xe
 1586 0140 76050000 		.4byte	.LASF19
 1587 0144 01       		.byte	0x1
 1588 0145 0D01     		.2byte	0x10d
 1589 0147 00000000 		.4byte	.LFB37
 1590 014b 14000000 		.4byte	.LFE37-.LFB37
 1591 014f 01       		.uleb128 0x1
 1592 0150 9C       		.byte	0x9c
 1593 0151 74010000 		.4byte	0x174
 1594 0155 0F       		.uleb128 0xf
 1595 0156 6900     		.ascii	"i\000"
 1596 0158 01       		.byte	0x1
 1597 0159 0F01     		.2byte	0x10f
 1598 015b 81000000 		.4byte	0x81
 1599 015f 60000000 		.4byte	.LLST3
 1600 0163 0D       		.uleb128 0xd
 1601 0164 0C000000 		.4byte	.LVL11
 1602 0168 ED000000 		.4byte	0xed
 1603 016c 0B       		.uleb128 0xb
 1604 016d 01       		.uleb128 0x1
 1605 016e 50       		.byte	0x50
 1606 016f 02       		.uleb128 0x2
 1607 0170 74       		.byte	0x74
 1608 0171 00       		.sleb128 0
 1609 0172 00       		.byte	0
 1610 0173 00       		.byte	0
 1611 0174 0E       		.uleb128 0xe
 1612 0175 5B010000 		.4byte	.LASF21
 1613 0179 01       		.byte	0x1
 1614 017a 3001     		.2byte	0x130
 1615 017c 00000000 		.4byte	.LFB38
 1616 0180 30000000 		.4byte	.LFE38-.LFB38
 1617 0184 01       		.uleb128 0x1
 1618 0185 9C       		.byte	0x9c
 1619 0186 DF010000 		.4byte	0x1df
 1620 018a 0F       		.uleb128 0xf
 1621 018b 6900     		.ascii	"i\000"
 1622 018d 01       		.byte	0x1
 1623 018e 3201     		.2byte	0x132
 1624 0190 81000000 		.4byte	0x81
 1625 0194 7F000000 		.4byte	.LLST4
 1626 0198 10       		.uleb128 0x10
 1627 0199 CF050000 		.4byte	.LASF22
 1628 019d 01       		.byte	0x1
 1629 019e 3301     		.2byte	0x133
 1630 01a0 81000000 		.4byte	0x81
 1631 01a4 92000000 		.4byte	.LLST5
 1632 01a8 0C       		.uleb128 0xc
 1633 01a9 06000000 		.4byte	.LVL14
 1634 01ad F9090000 		.4byte	0x9f9
 1635 01b1 0C       		.uleb128 0xc
 1636 01b2 0A000000 		.4byte	.LVL15
 1637 01b6 EE090000 		.4byte	0x9ee
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 81


 1638 01ba 0A       		.uleb128 0xa
 1639 01bb 1A000000 		.4byte	.LVL17
 1640 01bf 000A0000 		.4byte	0xa00
 1641 01c3 CE010000 		.4byte	0x1ce
 1642 01c7 0B       		.uleb128 0xb
 1643 01c8 01       		.uleb128 0x1
 1644 01c9 51       		.byte	0x51
 1645 01ca 02       		.uleb128 0x2
 1646 01cb 74       		.byte	0x74
 1647 01cc 00       		.sleb128 0
 1648 01cd 00       		.byte	0
 1649 01ce 0D       		.uleb128 0xd
 1650 01cf 24000000 		.4byte	.LVL19
 1651 01d3 B9000000 		.4byte	0xb9
 1652 01d7 0B       		.uleb128 0xb
 1653 01d8 01       		.uleb128 0x1
 1654 01d9 50       		.byte	0x50
 1655 01da 02       		.uleb128 0x2
 1656 01db 74       		.byte	0x74
 1657 01dc 00       		.sleb128 0
 1658 01dd 00       		.byte	0
 1659 01de 00       		.byte	0
 1660 01df 11       		.uleb128 0x11
 1661 01e0 D9010000 		.4byte	.LASF25
 1662 01e4 01       		.byte	0x1
 1663 01e5 C502     		.2byte	0x2c5
 1664 01e7 76000000 		.4byte	0x76
 1665 01eb 00000000 		.4byte	.LFB43
 1666 01ef 0C000000 		.4byte	.LFE43-.LFB43
 1667 01f3 01       		.uleb128 0x1
 1668 01f4 9C       		.byte	0x9c
 1669 01f5 0A020000 		.4byte	0x20a
 1670 01f9 12       		.uleb128 0x12
 1671 01fa 32030000 		.4byte	.LASF18
 1672 01fe 01       		.byte	0x1
 1673 01ff C502     		.2byte	0x2c5
 1674 0201 81000000 		.4byte	0x81
 1675 0205 A5000000 		.4byte	.LLST6
 1676 0209 00       		.byte	0
 1677 020a 0E       		.uleb128 0xe
 1678 020b 96050000 		.4byte	.LASF23
 1679 020f 01       		.byte	0x1
 1680 0210 E002     		.2byte	0x2e0
 1681 0212 00000000 		.4byte	.LFB44
 1682 0216 0C000000 		.4byte	.LFE44-.LFB44
 1683 021a 01       		.uleb128 0x1
 1684 021b 9C       		.byte	0x9c
 1685 021c 3F020000 		.4byte	0x23f
 1686 0220 12       		.uleb128 0x12
 1687 0221 32030000 		.4byte	.LASF18
 1688 0225 01       		.byte	0x1
 1689 0226 E002     		.2byte	0x2e0
 1690 0228 81000000 		.4byte	0x81
 1691 022c C6000000 		.4byte	.LLST7
 1692 0230 13       		.uleb128 0x13
 1693 0231 1A030000 		.4byte	.LASF24
 1694 0235 01       		.byte	0x1
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 82


 1695 0236 E002     		.2byte	0x2e0
 1696 0238 76000000 		.4byte	0x76
 1697 023c 01       		.uleb128 0x1
 1698 023d 51       		.byte	0x51
 1699 023e 00       		.byte	0
 1700 023f 11       		.uleb128 0x11
 1701 0240 9F030000 		.4byte	.LASF26
 1702 0244 01       		.byte	0x1
 1703 0245 FB02     		.2byte	0x2fb
 1704 0247 76000000 		.4byte	0x76
 1705 024b 00000000 		.4byte	.LFB45
 1706 024f 10000000 		.4byte	.LFE45-.LFB45
 1707 0253 01       		.uleb128 0x1
 1708 0254 9C       		.byte	0x9c
 1709 0255 6A020000 		.4byte	0x26a
 1710 0259 12       		.uleb128 0x12
 1711 025a 32030000 		.4byte	.LASF18
 1712 025e 01       		.byte	0x1
 1713 025f FB02     		.2byte	0x2fb
 1714 0261 81000000 		.4byte	0x81
 1715 0265 E7000000 		.4byte	.LLST8
 1716 0269 00       		.byte	0
 1717 026a 0E       		.uleb128 0xe
 1718 026b D8060000 		.4byte	.LASF27
 1719 026f 01       		.byte	0x1
 1720 0270 1603     		.2byte	0x316
 1721 0272 00000000 		.4byte	.LFB46
 1722 0276 10000000 		.4byte	.LFE46-.LFB46
 1723 027a 01       		.uleb128 0x1
 1724 027b 9C       		.byte	0x9c
 1725 027c 9F020000 		.4byte	0x29f
 1726 0280 12       		.uleb128 0x12
 1727 0281 32030000 		.4byte	.LASF18
 1728 0285 01       		.byte	0x1
 1729 0286 1603     		.2byte	0x316
 1730 0288 81000000 		.4byte	0x81
 1731 028c 08010000 		.4byte	.LLST9
 1732 0290 13       		.uleb128 0x13
 1733 0291 8F020000 		.4byte	.LASF28
 1734 0295 01       		.byte	0x1
 1735 0296 1603     		.2byte	0x316
 1736 0298 76000000 		.4byte	0x76
 1737 029c 01       		.uleb128 0x1
 1738 029d 51       		.byte	0x51
 1739 029e 00       		.byte	0
 1740 029f 11       		.uleb128 0x11
 1741 02a0 20040000 		.4byte	.LASF29
 1742 02a4 01       		.byte	0x1
 1743 02a5 3103     		.2byte	0x331
 1744 02a7 76000000 		.4byte	0x76
 1745 02ab 00000000 		.4byte	.LFB47
 1746 02af 10000000 		.4byte	.LFE47-.LFB47
 1747 02b3 01       		.uleb128 0x1
 1748 02b4 9C       		.byte	0x9c
 1749 02b5 CA020000 		.4byte	0x2ca
 1750 02b9 12       		.uleb128 0x12
 1751 02ba C8050000 		.4byte	.LASF20
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 83


 1752 02be 01       		.byte	0x1
 1753 02bf 3103     		.2byte	0x331
 1754 02c1 81000000 		.4byte	0x81
 1755 02c5 29010000 		.4byte	.LLST10
 1756 02c9 00       		.byte	0
 1757 02ca 11       		.uleb128 0x11
 1758 02cb 40010000 		.4byte	.LASF30
 1759 02cf 01       		.byte	0x1
 1760 02d0 4C03     		.2byte	0x34c
 1761 02d2 76000000 		.4byte	0x76
 1762 02d6 00000000 		.4byte	.LFB48
 1763 02da 10000000 		.4byte	.LFE48-.LFB48
 1764 02de 01       		.uleb128 0x1
 1765 02df 9C       		.byte	0x9c
 1766 02e0 F5020000 		.4byte	0x2f5
 1767 02e4 12       		.uleb128 0x12
 1768 02e5 C8050000 		.4byte	.LASF20
 1769 02e9 01       		.byte	0x1
 1770 02ea 4C03     		.2byte	0x34c
 1771 02ec 81000000 		.4byte	0x81
 1772 02f0 4A010000 		.4byte	.LLST11
 1773 02f4 00       		.byte	0
 1774 02f5 11       		.uleb128 0x11
 1775 02f6 7C060000 		.4byte	.LASF31
 1776 02fa 01       		.byte	0x1
 1777 02fb 6803     		.2byte	0x368
 1778 02fd 76000000 		.4byte	0x76
 1779 0301 00000000 		.4byte	.LFB49
 1780 0305 10000000 		.4byte	.LFE49-.LFB49
 1781 0309 01       		.uleb128 0x1
 1782 030a 9C       		.byte	0x9c
 1783 030b 20030000 		.4byte	0x320
 1784 030f 12       		.uleb128 0x12
 1785 0310 C8050000 		.4byte	.LASF20
 1786 0314 01       		.byte	0x1
 1787 0315 6803     		.2byte	0x368
 1788 0317 81000000 		.4byte	0x81
 1789 031b 6B010000 		.4byte	.LLST12
 1790 031f 00       		.byte	0
 1791 0320 11       		.uleb128 0x11
 1792 0321 4E000000 		.4byte	.LASF32
 1793 0325 01       		.byte	0x1
 1794 0326 8403     		.2byte	0x384
 1795 0328 76000000 		.4byte	0x76
 1796 032c 00000000 		.4byte	.LFB50
 1797 0330 04000000 		.4byte	.LFE50-.LFB50
 1798 0334 01       		.uleb128 0x1
 1799 0335 9C       		.byte	0x9c
 1800 0336 4B030000 		.4byte	0x34b
 1801 033a 12       		.uleb128 0x12
 1802 033b C8050000 		.4byte	.LASF20
 1803 033f 01       		.byte	0x1
 1804 0340 8403     		.2byte	0x384
 1805 0342 81000000 		.4byte	0x81
 1806 0346 8C010000 		.4byte	.LLST13
 1807 034a 00       		.byte	0
 1808 034b 11       		.uleb128 0x11
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 84


 1809 034c 03040000 		.4byte	.LASF33
 1810 0350 01       		.byte	0x1
 1811 0351 6004     		.2byte	0x460
 1812 0353 81000000 		.4byte	0x81
 1813 0357 00000000 		.4byte	.LFB51
 1814 035b A0000000 		.4byte	.LFE51-.LFB51
 1815 035f 01       		.uleb128 0x1
 1816 0360 9C       		.byte	0x9c
 1817 0361 36040000 		.4byte	0x436
 1818 0365 12       		.uleb128 0x12
 1819 0366 32030000 		.4byte	.LASF18
 1820 036a 01       		.byte	0x1
 1821 036b 6004     		.2byte	0x460
 1822 036d 81000000 		.4byte	0x81
 1823 0371 AD010000 		.4byte	.LLST14
 1824 0375 14       		.uleb128 0x14
 1825 0376 C8050000 		.4byte	.LASF20
 1826 037a 01       		.byte	0x1
 1827 037b 6204     		.2byte	0x462
 1828 037d 6B000000 		.4byte	0x6b
 1829 0381 10       		.uleb128 0x10
 1830 0382 B9030000 		.4byte	.LASF34
 1831 0386 01       		.byte	0x1
 1832 0387 6304     		.2byte	0x463
 1833 0389 6B000000 		.4byte	0x6b
 1834 038d D9010000 		.4byte	.LLST15
 1835 0391 14       		.uleb128 0x14
 1836 0392 A5060000 		.4byte	.LASF35
 1837 0396 01       		.byte	0x1
 1838 0397 6404     		.2byte	0x464
 1839 0399 6B000000 		.4byte	0x6b
 1840 039d 10       		.uleb128 0x10
 1841 039e 71000000 		.4byte	.LASF36
 1842 03a2 01       		.byte	0x1
 1843 03a3 6604     		.2byte	0x466
 1844 03a5 76000000 		.4byte	0x76
 1845 03a9 EC010000 		.4byte	.LLST16
 1846 03ad 10       		.uleb128 0x10
 1847 03ae 84020000 		.4byte	.LASF37
 1848 03b2 01       		.byte	0x1
 1849 03b3 6704     		.2byte	0x467
 1850 03b5 76000000 		.4byte	0x76
 1851 03b9 FF010000 		.4byte	.LLST17
 1852 03bd 0A       		.uleb128 0xa
 1853 03be 24000000 		.4byte	.LVL43
 1854 03c2 000A0000 		.4byte	0xa00
 1855 03c6 DA030000 		.4byte	0x3da
 1856 03ca 0B       		.uleb128 0xb
 1857 03cb 01       		.uleb128 0x1
 1858 03cc 51       		.byte	0x51
 1859 03cd 02       		.uleb128 0x2
 1860 03ce 74       		.byte	0x74
 1861 03cf 00       		.sleb128 0
 1862 03d0 0B       		.uleb128 0xb
 1863 03d1 01       		.uleb128 0x1
 1864 03d2 50       		.byte	0x50
 1865 03d3 05       		.uleb128 0x5
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 85


 1866 03d4 03       		.byte	0x3
 1867 03d5 40000000 		.4byte	.LANCHOR0+64
 1868 03d9 00       		.byte	0
 1869 03da 0A       		.uleb128 0xa
 1870 03db 44000000 		.4byte	.LVL45
 1871 03df 1A0A0000 		.4byte	0xa1a
 1872 03e3 FA030000 		.4byte	0x3fa
 1873 03e7 0B       		.uleb128 0xb
 1874 03e8 01       		.uleb128 0x1
 1875 03e9 52       		.byte	0x52
 1876 03ea 01       		.uleb128 0x1
 1877 03eb 30       		.byte	0x30
 1878 03ec 0B       		.uleb128 0xb
 1879 03ed 01       		.uleb128 0x1
 1880 03ee 51       		.byte	0x51
 1881 03ef 02       		.uleb128 0x2
 1882 03f0 74       		.byte	0x74
 1883 03f1 00       		.sleb128 0
 1884 03f2 0B       		.uleb128 0xb
 1885 03f3 01       		.uleb128 0x1
 1886 03f4 50       		.byte	0x50
 1887 03f5 03       		.uleb128 0x3
 1888 03f6 75       		.byte	0x75
 1889 03f7 C000     		.sleb128 64
 1890 03f9 00       		.byte	0
 1891 03fa 0A       		.uleb128 0xa
 1892 03fb 74000000 		.4byte	.LVL48
 1893 03ff 1A0A0000 		.4byte	0xa1a
 1894 0403 1C040000 		.4byte	0x41c
 1895 0407 0B       		.uleb128 0xb
 1896 0408 01       		.uleb128 0x1
 1897 0409 52       		.byte	0x52
 1898 040a 01       		.uleb128 0x1
 1899 040b 31       		.byte	0x31
 1900 040c 0B       		.uleb128 0xb
 1901 040d 01       		.uleb128 0x1
 1902 040e 51       		.byte	0x51
 1903 040f 02       		.uleb128 0x2
 1904 0410 74       		.byte	0x74
 1905 0411 00       		.sleb128 0
 1906 0412 0B       		.uleb128 0xb
 1907 0413 01       		.uleb128 0x1
 1908 0414 50       		.byte	0x50
 1909 0415 05       		.uleb128 0x5
 1910 0416 03       		.byte	0x3
 1911 0417 40000000 		.4byte	.LANCHOR0+64
 1912 041b 00       		.byte	0
 1913 041c 0D       		.uleb128 0xd
 1914 041d 88000000 		.4byte	.LVL49
 1915 0421 000A0000 		.4byte	0xa00
 1916 0425 0B       		.uleb128 0xb
 1917 0426 01       		.uleb128 0x1
 1918 0427 51       		.byte	0x51
 1919 0428 02       		.uleb128 0x2
 1920 0429 74       		.byte	0x74
 1921 042a 00       		.sleb128 0
 1922 042b 0B       		.uleb128 0xb
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 86


 1923 042c 01       		.uleb128 0x1
 1924 042d 50       		.byte	0x50
 1925 042e 05       		.uleb128 0x5
 1926 042f 03       		.byte	0x3
 1927 0430 40000000 		.4byte	.LANCHOR0+64
 1928 0434 00       		.byte	0
 1929 0435 00       		.byte	0
 1930 0436 11       		.uleb128 0x11
 1931 0437 4B050000 		.4byte	.LASF38
 1932 043b 01       		.byte	0x1
 1933 043c B204     		.2byte	0x4b2
 1934 043e 81000000 		.4byte	0x81
 1935 0442 00000000 		.4byte	.LFB52
 1936 0446 2C000000 		.4byte	.LFE52-.LFB52
 1937 044a 01       		.uleb128 0x1
 1938 044b 9C       		.byte	0x9c
 1939 044c A1040000 		.4byte	0x4a1
 1940 0450 12       		.uleb128 0x12
 1941 0451 C8050000 		.4byte	.LASF20
 1942 0455 01       		.byte	0x1
 1943 0456 B204     		.2byte	0x4b2
 1944 0458 81000000 		.4byte	0x81
 1945 045c 45020000 		.4byte	.LLST18
 1946 0460 10       		.uleb128 0x10
 1947 0461 D0010000 		.4byte	.LASF39
 1948 0465 01       		.byte	0x1
 1949 0466 B404     		.2byte	0x4b4
 1950 0468 81000000 		.4byte	0x81
 1951 046c 66020000 		.4byte	.LLST19
 1952 0470 10       		.uleb128 0x10
 1953 0471 B8060000 		.4byte	.LASF40
 1954 0475 01       		.byte	0x1
 1955 0476 B504     		.2byte	0x4b5
 1956 0478 81000000 		.4byte	0x81
 1957 047c 79020000 		.4byte	.LLST20
 1958 0480 10       		.uleb128 0x10
 1959 0481 F2010000 		.4byte	.LASF41
 1960 0485 01       		.byte	0x1
 1961 0486 B604     		.2byte	0x4b6
 1962 0488 81000000 		.4byte	0x81
 1963 048c B4020000 		.4byte	.LLST21
 1964 0490 0D       		.uleb128 0xd
 1965 0491 18000000 		.4byte	.LVL58
 1966 0495 4B030000 		.4byte	0x34b
 1967 0499 0B       		.uleb128 0xb
 1968 049a 01       		.uleb128 0x1
 1969 049b 50       		.byte	0x50
 1970 049c 02       		.uleb128 0x2
 1971 049d 74       		.byte	0x74
 1972 049e 00       		.sleb128 0
 1973 049f 00       		.byte	0
 1974 04a0 00       		.byte	0
 1975 04a1 11       		.uleb128 0x11
 1976 04a2 01020000 		.4byte	.LASF42
 1977 04a6 01       		.byte	0x1
 1978 04a7 E004     		.2byte	0x4e0
 1979 04a9 81000000 		.4byte	0x81
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 87


 1980 04ad 00000000 		.4byte	.LFB53
 1981 04b1 1E000000 		.4byte	.LFE53-.LFB53
 1982 04b5 01       		.uleb128 0x1
 1983 04b6 9C       		.byte	0x9c
 1984 04b7 EA040000 		.4byte	0x4ea
 1985 04bb 0F       		.uleb128 0xf
 1986 04bc 6900     		.ascii	"i\000"
 1987 04be 01       		.byte	0x1
 1988 04bf E304     		.2byte	0x4e3
 1989 04c1 81000000 		.4byte	0x81
 1990 04c5 DE020000 		.4byte	.LLST22
 1991 04c9 10       		.uleb128 0x10
 1992 04ca F2010000 		.4byte	.LASF41
 1993 04ce 01       		.byte	0x1
 1994 04cf E404     		.2byte	0x4e4
 1995 04d1 81000000 		.4byte	0x81
 1996 04d5 FD020000 		.4byte	.LLST23
 1997 04d9 0D       		.uleb128 0xd
 1998 04da 0E000000 		.4byte	.LVL66
 1999 04de 36040000 		.4byte	0x436
 2000 04e2 0B       		.uleb128 0xb
 2001 04e3 01       		.uleb128 0x1
 2002 04e4 50       		.byte	0x50
 2003 04e5 02       		.uleb128 0x2
 2004 04e6 74       		.byte	0x74
 2005 04e7 00       		.sleb128 0
 2006 04e8 00       		.byte	0
 2007 04e9 00       		.byte	0
 2008 04ea 0E       		.uleb128 0xe
 2009 04eb CB030000 		.4byte	.LASF43
 2010 04ef 01       		.byte	0x1
 2011 04f0 0F05     		.2byte	0x50f
 2012 04f2 00000000 		.4byte	.LFB54
 2013 04f6 30000000 		.4byte	.LFE54-.LFB54
 2014 04fa 01       		.uleb128 0x1
 2015 04fb 9C       		.byte	0x9c
 2016 04fc 46050000 		.4byte	0x546
 2017 0500 12       		.uleb128 0x12
 2018 0501 C8050000 		.4byte	.LASF20
 2019 0505 01       		.byte	0x1
 2020 0506 0F05     		.2byte	0x50f
 2021 0508 81000000 		.4byte	0x81
 2022 050c 27030000 		.4byte	.LLST24
 2023 0510 10       		.uleb128 0x10
 2024 0511 D0010000 		.4byte	.LASF39
 2025 0515 01       		.byte	0x1
 2026 0516 1205     		.2byte	0x512
 2027 0518 6B000000 		.4byte	0x6b
 2028 051c 48030000 		.4byte	.LLST25
 2029 0520 10       		.uleb128 0x10
 2030 0521 B8060000 		.4byte	.LASF40
 2031 0525 01       		.byte	0x1
 2032 0526 1305     		.2byte	0x513
 2033 0528 6B000000 		.4byte	0x6b
 2034 052c 66030000 		.4byte	.LLST26
 2035 0530 0D       		.uleb128 0xd
 2036 0531 1C000000 		.4byte	.LVL74
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 88


 2037 0535 1A0A0000 		.4byte	0xa1a
 2038 0539 0B       		.uleb128 0xb
 2039 053a 01       		.uleb128 0x1
 2040 053b 52       		.byte	0x52
 2041 053c 01       		.uleb128 0x1
 2042 053d 31       		.byte	0x31
 2043 053e 0B       		.uleb128 0xb
 2044 053f 01       		.uleb128 0x1
 2045 0540 51       		.byte	0x51
 2046 0541 02       		.uleb128 0x2
 2047 0542 74       		.byte	0x74
 2048 0543 00       		.sleb128 0
 2049 0544 00       		.byte	0
 2050 0545 00       		.byte	0
 2051 0546 0E       		.uleb128 0xe
 2052 0547 B9010000 		.4byte	.LASF44
 2053 054b 01       		.byte	0x1
 2054 054c 3A05     		.2byte	0x53a
 2055 054e 00000000 		.4byte	.LFB55
 2056 0552 30000000 		.4byte	.LFE55-.LFB55
 2057 0556 01       		.uleb128 0x1
 2058 0557 9C       		.byte	0x9c
 2059 0558 A2050000 		.4byte	0x5a2
 2060 055c 12       		.uleb128 0x12
 2061 055d C8050000 		.4byte	.LASF20
 2062 0561 01       		.byte	0x1
 2063 0562 3A05     		.2byte	0x53a
 2064 0564 81000000 		.4byte	0x81
 2065 0568 A1030000 		.4byte	.LLST27
 2066 056c 10       		.uleb128 0x10
 2067 056d D0010000 		.4byte	.LASF39
 2068 0571 01       		.byte	0x1
 2069 0572 3C05     		.2byte	0x53c
 2070 0574 6B000000 		.4byte	0x6b
 2071 0578 C2030000 		.4byte	.LLST28
 2072 057c 10       		.uleb128 0x10
 2073 057d B8060000 		.4byte	.LASF40
 2074 0581 01       		.byte	0x1
 2075 0582 3D05     		.2byte	0x53d
 2076 0584 6B000000 		.4byte	0x6b
 2077 0588 E0030000 		.4byte	.LLST29
 2078 058c 0D       		.uleb128 0xd
 2079 058d 1C000000 		.4byte	.LVL82
 2080 0591 1A0A0000 		.4byte	0xa1a
 2081 0595 0B       		.uleb128 0xb
 2082 0596 01       		.uleb128 0x1
 2083 0597 52       		.byte	0x52
 2084 0598 01       		.uleb128 0x1
 2085 0599 30       		.byte	0x30
 2086 059a 0B       		.uleb128 0xb
 2087 059b 01       		.uleb128 0x1
 2088 059c 51       		.byte	0x51
 2089 059d 02       		.uleb128 0x2
 2090 059e 74       		.byte	0x74
 2091 059f 00       		.sleb128 0
 2092 05a0 00       		.byte	0
 2093 05a1 00       		.byte	0
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 89


 2094 05a2 11       		.uleb128 0x11
 2095 05a3 95020000 		.4byte	.LASF45
 2096 05a7 01       		.byte	0x1
 2097 05a8 CE09     		.2byte	0x9ce
 2098 05aa 76000000 		.4byte	0x76
 2099 05ae 00000000 		.4byte	.LFB56
 2100 05b2 0C000000 		.4byte	.LFE56-.LFB56
 2101 05b6 01       		.uleb128 0x1
 2102 05b7 9C       		.byte	0x9c
 2103 05b8 EB050000 		.4byte	0x5eb
 2104 05bc 15       		.uleb128 0x15
 2105 05bd 783100   		.ascii	"x1\000"
 2106 05c0 01       		.byte	0x1
 2107 05c1 CE09     		.2byte	0x9ce
 2108 05c3 76000000 		.4byte	0x76
 2109 05c7 1B040000 		.4byte	.LLST30
 2110 05cb 15       		.uleb128 0x15
 2111 05cc 783200   		.ascii	"x2\000"
 2112 05cf 01       		.byte	0x1
 2113 05d0 CE09     		.2byte	0x9ce
 2114 05d2 76000000 		.4byte	0x76
 2115 05d6 3C040000 		.4byte	.LLST31
 2116 05da 0F       		.uleb128 0xf
 2117 05db 746D7000 		.ascii	"tmp\000"
 2118 05df 01       		.byte	0x1
 2119 05e0 D009     		.2byte	0x9d0
 2120 05e2 81000000 		.4byte	0x81
 2121 05e6 5D040000 		.4byte	.LLST32
 2122 05ea 00       		.byte	0
 2123 05eb 0E       		.uleb128 0xe
 2124 05ec F7020000 		.4byte	.LASF46
 2125 05f0 01       		.byte	0x1
 2126 05f1 7101     		.2byte	0x171
 2127 05f3 00000000 		.4byte	.LFB39
 2128 05f7 F8000000 		.4byte	.LFE39-.LFB39
 2129 05fb 01       		.uleb128 0x1
 2130 05fc 9C       		.byte	0x9c
 2131 05fd 8B060000 		.4byte	0x68b
 2132 0601 12       		.uleb128 0x12
 2133 0602 32030000 		.4byte	.LASF18
 2134 0606 01       		.byte	0x1
 2135 0607 7101     		.2byte	0x171
 2136 0609 81000000 		.4byte	0x81
 2137 060d 8D040000 		.4byte	.LLST33
 2138 0611 10       		.uleb128 0x10
 2139 0612 71030000 		.4byte	.LASF47
 2140 0616 01       		.byte	0x1
 2141 0617 7301     		.2byte	0x173
 2142 0619 81000000 		.4byte	0x81
 2143 061d D2040000 		.4byte	.LLST34
 2144 0621 10       		.uleb128 0x10
 2145 0622 B3060000 		.4byte	.LASF48
 2146 0626 01       		.byte	0x1
 2147 0627 7401     		.2byte	0x174
 2148 0629 81000000 		.4byte	0x81
 2149 062d 06050000 		.4byte	.LLST35
 2150 0631 10       		.uleb128 0x10
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 90


 2151 0632 73070000 		.4byte	.LASF49
 2152 0636 01       		.byte	0x1
 2153 0637 7501     		.2byte	0x175
 2154 0639 76000000 		.4byte	0x76
 2155 063d 31050000 		.4byte	.LLST36
 2156 0641 10       		.uleb128 0x10
 2157 0642 07000000 		.4byte	.LASF50
 2158 0646 01       		.byte	0x1
 2159 0647 7601     		.2byte	0x176
 2160 0649 76000000 		.4byte	0x76
 2161 064d 4F050000 		.4byte	.LLST37
 2162 0651 10       		.uleb128 0x10
 2163 0652 C8050000 		.4byte	.LASF20
 2164 0656 01       		.byte	0x1
 2165 0657 7701     		.2byte	0x177
 2166 0659 6B000000 		.4byte	0x6b
 2167 065d 83050000 		.4byte	.LLST38
 2168 0661 10       		.uleb128 0x10
 2169 0662 AF050000 		.4byte	.LASF51
 2170 0666 01       		.byte	0x1
 2171 0667 7801     		.2byte	0x178
 2172 0669 76000000 		.4byte	0x76
 2173 066d 96050000 		.4byte	.LLST39
 2174 0671 0C       		.uleb128 0xc
 2175 0672 30000000 		.4byte	.LVL98
 2176 0676 A2050000 		.4byte	0x5a2
 2177 067a 0D       		.uleb128 0xd
 2178 067b 6E000000 		.4byte	.LVL106
 2179 067f B9000000 		.4byte	0xb9
 2180 0683 0B       		.uleb128 0xb
 2181 0684 01       		.uleb128 0x1
 2182 0685 50       		.byte	0x50
 2183 0686 02       		.uleb128 0x2
 2184 0687 74       		.byte	0x74
 2185 0688 00       		.sleb128 0
 2186 0689 00       		.byte	0
 2187 068a 00       		.byte	0
 2188 068b 0E       		.uleb128 0xe
 2189 068c 53030000 		.4byte	.LASF52
 2190 0690 01       		.byte	0x1
 2191 0691 3102     		.2byte	0x231
 2192 0693 00000000 		.4byte	.LFB40
 2193 0697 08000000 		.4byte	.LFE40-.LFB40
 2194 069b 01       		.uleb128 0x1
 2195 069c 9C       		.byte	0x9c
 2196 069d C3060000 		.4byte	0x6c3
 2197 06a1 12       		.uleb128 0x12
 2198 06a2 32030000 		.4byte	.LASF18
 2199 06a6 01       		.byte	0x1
 2200 06a7 3102     		.2byte	0x231
 2201 06a9 81000000 		.4byte	0x81
 2202 06ad A9050000 		.4byte	.LLST40
 2203 06b1 0D       		.uleb128 0xd
 2204 06b2 06000000 		.4byte	.LVL121
 2205 06b6 EB050000 		.4byte	0x5eb
 2206 06ba 0B       		.uleb128 0xb
 2207 06bb 01       		.uleb128 0x1
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 91


 2208 06bc 50       		.byte	0x50
 2209 06bd 03       		.uleb128 0x3
 2210 06be F3       		.byte	0xf3
 2211 06bf 01       		.uleb128 0x1
 2212 06c0 50       		.byte	0x50
 2213 06c1 00       		.byte	0
 2214 06c2 00       		.byte	0
 2215 06c3 0E       		.uleb128 0xe
 2216 06c4 7F010000 		.4byte	.LASF53
 2217 06c8 01       		.byte	0x1
 2218 06c9 6702     		.2byte	0x267
 2219 06cb 00000000 		.4byte	.LFB41
 2220 06cf 24000000 		.4byte	.LFE41-.LFB41
 2221 06d3 01       		.uleb128 0x1
 2222 06d4 9C       		.byte	0x9c
 2223 06d5 1C070000 		.4byte	0x71c
 2224 06d9 0F       		.uleb128 0xf
 2225 06da 6900     		.ascii	"i\000"
 2226 06dc 01       		.byte	0x1
 2227 06dd 6902     		.2byte	0x269
 2228 06df 81000000 		.4byte	0x81
 2229 06e3 CA050000 		.4byte	.LLST41
 2230 06e7 10       		.uleb128 0x10
 2231 06e8 CF050000 		.4byte	.LASF22
 2232 06ec 01       		.byte	0x1
 2233 06ed 6A02     		.2byte	0x26a
 2234 06ef 81000000 		.4byte	0x81
 2235 06f3 E9050000 		.4byte	.LLST42
 2236 06f7 0A       		.uleb128 0xa
 2237 06f8 0E000000 		.4byte	.LVL124
 2238 06fc 000A0000 		.4byte	0xa00
 2239 0700 0B070000 		.4byte	0x70b
 2240 0704 0B       		.uleb128 0xb
 2241 0705 01       		.uleb128 0x1
 2242 0706 51       		.byte	0x51
 2243 0707 02       		.uleb128 0x2
 2244 0708 74       		.byte	0x74
 2245 0709 00       		.sleb128 0
 2246 070a 00       		.byte	0
 2247 070b 0D       		.uleb128 0xd
 2248 070c 18000000 		.4byte	.LVL126
 2249 0710 8B060000 		.4byte	0x68b
 2250 0714 0B       		.uleb128 0xb
 2251 0715 01       		.uleb128 0x1
 2252 0716 50       		.byte	0x50
 2253 0717 02       		.uleb128 0x2
 2254 0718 74       		.byte	0x74
 2255 0719 00       		.sleb128 0
 2256 071a 00       		.byte	0
 2257 071b 00       		.byte	0
 2258 071c 0E       		.uleb128 0xe
 2259 071d 81000000 		.4byte	.LASF54
 2260 0721 01       		.byte	0x1
 2261 0722 9402     		.2byte	0x294
 2262 0724 00000000 		.4byte	.LFB42
 2263 0728 34000000 		.4byte	.LFE42-.LFB42
 2264 072c 01       		.uleb128 0x1
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 92


 2265 072d 9C       		.byte	0x9c
 2266 072e B5070000 		.4byte	0x7b5
 2267 0732 12       		.uleb128 0x12
 2268 0733 C8050000 		.4byte	.LASF20
 2269 0737 01       		.byte	0x1
 2270 0738 9402     		.2byte	0x294
 2271 073a 81000000 		.4byte	0x81
 2272 073e FC050000 		.4byte	.LLST43
 2273 0742 10       		.uleb128 0x10
 2274 0743 F1050000 		.4byte	.LASF55
 2275 0747 01       		.byte	0x1
 2276 0748 9602     		.2byte	0x296
 2277 074a 81000000 		.4byte	0x81
 2278 074e 1D060000 		.4byte	.LLST44
 2279 0752 10       		.uleb128 0x10
 2280 0753 99060000 		.4byte	.LASF56
 2281 0757 01       		.byte	0x1
 2282 0758 9702     		.2byte	0x297
 2283 075a 81000000 		.4byte	0x81
 2284 075e 5E060000 		.4byte	.LLST45
 2285 0762 10       		.uleb128 0x10
 2286 0763 17000000 		.4byte	.LASF57
 2287 0767 01       		.byte	0x1
 2288 0768 9802     		.2byte	0x298
 2289 076a 81000000 		.4byte	0x81
 2290 076e 8A060000 		.4byte	.LLST46
 2291 0772 0F       		.uleb128 0xf
 2292 0773 6900     		.ascii	"i\000"
 2293 0775 01       		.byte	0x1
 2294 0776 9902     		.2byte	0x299
 2295 0778 81000000 		.4byte	0x81
 2296 077c C5060000 		.4byte	.LLST47
 2297 0780 10       		.uleb128 0x10
 2298 0781 CF050000 		.4byte	.LASF22
 2299 0785 01       		.byte	0x1
 2300 0786 9A02     		.2byte	0x29a
 2301 0788 81000000 		.4byte	0x81
 2302 078c D8060000 		.4byte	.LLST48
 2303 0790 0A       		.uleb128 0xa
 2304 0791 1A000000 		.4byte	.LVL134
 2305 0795 000A0000 		.4byte	0xa00
 2306 0799 A4070000 		.4byte	0x7a4
 2307 079d 0B       		.uleb128 0xb
 2308 079e 01       		.uleb128 0x1
 2309 079f 51       		.byte	0x51
 2310 07a0 02       		.uleb128 0x2
 2311 07a1 74       		.byte	0x74
 2312 07a2 00       		.sleb128 0
 2313 07a3 00       		.byte	0
 2314 07a4 0D       		.uleb128 0xd
 2315 07a5 24000000 		.4byte	.LVL136
 2316 07a9 8B060000 		.4byte	0x68b
 2317 07ad 0B       		.uleb128 0xb
 2318 07ae 01       		.uleb128 0x1
 2319 07af 50       		.byte	0x50
 2320 07b0 02       		.uleb128 0x2
 2321 07b1 74       		.byte	0x74
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 93


 2322 07b2 00       		.sleb128 0
 2323 07b3 00       		.byte	0
 2324 07b4 00       		.byte	0
 2325 07b5 11       		.uleb128 0x11
 2326 07b6 07070000 		.4byte	.LASF58
 2327 07ba 01       		.byte	0x1
 2328 07bb B70A     		.2byte	0xab7
 2329 07bd 81000000 		.4byte	0x81
 2330 07c1 00000000 		.4byte	.LFB57
 2331 07c5 0C000000 		.4byte	.LFE57-.LFB57
 2332 07c9 01       		.uleb128 0x1
 2333 07ca 9C       		.byte	0x9c
 2334 07cb E0070000 		.4byte	0x7e0
 2335 07cf 12       		.uleb128 0x12
 2336 07d0 32030000 		.4byte	.LASF18
 2337 07d4 01       		.byte	0x1
 2338 07d5 B70A     		.2byte	0xab7
 2339 07d7 81000000 		.4byte	0x81
 2340 07db EB060000 		.4byte	.LLST49
 2341 07df 00       		.byte	0
 2342 07e0 11       		.uleb128 0x11
 2343 07e1 2E050000 		.4byte	.LASF59
 2344 07e5 01       		.byte	0x1
 2345 07e6 D10A     		.2byte	0xad1
 2346 07e8 6B000000 		.4byte	0x6b
 2347 07ec 00000000 		.4byte	.LFB58
 2348 07f0 0C000000 		.4byte	.LFE58-.LFB58
 2349 07f4 01       		.uleb128 0x1
 2350 07f5 9C       		.byte	0x9c
 2351 07f6 0B080000 		.4byte	0x80b
 2352 07fa 12       		.uleb128 0x12
 2353 07fb 32030000 		.4byte	.LASF18
 2354 07ff 01       		.byte	0x1
 2355 0800 D10A     		.2byte	0xad1
 2356 0802 81000000 		.4byte	0x81
 2357 0806 0C070000 		.4byte	.LLST50
 2358 080a 00       		.byte	0
 2359 080b 11       		.uleb128 0x11
 2360 080c 9F000000 		.4byte	.LASF60
 2361 0810 01       		.byte	0x1
 2362 0811 EB0A     		.2byte	0xaeb
 2363 0813 6B000000 		.4byte	0x6b
 2364 0817 00000000 		.4byte	.LFB59
 2365 081b 0C000000 		.4byte	.LFE59-.LFB59
 2366 081f 01       		.uleb128 0x1
 2367 0820 9C       		.byte	0x9c
 2368 0821 36080000 		.4byte	0x836
 2369 0825 12       		.uleb128 0x12
 2370 0826 C8050000 		.4byte	.LASF20
 2371 082a 01       		.byte	0x1
 2372 082b EB0A     		.2byte	0xaeb
 2373 082d 81000000 		.4byte	0x81
 2374 0831 2D070000 		.4byte	.LLST51
 2375 0835 00       		.byte	0
 2376 0836 16       		.uleb128 0x16
 2377 0837 3C070000 		.4byte	.LASF61
 2378 083b 01       		.byte	0x1
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 94


 2379 083c 050B     		.2byte	0xb05
 2380 083e 00000000 		.4byte	.LFB60
 2381 0842 0C000000 		.4byte	.LFE60-.LFB60
 2382 0846 01       		.uleb128 0x1
 2383 0847 9C       		.byte	0x9c
 2384 0848 16       		.uleb128 0x16
 2385 0849 41020000 		.4byte	.LASF62
 2386 084d 01       		.byte	0x1
 2387 084e 1E0B     		.2byte	0xb1e
 2388 0850 00000000 		.4byte	.LFB61
 2389 0854 0C000000 		.4byte	.LFE61-.LFB61
 2390 0858 01       		.uleb128 0x1
 2391 0859 9C       		.byte	0x9c
 2392 085a 17       		.uleb128 0x17
 2393 085b 6B000000 		.4byte	0x6b
 2394 085f 6A080000 		.4byte	0x86a
 2395 0863 18       		.uleb128 0x18
 2396 0864 A1000000 		.4byte	0xa1
 2397 0868 0A       		.byte	0xa
 2398 0869 00       		.byte	0
 2399 086a 19       		.uleb128 0x19
 2400 086b 5A070000 		.4byte	.LASF63
 2401 086f 01       		.byte	0x1
 2402 0870 59       		.byte	0x59
 2403 0871 5A080000 		.4byte	0x85a
 2404 0875 05       		.uleb128 0x5
 2405 0876 03       		.byte	0x3
 2406 0877 34000000 		.4byte	CapSense_debounceCounter
 2407 087b 17       		.uleb128 0x17
 2408 087c 76000000 		.4byte	0x76
 2409 0880 8B080000 		.4byte	0x88b
 2410 0884 18       		.uleb128 0x18
 2411 0885 A1000000 		.4byte	0xa1
 2412 0889 09       		.byte	0x9
 2413 088a 00       		.byte	0
 2414 088b 1A       		.uleb128 0x1a
 2415 088c C5060000 		.4byte	.LASF64
 2416 0890 01       		.byte	0x1
 2417 0891 2C       		.byte	0x2c
 2418 0892 7B080000 		.4byte	0x87b
 2419 0896 17       		.uleb128 0x17
 2420 0897 6B000000 		.4byte	0x6b
 2421 089b A6080000 		.4byte	0x8a6
 2422 089f 18       		.uleb128 0x18
 2423 08a0 A1000000 		.4byte	0xa1
 2424 08a4 01       		.byte	0x1
 2425 08a5 00       		.byte	0
 2426 08a6 1A       		.uleb128 0x1a
 2427 08a7 39030000 		.4byte	.LASF65
 2428 08ab 01       		.byte	0x1
 2429 08ac 2D       		.byte	0x2d
 2430 08ad 96080000 		.4byte	0x896
 2431 08b1 17       		.uleb128 0x17
 2432 08b2 6B000000 		.4byte	0x6b
 2433 08b6 C1080000 		.4byte	0x8c1
 2434 08ba 18       		.uleb128 0x18
 2435 08bb A1000000 		.4byte	0xa1
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 95


 2436 08bf 09       		.byte	0x9
 2437 08c0 00       		.byte	0
 2438 08c1 1A       		.uleb128 0x1a
 2439 08c2 67020000 		.4byte	.LASF66
 2440 08c6 01       		.byte	0x1
 2441 08c7 2E       		.byte	0x2e
 2442 08c8 CC080000 		.4byte	0x8cc
 2443 08cc 06       		.uleb128 0x6
 2444 08cd B1080000 		.4byte	0x8b1
 2445 08d1 1B       		.uleb128 0x1b
 2446 08d2 31060000 		.4byte	.LASF67
 2447 08d6 01       		.byte	0x1
 2448 08d7 34       		.byte	0x34
 2449 08d8 7B080000 		.4byte	0x87b
 2450 08dc 05       		.uleb128 0x5
 2451 08dd 03       		.byte	0x3
 2452 08de 00000000 		.4byte	CapSense_sensorBaseline
 2453 08e2 1B       		.uleb128 0x1b
 2454 08e3 DC020000 		.4byte	.LASF68
 2455 08e7 01       		.byte	0x1
 2456 08e8 35       		.byte	0x35
 2457 08e9 B1080000 		.4byte	0x8b1
 2458 08ed 05       		.uleb128 0x5
 2459 08ee 03       		.byte	0x3
 2460 08ef 00000000 		.4byte	CapSense_sensorBaselineLow
 2461 08f3 1B       		.uleb128 0x1b
 2462 08f4 2A010000 		.4byte	.LASF69
 2463 08f8 01       		.byte	0x1
 2464 08f9 36       		.byte	0x36
 2465 08fa 7B080000 		.4byte	0x87b
 2466 08fe 05       		.uleb128 0x5
 2467 08ff 03       		.byte	0x3
 2468 0900 00000000 		.4byte	CapSense_sensorSignal
 2469 0904 1B       		.uleb128 0x1b
 2470 0905 38000000 		.4byte	.LASF70
 2471 0909 01       		.byte	0x1
 2472 090a 37       		.byte	0x37
 2473 090b 96080000 		.4byte	0x896
 2474 090f 05       		.uleb128 0x5
 2475 0910 03       		.byte	0x3
 2476 0911 00000000 		.4byte	CapSense_sensorOnMask
 2477 0915 1B       		.uleb128 0x1b
 2478 0916 02060000 		.4byte	.LASF71
 2479 091a 01       		.byte	0x1
 2480 091b 39       		.byte	0x39
 2481 091c B1080000 		.4byte	0x8b1
 2482 0920 05       		.uleb128 0x5
 2483 0921 03       		.byte	0x3
 2484 0922 00000000 		.4byte	CapSense_lowBaselineResetCnt
 2485 0926 1B       		.uleb128 0x1b
 2486 0927 27020000 		.4byte	.LASF72
 2487 092b 01       		.byte	0x1
 2488 092c 3A       		.byte	0x3a
 2489 092d B1080000 		.4byte	0x8b1
 2490 0931 05       		.uleb128 0x5
 2491 0932 03       		.byte	0x3
 2492 0933 00000000 		.4byte	CapSense_lowBaselineReset
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 96


 2493 0937 1B       		.uleb128 0x1b
 2494 0938 E2040000 		.4byte	.LASF73
 2495 093c 01       		.byte	0x1
 2496 093d 49       		.byte	0x49
 2497 093e 48090000 		.4byte	0x948
 2498 0942 05       		.uleb128 0x5
 2499 0943 03       		.byte	0x3
 2500 0944 00000000 		.4byte	CapSense_fingerThreshold
 2501 0948 06       		.uleb128 0x6
 2502 0949 7B080000 		.4byte	0x87b
 2503 094d 1B       		.uleb128 0x1b
 2504 094e 3C040000 		.4byte	.LASF74
 2505 0952 01       		.byte	0x1
 2506 0953 4D       		.byte	0x4d
 2507 0954 5E090000 		.4byte	0x95e
 2508 0958 05       		.uleb128 0x5
 2509 0959 03       		.byte	0x3
 2510 095a 00000000 		.4byte	CapSense_noiseThreshold
 2511 095e 06       		.uleb128 0x6
 2512 095f 7B080000 		.4byte	0x87b
 2513 0963 1B       		.uleb128 0x1b
 2514 0964 49060000 		.4byte	.LASF75
 2515 0968 01       		.byte	0x1
 2516 0969 51       		.byte	0x51
 2517 096a 74090000 		.4byte	0x974
 2518 096e 05       		.uleb128 0x5
 2519 096f 03       		.byte	0x3
 2520 0970 00000000 		.4byte	CapSense_hysteresis
 2521 0974 06       		.uleb128 0x6
 2522 0975 7B080000 		.4byte	0x87b
 2523 0979 1B       		.uleb128 0x1b
 2524 097a 1F060000 		.4byte	.LASF76
 2525 097e 01       		.byte	0x1
 2526 097f 55       		.byte	0x55
 2527 0980 8A090000 		.4byte	0x98a
 2528 0984 05       		.uleb128 0x5
 2529 0985 03       		.byte	0x3
 2530 0986 00000000 		.4byte	CapSense_debounce
 2531 098a 06       		.uleb128 0x6
 2532 098b B1080000 		.4byte	0x8b1
 2533 098f 1B       		.uleb128 0x1b
 2534 0990 22000000 		.4byte	.LASF77
 2535 0994 01       		.byte	0x1
 2536 0995 5D       		.byte	0x5d
 2537 0996 A0090000 		.4byte	0x9a0
 2538 099a 05       		.uleb128 0x5
 2539 099b 03       		.byte	0x3
 2540 099c 00000000 		.4byte	CapSense_rawDataIndex
 2541 09a0 06       		.uleb128 0x6
 2542 09a1 B1080000 		.4byte	0x8b1
 2543 09a5 1B       		.uleb128 0x1b
 2544 09a6 8B070000 		.4byte	.LASF78
 2545 09aa 01       		.byte	0x1
 2546 09ab 6A       		.byte	0x6a
 2547 09ac B6090000 		.4byte	0x9b6
 2548 09b0 05       		.uleb128 0x5
 2549 09b1 03       		.byte	0x3
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 97


 2550 09b2 00000000 		.4byte	CapSense_numberOfSensors
 2551 09b6 06       		.uleb128 0x6
 2552 09b7 B1080000 		.4byte	0x8b1
 2553 09bb 1B       		.uleb128 0x1b
 2554 09bc 10050000 		.4byte	.LASF79
 2555 09c0 01       		.byte	0x1
 2556 09c1 27       		.byte	0x27
 2557 09c2 7B080000 		.4byte	0x87b
 2558 09c6 05       		.uleb128 0x5
 2559 09c7 03       		.byte	0x3
 2560 09c8 00000000 		.4byte	CapSense_rawFilterData1
 2561 09cc 1B       		.uleb128 0x1b
 2562 09cd 62060000 		.4byte	.LASF80
 2563 09d1 01       		.byte	0x1
 2564 09d2 45       		.byte	0x45
 2565 09d3 6B000000 		.4byte	0x6b
 2566 09d7 05       		.uleb128 0x5
 2567 09d8 03       		.byte	0x3
 2568 09d9 00000000 		.4byte	CapSense_enableRawFilters
 2569 09dd 1C       		.uleb128 0x1c
 2570 09de A9020000 		.4byte	.LASF84
 2571 09e2 03       		.byte	0x3
 2572 09e3 A5       		.byte	0xa5
 2573 09e4 EE090000 		.4byte	0x9ee
 2574 09e8 1D       		.uleb128 0x1d
 2575 09e9 81000000 		.4byte	0x81
 2576 09ed 00       		.byte	0
 2577 09ee 1E       		.uleb128 0x1e
 2578 09ef 7B070000 		.4byte	.LASF85
 2579 09f3 03       		.byte	0x3
 2580 09f4 A4       		.byte	0xa4
 2581 09f5 81000000 		.4byte	0x81
 2582 09f9 1F       		.uleb128 0x1f
 2583 09fa 20070000 		.4byte	.LASF86
 2584 09fe 03       		.byte	0x3
 2585 09ff A7       		.byte	0xa7
 2586 0a00 20       		.uleb128 0x20
 2587 0a01 F2060000 		.4byte	.LASF87
 2588 0a05 04       		.byte	0x4
 2589 0a06 6A       		.byte	0x6a
 2590 0a07 81000000 		.4byte	0x81
 2591 0a0b 1A0A0000 		.4byte	0xa1a
 2592 0a0f 1D       		.uleb128 0x1d
 2593 0a10 AE000000 		.4byte	0xae
 2594 0a14 1D       		.uleb128 0x1d
 2595 0a15 81000000 		.4byte	0x81
 2596 0a19 00       		.byte	0
 2597 0a1a 21       		.uleb128 0x21
 2598 0a1b FB040000 		.4byte	.LASF88
 2599 0a1f 04       		.byte	0x4
 2600 0a20 6B       		.byte	0x6b
 2601 0a21 1D       		.uleb128 0x1d
 2602 0a22 A8000000 		.4byte	0xa8
 2603 0a26 1D       		.uleb128 0x1d
 2604 0a27 81000000 		.4byte	0x81
 2605 0a2b 1D       		.uleb128 0x1d
 2606 0a2c 81000000 		.4byte	0x81
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 98


 2607 0a30 00       		.byte	0
 2608 0a31 00       		.byte	0
 2609              		.section	.debug_abbrev,"",%progbits
 2610              	.Ldebug_abbrev0:
 2611 0000 01       		.uleb128 0x1
 2612 0001 11       		.uleb128 0x11
 2613 0002 01       		.byte	0x1
 2614 0003 25       		.uleb128 0x25
 2615 0004 0E       		.uleb128 0xe
 2616 0005 13       		.uleb128 0x13
 2617 0006 0B       		.uleb128 0xb
 2618 0007 03       		.uleb128 0x3
 2619 0008 0E       		.uleb128 0xe
 2620 0009 1B       		.uleb128 0x1b
 2621 000a 0E       		.uleb128 0xe
 2622 000b 55       		.uleb128 0x55
 2623 000c 17       		.uleb128 0x17
 2624 000d 11       		.uleb128 0x11
 2625 000e 01       		.uleb128 0x1
 2626 000f 10       		.uleb128 0x10
 2627 0010 17       		.uleb128 0x17
 2628 0011 00       		.byte	0
 2629 0012 00       		.byte	0
 2630 0013 02       		.uleb128 0x2
 2631 0014 24       		.uleb128 0x24
 2632 0015 00       		.byte	0
 2633 0016 0B       		.uleb128 0xb
 2634 0017 0B       		.uleb128 0xb
 2635 0018 3E       		.uleb128 0x3e
 2636 0019 0B       		.uleb128 0xb
 2637 001a 03       		.uleb128 0x3
 2638 001b 0E       		.uleb128 0xe
 2639 001c 00       		.byte	0
 2640 001d 00       		.byte	0
 2641 001e 03       		.uleb128 0x3
 2642 001f 24       		.uleb128 0x24
 2643 0020 00       		.byte	0
 2644 0021 0B       		.uleb128 0xb
 2645 0022 0B       		.uleb128 0xb
 2646 0023 3E       		.uleb128 0x3e
 2647 0024 0B       		.uleb128 0xb
 2648 0025 03       		.uleb128 0x3
 2649 0026 08       		.uleb128 0x8
 2650 0027 00       		.byte	0
 2651 0028 00       		.byte	0
 2652 0029 04       		.uleb128 0x4
 2653 002a 16       		.uleb128 0x16
 2654 002b 00       		.byte	0
 2655 002c 03       		.uleb128 0x3
 2656 002d 0E       		.uleb128 0xe
 2657 002e 3A       		.uleb128 0x3a
 2658 002f 0B       		.uleb128 0xb
 2659 0030 3B       		.uleb128 0x3b
 2660 0031 0B       		.uleb128 0xb
 2661 0032 49       		.uleb128 0x49
 2662 0033 13       		.uleb128 0x13
 2663 0034 00       		.byte	0
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 99


 2664 0035 00       		.byte	0
 2665 0036 05       		.uleb128 0x5
 2666 0037 0F       		.uleb128 0xf
 2667 0038 00       		.byte	0
 2668 0039 0B       		.uleb128 0xb
 2669 003a 0B       		.uleb128 0xb
 2670 003b 49       		.uleb128 0x49
 2671 003c 13       		.uleb128 0x13
 2672 003d 00       		.byte	0
 2673 003e 00       		.byte	0
 2674 003f 06       		.uleb128 0x6
 2675 0040 26       		.uleb128 0x26
 2676 0041 00       		.byte	0
 2677 0042 49       		.uleb128 0x49
 2678 0043 13       		.uleb128 0x13
 2679 0044 00       		.byte	0
 2680 0045 00       		.byte	0
 2681 0046 07       		.uleb128 0x7
 2682 0047 2E       		.uleb128 0x2e
 2683 0048 01       		.byte	0x1
 2684 0049 3F       		.uleb128 0x3f
 2685 004a 19       		.uleb128 0x19
 2686 004b 03       		.uleb128 0x3
 2687 004c 0E       		.uleb128 0xe
 2688 004d 3A       		.uleb128 0x3a
 2689 004e 0B       		.uleb128 0xb
 2690 004f 3B       		.uleb128 0x3b
 2691 0050 0B       		.uleb128 0xb
 2692 0051 27       		.uleb128 0x27
 2693 0052 19       		.uleb128 0x19
 2694 0053 11       		.uleb128 0x11
 2695 0054 01       		.uleb128 0x1
 2696 0055 12       		.uleb128 0x12
 2697 0056 06       		.uleb128 0x6
 2698 0057 40       		.uleb128 0x40
 2699 0058 18       		.uleb128 0x18
 2700 0059 9742     		.uleb128 0x2117
 2701 005b 19       		.uleb128 0x19
 2702 005c 01       		.uleb128 0x1
 2703 005d 13       		.uleb128 0x13
 2704 005e 00       		.byte	0
 2705 005f 00       		.byte	0
 2706 0060 08       		.uleb128 0x8
 2707 0061 05       		.uleb128 0x5
 2708 0062 00       		.byte	0
 2709 0063 03       		.uleb128 0x3
 2710 0064 0E       		.uleb128 0xe
 2711 0065 3A       		.uleb128 0x3a
 2712 0066 0B       		.uleb128 0xb
 2713 0067 3B       		.uleb128 0x3b
 2714 0068 0B       		.uleb128 0xb
 2715 0069 49       		.uleb128 0x49
 2716 006a 13       		.uleb128 0x13
 2717 006b 02       		.uleb128 0x2
 2718 006c 17       		.uleb128 0x17
 2719 006d 00       		.byte	0
 2720 006e 00       		.byte	0
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 100


 2721 006f 09       		.uleb128 0x9
 2722 0070 34       		.uleb128 0x34
 2723 0071 00       		.byte	0
 2724 0072 03       		.uleb128 0x3
 2725 0073 0E       		.uleb128 0xe
 2726 0074 3A       		.uleb128 0x3a
 2727 0075 0B       		.uleb128 0xb
 2728 0076 3B       		.uleb128 0x3b
 2729 0077 0B       		.uleb128 0xb
 2730 0078 49       		.uleb128 0x49
 2731 0079 13       		.uleb128 0x13
 2732 007a 02       		.uleb128 0x2
 2733 007b 17       		.uleb128 0x17
 2734 007c 00       		.byte	0
 2735 007d 00       		.byte	0
 2736 007e 0A       		.uleb128 0xa
 2737 007f 898201   		.uleb128 0x4109
 2738 0082 01       		.byte	0x1
 2739 0083 11       		.uleb128 0x11
 2740 0084 01       		.uleb128 0x1
 2741 0085 31       		.uleb128 0x31
 2742 0086 13       		.uleb128 0x13
 2743 0087 01       		.uleb128 0x1
 2744 0088 13       		.uleb128 0x13
 2745 0089 00       		.byte	0
 2746 008a 00       		.byte	0
 2747 008b 0B       		.uleb128 0xb
 2748 008c 8A8201   		.uleb128 0x410a
 2749 008f 00       		.byte	0
 2750 0090 02       		.uleb128 0x2
 2751 0091 18       		.uleb128 0x18
 2752 0092 9142     		.uleb128 0x2111
 2753 0094 18       		.uleb128 0x18
 2754 0095 00       		.byte	0
 2755 0096 00       		.byte	0
 2756 0097 0C       		.uleb128 0xc
 2757 0098 898201   		.uleb128 0x4109
 2758 009b 00       		.byte	0
 2759 009c 11       		.uleb128 0x11
 2760 009d 01       		.uleb128 0x1
 2761 009e 31       		.uleb128 0x31
 2762 009f 13       		.uleb128 0x13
 2763 00a0 00       		.byte	0
 2764 00a1 00       		.byte	0
 2765 00a2 0D       		.uleb128 0xd
 2766 00a3 898201   		.uleb128 0x4109
 2767 00a6 01       		.byte	0x1
 2768 00a7 11       		.uleb128 0x11
 2769 00a8 01       		.uleb128 0x1
 2770 00a9 31       		.uleb128 0x31
 2771 00aa 13       		.uleb128 0x13
 2772 00ab 00       		.byte	0
 2773 00ac 00       		.byte	0
 2774 00ad 0E       		.uleb128 0xe
 2775 00ae 2E       		.uleb128 0x2e
 2776 00af 01       		.byte	0x1
 2777 00b0 3F       		.uleb128 0x3f
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 101


 2778 00b1 19       		.uleb128 0x19
 2779 00b2 03       		.uleb128 0x3
 2780 00b3 0E       		.uleb128 0xe
 2781 00b4 3A       		.uleb128 0x3a
 2782 00b5 0B       		.uleb128 0xb
 2783 00b6 3B       		.uleb128 0x3b
 2784 00b7 05       		.uleb128 0x5
 2785 00b8 27       		.uleb128 0x27
 2786 00b9 19       		.uleb128 0x19
 2787 00ba 11       		.uleb128 0x11
 2788 00bb 01       		.uleb128 0x1
 2789 00bc 12       		.uleb128 0x12
 2790 00bd 06       		.uleb128 0x6
 2791 00be 40       		.uleb128 0x40
 2792 00bf 18       		.uleb128 0x18
 2793 00c0 9742     		.uleb128 0x2117
 2794 00c2 19       		.uleb128 0x19
 2795 00c3 01       		.uleb128 0x1
 2796 00c4 13       		.uleb128 0x13
 2797 00c5 00       		.byte	0
 2798 00c6 00       		.byte	0
 2799 00c7 0F       		.uleb128 0xf
 2800 00c8 34       		.uleb128 0x34
 2801 00c9 00       		.byte	0
 2802 00ca 03       		.uleb128 0x3
 2803 00cb 08       		.uleb128 0x8
 2804 00cc 3A       		.uleb128 0x3a
 2805 00cd 0B       		.uleb128 0xb
 2806 00ce 3B       		.uleb128 0x3b
 2807 00cf 05       		.uleb128 0x5
 2808 00d0 49       		.uleb128 0x49
 2809 00d1 13       		.uleb128 0x13
 2810 00d2 02       		.uleb128 0x2
 2811 00d3 17       		.uleb128 0x17
 2812 00d4 00       		.byte	0
 2813 00d5 00       		.byte	0
 2814 00d6 10       		.uleb128 0x10
 2815 00d7 34       		.uleb128 0x34
 2816 00d8 00       		.byte	0
 2817 00d9 03       		.uleb128 0x3
 2818 00da 0E       		.uleb128 0xe
 2819 00db 3A       		.uleb128 0x3a
 2820 00dc 0B       		.uleb128 0xb
 2821 00dd 3B       		.uleb128 0x3b
 2822 00de 05       		.uleb128 0x5
 2823 00df 49       		.uleb128 0x49
 2824 00e0 13       		.uleb128 0x13
 2825 00e1 02       		.uleb128 0x2
 2826 00e2 17       		.uleb128 0x17
 2827 00e3 00       		.byte	0
 2828 00e4 00       		.byte	0
 2829 00e5 11       		.uleb128 0x11
 2830 00e6 2E       		.uleb128 0x2e
 2831 00e7 01       		.byte	0x1
 2832 00e8 3F       		.uleb128 0x3f
 2833 00e9 19       		.uleb128 0x19
 2834 00ea 03       		.uleb128 0x3
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 102


 2835 00eb 0E       		.uleb128 0xe
 2836 00ec 3A       		.uleb128 0x3a
 2837 00ed 0B       		.uleb128 0xb
 2838 00ee 3B       		.uleb128 0x3b
 2839 00ef 05       		.uleb128 0x5
 2840 00f0 27       		.uleb128 0x27
 2841 00f1 19       		.uleb128 0x19
 2842 00f2 49       		.uleb128 0x49
 2843 00f3 13       		.uleb128 0x13
 2844 00f4 11       		.uleb128 0x11
 2845 00f5 01       		.uleb128 0x1
 2846 00f6 12       		.uleb128 0x12
 2847 00f7 06       		.uleb128 0x6
 2848 00f8 40       		.uleb128 0x40
 2849 00f9 18       		.uleb128 0x18
 2850 00fa 9742     		.uleb128 0x2117
 2851 00fc 19       		.uleb128 0x19
 2852 00fd 01       		.uleb128 0x1
 2853 00fe 13       		.uleb128 0x13
 2854 00ff 00       		.byte	0
 2855 0100 00       		.byte	0
 2856 0101 12       		.uleb128 0x12
 2857 0102 05       		.uleb128 0x5
 2858 0103 00       		.byte	0
 2859 0104 03       		.uleb128 0x3
 2860 0105 0E       		.uleb128 0xe
 2861 0106 3A       		.uleb128 0x3a
 2862 0107 0B       		.uleb128 0xb
 2863 0108 3B       		.uleb128 0x3b
 2864 0109 05       		.uleb128 0x5
 2865 010a 49       		.uleb128 0x49
 2866 010b 13       		.uleb128 0x13
 2867 010c 02       		.uleb128 0x2
 2868 010d 17       		.uleb128 0x17
 2869 010e 00       		.byte	0
 2870 010f 00       		.byte	0
 2871 0110 13       		.uleb128 0x13
 2872 0111 05       		.uleb128 0x5
 2873 0112 00       		.byte	0
 2874 0113 03       		.uleb128 0x3
 2875 0114 0E       		.uleb128 0xe
 2876 0115 3A       		.uleb128 0x3a
 2877 0116 0B       		.uleb128 0xb
 2878 0117 3B       		.uleb128 0x3b
 2879 0118 05       		.uleb128 0x5
 2880 0119 49       		.uleb128 0x49
 2881 011a 13       		.uleb128 0x13
 2882 011b 02       		.uleb128 0x2
 2883 011c 18       		.uleb128 0x18
 2884 011d 00       		.byte	0
 2885 011e 00       		.byte	0
 2886 011f 14       		.uleb128 0x14
 2887 0120 34       		.uleb128 0x34
 2888 0121 00       		.byte	0
 2889 0122 03       		.uleb128 0x3
 2890 0123 0E       		.uleb128 0xe
 2891 0124 3A       		.uleb128 0x3a
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 103


 2892 0125 0B       		.uleb128 0xb
 2893 0126 3B       		.uleb128 0x3b
 2894 0127 05       		.uleb128 0x5
 2895 0128 49       		.uleb128 0x49
 2896 0129 13       		.uleb128 0x13
 2897 012a 00       		.byte	0
 2898 012b 00       		.byte	0
 2899 012c 15       		.uleb128 0x15
 2900 012d 05       		.uleb128 0x5
 2901 012e 00       		.byte	0
 2902 012f 03       		.uleb128 0x3
 2903 0130 08       		.uleb128 0x8
 2904 0131 3A       		.uleb128 0x3a
 2905 0132 0B       		.uleb128 0xb
 2906 0133 3B       		.uleb128 0x3b
 2907 0134 05       		.uleb128 0x5
 2908 0135 49       		.uleb128 0x49
 2909 0136 13       		.uleb128 0x13
 2910 0137 02       		.uleb128 0x2
 2911 0138 17       		.uleb128 0x17
 2912 0139 00       		.byte	0
 2913 013a 00       		.byte	0
 2914 013b 16       		.uleb128 0x16
 2915 013c 2E       		.uleb128 0x2e
 2916 013d 00       		.byte	0
 2917 013e 3F       		.uleb128 0x3f
 2918 013f 19       		.uleb128 0x19
 2919 0140 03       		.uleb128 0x3
 2920 0141 0E       		.uleb128 0xe
 2921 0142 3A       		.uleb128 0x3a
 2922 0143 0B       		.uleb128 0xb
 2923 0144 3B       		.uleb128 0x3b
 2924 0145 05       		.uleb128 0x5
 2925 0146 27       		.uleb128 0x27
 2926 0147 19       		.uleb128 0x19
 2927 0148 11       		.uleb128 0x11
 2928 0149 01       		.uleb128 0x1
 2929 014a 12       		.uleb128 0x12
 2930 014b 06       		.uleb128 0x6
 2931 014c 40       		.uleb128 0x40
 2932 014d 18       		.uleb128 0x18
 2933 014e 9742     		.uleb128 0x2117
 2934 0150 19       		.uleb128 0x19
 2935 0151 00       		.byte	0
 2936 0152 00       		.byte	0
 2937 0153 17       		.uleb128 0x17
 2938 0154 01       		.uleb128 0x1
 2939 0155 01       		.byte	0x1
 2940 0156 49       		.uleb128 0x49
 2941 0157 13       		.uleb128 0x13
 2942 0158 01       		.uleb128 0x1
 2943 0159 13       		.uleb128 0x13
 2944 015a 00       		.byte	0
 2945 015b 00       		.byte	0
 2946 015c 18       		.uleb128 0x18
 2947 015d 21       		.uleb128 0x21
 2948 015e 00       		.byte	0
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 104


 2949 015f 49       		.uleb128 0x49
 2950 0160 13       		.uleb128 0x13
 2951 0161 2F       		.uleb128 0x2f
 2952 0162 0B       		.uleb128 0xb
 2953 0163 00       		.byte	0
 2954 0164 00       		.byte	0
 2955 0165 19       		.uleb128 0x19
 2956 0166 34       		.uleb128 0x34
 2957 0167 00       		.byte	0
 2958 0168 03       		.uleb128 0x3
 2959 0169 0E       		.uleb128 0xe
 2960 016a 3A       		.uleb128 0x3a
 2961 016b 0B       		.uleb128 0xb
 2962 016c 3B       		.uleb128 0x3b
 2963 016d 0B       		.uleb128 0xb
 2964 016e 49       		.uleb128 0x49
 2965 016f 13       		.uleb128 0x13
 2966 0170 02       		.uleb128 0x2
 2967 0171 18       		.uleb128 0x18
 2968 0172 00       		.byte	0
 2969 0173 00       		.byte	0
 2970 0174 1A       		.uleb128 0x1a
 2971 0175 34       		.uleb128 0x34
 2972 0176 00       		.byte	0
 2973 0177 03       		.uleb128 0x3
 2974 0178 0E       		.uleb128 0xe
 2975 0179 3A       		.uleb128 0x3a
 2976 017a 0B       		.uleb128 0xb
 2977 017b 3B       		.uleb128 0x3b
 2978 017c 0B       		.uleb128 0xb
 2979 017d 49       		.uleb128 0x49
 2980 017e 13       		.uleb128 0x13
 2981 017f 3F       		.uleb128 0x3f
 2982 0180 19       		.uleb128 0x19
 2983 0181 3C       		.uleb128 0x3c
 2984 0182 19       		.uleb128 0x19
 2985 0183 00       		.byte	0
 2986 0184 00       		.byte	0
 2987 0185 1B       		.uleb128 0x1b
 2988 0186 34       		.uleb128 0x34
 2989 0187 00       		.byte	0
 2990 0188 03       		.uleb128 0x3
 2991 0189 0E       		.uleb128 0xe
 2992 018a 3A       		.uleb128 0x3a
 2993 018b 0B       		.uleb128 0xb
 2994 018c 3B       		.uleb128 0x3b
 2995 018d 0B       		.uleb128 0xb
 2996 018e 49       		.uleb128 0x49
 2997 018f 13       		.uleb128 0x13
 2998 0190 3F       		.uleb128 0x3f
 2999 0191 19       		.uleb128 0x19
 3000 0192 02       		.uleb128 0x2
 3001 0193 18       		.uleb128 0x18
 3002 0194 00       		.byte	0
 3003 0195 00       		.byte	0
 3004 0196 1C       		.uleb128 0x1c
 3005 0197 2E       		.uleb128 0x2e
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 105


 3006 0198 01       		.byte	0x1
 3007 0199 3F       		.uleb128 0x3f
 3008 019a 19       		.uleb128 0x19
 3009 019b 03       		.uleb128 0x3
 3010 019c 0E       		.uleb128 0xe
 3011 019d 3A       		.uleb128 0x3a
 3012 019e 0B       		.uleb128 0xb
 3013 019f 3B       		.uleb128 0x3b
 3014 01a0 0B       		.uleb128 0xb
 3015 01a1 27       		.uleb128 0x27
 3016 01a2 19       		.uleb128 0x19
 3017 01a3 3C       		.uleb128 0x3c
 3018 01a4 19       		.uleb128 0x19
 3019 01a5 01       		.uleb128 0x1
 3020 01a6 13       		.uleb128 0x13
 3021 01a7 00       		.byte	0
 3022 01a8 00       		.byte	0
 3023 01a9 1D       		.uleb128 0x1d
 3024 01aa 05       		.uleb128 0x5
 3025 01ab 00       		.byte	0
 3026 01ac 49       		.uleb128 0x49
 3027 01ad 13       		.uleb128 0x13
 3028 01ae 00       		.byte	0
 3029 01af 00       		.byte	0
 3030 01b0 1E       		.uleb128 0x1e
 3031 01b1 2E       		.uleb128 0x2e
 3032 01b2 00       		.byte	0
 3033 01b3 3F       		.uleb128 0x3f
 3034 01b4 19       		.uleb128 0x19
 3035 01b5 03       		.uleb128 0x3
 3036 01b6 0E       		.uleb128 0xe
 3037 01b7 3A       		.uleb128 0x3a
 3038 01b8 0B       		.uleb128 0xb
 3039 01b9 3B       		.uleb128 0x3b
 3040 01ba 0B       		.uleb128 0xb
 3041 01bb 27       		.uleb128 0x27
 3042 01bc 19       		.uleb128 0x19
 3043 01bd 49       		.uleb128 0x49
 3044 01be 13       		.uleb128 0x13
 3045 01bf 3C       		.uleb128 0x3c
 3046 01c0 19       		.uleb128 0x19
 3047 01c1 00       		.byte	0
 3048 01c2 00       		.byte	0
 3049 01c3 1F       		.uleb128 0x1f
 3050 01c4 2E       		.uleb128 0x2e
 3051 01c5 00       		.byte	0
 3052 01c6 3F       		.uleb128 0x3f
 3053 01c7 19       		.uleb128 0x19
 3054 01c8 03       		.uleb128 0x3
 3055 01c9 0E       		.uleb128 0xe
 3056 01ca 3A       		.uleb128 0x3a
 3057 01cb 0B       		.uleb128 0xb
 3058 01cc 3B       		.uleb128 0x3b
 3059 01cd 0B       		.uleb128 0xb
 3060 01ce 27       		.uleb128 0x27
 3061 01cf 19       		.uleb128 0x19
 3062 01d0 3C       		.uleb128 0x3c
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 106


 3063 01d1 19       		.uleb128 0x19
 3064 01d2 00       		.byte	0
 3065 01d3 00       		.byte	0
 3066 01d4 20       		.uleb128 0x20
 3067 01d5 2E       		.uleb128 0x2e
 3068 01d6 01       		.byte	0x1
 3069 01d7 3F       		.uleb128 0x3f
 3070 01d8 19       		.uleb128 0x19
 3071 01d9 03       		.uleb128 0x3
 3072 01da 0E       		.uleb128 0xe
 3073 01db 3A       		.uleb128 0x3a
 3074 01dc 0B       		.uleb128 0xb
 3075 01dd 3B       		.uleb128 0x3b
 3076 01de 0B       		.uleb128 0xb
 3077 01df 27       		.uleb128 0x27
 3078 01e0 19       		.uleb128 0x19
 3079 01e1 49       		.uleb128 0x49
 3080 01e2 13       		.uleb128 0x13
 3081 01e3 3C       		.uleb128 0x3c
 3082 01e4 19       		.uleb128 0x19
 3083 01e5 01       		.uleb128 0x1
 3084 01e6 13       		.uleb128 0x13
 3085 01e7 00       		.byte	0
 3086 01e8 00       		.byte	0
 3087 01e9 21       		.uleb128 0x21
 3088 01ea 2E       		.uleb128 0x2e
 3089 01eb 01       		.byte	0x1
 3090 01ec 3F       		.uleb128 0x3f
 3091 01ed 19       		.uleb128 0x19
 3092 01ee 03       		.uleb128 0x3
 3093 01ef 0E       		.uleb128 0xe
 3094 01f0 3A       		.uleb128 0x3a
 3095 01f1 0B       		.uleb128 0xb
 3096 01f2 3B       		.uleb128 0x3b
 3097 01f3 0B       		.uleb128 0xb
 3098 01f4 27       		.uleb128 0x27
 3099 01f5 19       		.uleb128 0x19
 3100 01f6 3C       		.uleb128 0x3c
 3101 01f7 19       		.uleb128 0x19
 3102 01f8 00       		.byte	0
 3103 01f9 00       		.byte	0
 3104 01fa 00       		.byte	0
 3105              		.section	.debug_loc,"",%progbits
 3106              	.Ldebug_loc0:
 3107              	.LLST0:
 3108 0000 00000000 		.4byte	.LVL0
 3109 0004 12000000 		.4byte	.LVL2
 3110 0008 0100     		.2byte	0x1
 3111 000a 50       		.byte	0x50
 3112 000b 12000000 		.4byte	.LVL2
 3113 000f 3C000000 		.4byte	.LFE35
 3114 0013 0400     		.2byte	0x4
 3115 0015 F3       		.byte	0xf3
 3116 0016 01       		.uleb128 0x1
 3117 0017 50       		.byte	0x50
 3118 0018 9F       		.byte	0x9f
 3119 0019 00000000 		.4byte	0
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 107


 3120 001d 00000000 		.4byte	0
 3121              	.LLST1:
 3122 0021 06000000 		.4byte	.LVL1
 3123 0025 26000000 		.4byte	.LVL3
 3124 0029 0100     		.2byte	0x1
 3125 002b 54       		.byte	0x54
 3126 002c 00000000 		.4byte	0
 3127 0030 00000000 		.4byte	0
 3128              	.LLST2:
 3129 0034 00000000 		.4byte	.LVL4
 3130 0038 07000000 		.4byte	.LVL5-1
 3131 003c 0100     		.2byte	0x1
 3132 003e 50       		.byte	0x50
 3133 003f 07000000 		.4byte	.LVL5-1
 3134 0043 16000000 		.4byte	.LVL8
 3135 0047 0100     		.2byte	0x1
 3136 0049 54       		.byte	0x54
 3137 004a 16000000 		.4byte	.LVL8
 3138 004e 18000000 		.4byte	.LFE36
 3139 0052 0400     		.2byte	0x4
 3140 0054 F3       		.byte	0xf3
 3141 0055 01       		.uleb128 0x1
 3142 0056 50       		.byte	0x50
 3143 0057 9F       		.byte	0x9f
 3144 0058 00000000 		.4byte	0
 3145 005c 00000000 		.4byte	0
 3146              	.LLST3:
 3147 0060 02000000 		.4byte	.LVL9
 3148 0064 06000000 		.4byte	.LVL10
 3149 0068 0200     		.2byte	0x2
 3150 006a 30       		.byte	0x30
 3151 006b 9F       		.byte	0x9f
 3152 006c 06000000 		.4byte	.LVL10
 3153 0070 12000000 		.4byte	.LVL13
 3154 0074 0100     		.2byte	0x1
 3155 0076 54       		.byte	0x54
 3156 0077 00000000 		.4byte	0
 3157 007b 00000000 		.4byte	0
 3158              	.LLST4:
 3159 007f 12000000 		.4byte	.LVL16
 3160 0083 2A000000 		.4byte	.LVL21
 3161 0087 0100     		.2byte	0x1
 3162 0089 54       		.byte	0x54
 3163 008a 00000000 		.4byte	0
 3164 008e 00000000 		.4byte	0
 3165              	.LLST5:
 3166 0092 1A000000 		.4byte	.LVL17
 3167 0096 20000000 		.4byte	.LVL18
 3168 009a 0100     		.2byte	0x1
 3169 009c 50       		.byte	0x50
 3170 009d 00000000 		.4byte	0
 3171 00a1 00000000 		.4byte	0
 3172              	.LLST6:
 3173 00a5 00000000 		.4byte	.LVL22
 3174 00a9 02000000 		.4byte	.LVL23
 3175 00ad 0100     		.2byte	0x1
 3176 00af 50       		.byte	0x50
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 108


 3177 00b0 02000000 		.4byte	.LVL23
 3178 00b4 0C000000 		.4byte	.LFE43
 3179 00b8 0400     		.2byte	0x4
 3180 00ba F3       		.byte	0xf3
 3181 00bb 01       		.uleb128 0x1
 3182 00bc 50       		.byte	0x50
 3183 00bd 9F       		.byte	0x9f
 3184 00be 00000000 		.4byte	0
 3185 00c2 00000000 		.4byte	0
 3186              	.LLST7:
 3187 00c6 00000000 		.4byte	.LVL24
 3188 00ca 02000000 		.4byte	.LVL25
 3189 00ce 0100     		.2byte	0x1
 3190 00d0 50       		.byte	0x50
 3191 00d1 02000000 		.4byte	.LVL25
 3192 00d5 0C000000 		.4byte	.LFE44
 3193 00d9 0400     		.2byte	0x4
 3194 00db F3       		.byte	0xf3
 3195 00dc 01       		.uleb128 0x1
 3196 00dd 50       		.byte	0x50
 3197 00de 9F       		.byte	0x9f
 3198 00df 00000000 		.4byte	0
 3199 00e3 00000000 		.4byte	0
 3200              	.LLST8:
 3201 00e7 00000000 		.4byte	.LVL26
 3202 00eb 02000000 		.4byte	.LVL27
 3203 00ef 0100     		.2byte	0x1
 3204 00f1 50       		.byte	0x50
 3205 00f2 02000000 		.4byte	.LVL27
 3206 00f6 10000000 		.4byte	.LFE45
 3207 00fa 0400     		.2byte	0x4
 3208 00fc F3       		.byte	0xf3
 3209 00fd 01       		.uleb128 0x1
 3210 00fe 50       		.byte	0x50
 3211 00ff 9F       		.byte	0x9f
 3212 0100 00000000 		.4byte	0
 3213 0104 00000000 		.4byte	0
 3214              	.LLST9:
 3215 0108 00000000 		.4byte	.LVL28
 3216 010c 02000000 		.4byte	.LVL29
 3217 0110 0100     		.2byte	0x1
 3218 0112 50       		.byte	0x50
 3219 0113 02000000 		.4byte	.LVL29
 3220 0117 10000000 		.4byte	.LFE46
 3221 011b 0400     		.2byte	0x4
 3222 011d F3       		.byte	0xf3
 3223 011e 01       		.uleb128 0x1
 3224 011f 50       		.byte	0x50
 3225 0120 9F       		.byte	0x9f
 3226 0121 00000000 		.4byte	0
 3227 0125 00000000 		.4byte	0
 3228              	.LLST10:
 3229 0129 00000000 		.4byte	.LVL30
 3230 012d 02000000 		.4byte	.LVL31
 3231 0131 0100     		.2byte	0x1
 3232 0133 50       		.byte	0x50
 3233 0134 02000000 		.4byte	.LVL31
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 109


 3234 0138 10000000 		.4byte	.LFE47
 3235 013c 0400     		.2byte	0x4
 3236 013e F3       		.byte	0xf3
 3237 013f 01       		.uleb128 0x1
 3238 0140 50       		.byte	0x50
 3239 0141 9F       		.byte	0x9f
 3240 0142 00000000 		.4byte	0
 3241 0146 00000000 		.4byte	0
 3242              	.LLST11:
 3243 014a 00000000 		.4byte	.LVL32
 3244 014e 02000000 		.4byte	.LVL33
 3245 0152 0100     		.2byte	0x1
 3246 0154 50       		.byte	0x50
 3247 0155 02000000 		.4byte	.LVL33
 3248 0159 10000000 		.4byte	.LFE48
 3249 015d 0400     		.2byte	0x4
 3250 015f F3       		.byte	0xf3
 3251 0160 01       		.uleb128 0x1
 3252 0161 50       		.byte	0x50
 3253 0162 9F       		.byte	0x9f
 3254 0163 00000000 		.4byte	0
 3255 0167 00000000 		.4byte	0
 3256              	.LLST12:
 3257 016b 00000000 		.4byte	.LVL34
 3258 016f 02000000 		.4byte	.LVL35
 3259 0173 0100     		.2byte	0x1
 3260 0175 50       		.byte	0x50
 3261 0176 02000000 		.4byte	.LVL35
 3262 017a 10000000 		.4byte	.LFE49
 3263 017e 0400     		.2byte	0x4
 3264 0180 F3       		.byte	0xf3
 3265 0181 01       		.uleb128 0x1
 3266 0182 50       		.byte	0x50
 3267 0183 9F       		.byte	0x9f
 3268 0184 00000000 		.4byte	0
 3269 0188 00000000 		.4byte	0
 3270              	.LLST13:
 3271 018c 00000000 		.4byte	.LVL36
 3272 0190 02000000 		.4byte	.LVL37
 3273 0194 0100     		.2byte	0x1
 3274 0196 50       		.byte	0x50
 3275 0197 02000000 		.4byte	.LVL37
 3276 019b 04000000 		.4byte	.LFE50
 3277 019f 0400     		.2byte	0x4
 3278 01a1 F3       		.byte	0xf3
 3279 01a2 01       		.uleb128 0x1
 3280 01a3 50       		.byte	0x50
 3281 01a4 9F       		.byte	0x9f
 3282 01a5 00000000 		.4byte	0
 3283 01a9 00000000 		.4byte	0
 3284              	.LLST14:
 3285 01ad 00000000 		.4byte	.LVL38
 3286 01b1 1C000000 		.4byte	.LVL42
 3287 01b5 0100     		.2byte	0x1
 3288 01b7 50       		.byte	0x50
 3289 01b8 1C000000 		.4byte	.LVL42
 3290 01bc 8E000000 		.4byte	.LVL50
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 110


 3291 01c0 0100     		.2byte	0x1
 3292 01c2 54       		.byte	0x54
 3293 01c3 8E000000 		.4byte	.LVL50
 3294 01c7 A0000000 		.4byte	.LFE51
 3295 01cb 0400     		.2byte	0x4
 3296 01cd F3       		.byte	0xf3
 3297 01ce 01       		.uleb128 0x1
 3298 01cf 50       		.byte	0x50
 3299 01d0 9F       		.byte	0x9f
 3300 01d1 00000000 		.4byte	0
 3301 01d5 00000000 		.4byte	0
 3302              	.LLST15:
 3303 01d9 1A000000 		.4byte	.LVL41
 3304 01dd 8E000000 		.4byte	.LVL53
 3305 01e1 0100     		.2byte	0x1
 3306 01e3 58       		.byte	0x58
 3307 01e4 00000000 		.4byte	0
 3308 01e8 00000000 		.4byte	0
 3309              	.LLST16:
 3310 01ec 14000000 		.4byte	.LVL39
 3311 01f0 8E000000 		.4byte	.LVL52
 3312 01f4 0100     		.2byte	0x1
 3313 01f6 57       		.byte	0x57
 3314 01f7 00000000 		.4byte	0
 3315 01fb 00000000 		.4byte	0
 3316              	.LLST17:
 3317 01ff 16000000 		.4byte	.LVL40
 3318 0203 32000000 		.4byte	.LVL44
 3319 0207 0100     		.2byte	0x1
 3320 0209 55       		.byte	0x55
 3321 020a 32000000 		.4byte	.LVL44
 3322 020e 4C000000 		.4byte	.LVL46
 3323 0212 0A00     		.2byte	0xa
 3324 0214 76       		.byte	0x76
 3325 0215 00       		.sleb128 0
 3326 0216 31       		.byte	0x31
 3327 0217 24       		.byte	0x24
 3328 0218 03       		.byte	0x3
 3329 0219 34000000 		.4byte	.LANCHOR1+52
 3330 021d 22       		.byte	0x22
 3331 021e 4C000000 		.4byte	.LVL46
 3332 0222 56000000 		.4byte	.LVL47
 3333 0226 0100     		.2byte	0x1
 3334 0228 55       		.byte	0x55
 3335 0229 56000000 		.4byte	.LVL47
 3336 022d 8E000000 		.4byte	.LVL51
 3337 0231 0A00     		.2byte	0xa
 3338 0233 76       		.byte	0x76
 3339 0234 00       		.sleb128 0
 3340 0235 31       		.byte	0x31
 3341 0236 24       		.byte	0x24
 3342 0237 03       		.byte	0x3
 3343 0238 34000000 		.4byte	.LANCHOR1+52
 3344 023c 22       		.byte	0x22
 3345 023d 00000000 		.4byte	0
 3346 0241 00000000 		.4byte	0
 3347              	.LLST18:
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 111


 3348 0245 00000000 		.4byte	.LVL54
 3349 0249 12000000 		.4byte	.LVL57
 3350 024d 0100     		.2byte	0x1
 3351 024f 50       		.byte	0x50
 3352 0250 12000000 		.4byte	.LVL57
 3353 0254 2C000000 		.4byte	.LFE52
 3354 0258 0400     		.2byte	0x4
 3355 025a F3       		.byte	0xf3
 3356 025b 01       		.uleb128 0x1
 3357 025c 50       		.byte	0x50
 3358 025d 9F       		.byte	0x9f
 3359 025e 00000000 		.4byte	0
 3360 0262 00000000 		.4byte	0
 3361              	.LLST19:
 3362 0266 0A000000 		.4byte	.LVL55
 3363 026a 26000000 		.4byte	.LVL61
 3364 026e 0100     		.2byte	0x1
 3365 0270 54       		.byte	0x54
 3366 0271 00000000 		.4byte	0
 3367 0275 00000000 		.4byte	0
 3368              	.LLST20:
 3369 0279 10000000 		.4byte	.LVL56
 3370 027d 26000000 		.4byte	.LVL62
 3371 0281 0100     		.2byte	0x1
 3372 0283 55       		.byte	0x55
 3373 0284 26000000 		.4byte	.LVL62
 3374 0288 2C000000 		.4byte	.LFE52
 3375 028c 1E00     		.2byte	0x1e
 3376 028e F3       		.byte	0xf3
 3377 028f 01       		.uleb128 0x1
 3378 0290 50       		.byte	0x50
 3379 0291 03       		.byte	0x3
 3380 0292 54000000 		.4byte	.LANCHOR1+84
 3381 0296 22       		.byte	0x22
 3382 0297 94       		.byte	0x94
 3383 0298 01       		.byte	0x1
 3384 0299 08       		.byte	0x8
 3385 029a FF       		.byte	0xff
 3386 029b 1A       		.byte	0x1a
 3387 029c F3       		.byte	0xf3
 3388 029d 01       		.uleb128 0x1
 3389 029e 50       		.byte	0x50
 3390 029f 03       		.byte	0x3
 3391 02a0 48000000 		.4byte	.LANCHOR1+72
 3392 02a4 22       		.byte	0x22
 3393 02a5 94       		.byte	0x94
 3394 02a6 01       		.byte	0x1
 3395 02a7 08       		.byte	0x8
 3396 02a8 FF       		.byte	0xff
 3397 02a9 1A       		.byte	0x1a
 3398 02aa 22       		.byte	0x22
 3399 02ab 9F       		.byte	0x9f
 3400 02ac 00000000 		.4byte	0
 3401 02b0 00000000 		.4byte	0
 3402              	.LLST21:
 3403 02b4 10000000 		.4byte	.LVL56
 3404 02b8 12000000 		.4byte	.LVL57
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 112


 3405 02bc 0200     		.2byte	0x2
 3406 02be 30       		.byte	0x30
 3407 02bf 9F       		.byte	0x9f
 3408 02c0 12000000 		.4byte	.LVL57
 3409 02c4 26000000 		.4byte	.LVL63
 3410 02c8 0100     		.2byte	0x1
 3411 02ca 56       		.byte	0x56
 3412 02cb 26000000 		.4byte	.LVL63
 3413 02cf 2C000000 		.4byte	.LFE52
 3414 02d3 0100     		.2byte	0x1
 3415 02d5 50       		.byte	0x50
 3416 02d6 00000000 		.4byte	0
 3417 02da 00000000 		.4byte	0
 3418              	.LLST22:
 3419 02de 02000000 		.4byte	.LVL64
 3420 02e2 08000000 		.4byte	.LVL65
 3421 02e6 0200     		.2byte	0x2
 3422 02e8 30       		.byte	0x30
 3423 02e9 9F       		.byte	0x9f
 3424 02ea 08000000 		.4byte	.LVL65
 3425 02ee 1C000000 		.4byte	.LVL69
 3426 02f2 0100     		.2byte	0x1
 3427 02f4 54       		.byte	0x54
 3428 02f5 00000000 		.4byte	0
 3429 02f9 00000000 		.4byte	0
 3430              	.LLST23:
 3431 02fd 02000000 		.4byte	.LVL64
 3432 0301 08000000 		.4byte	.LVL65
 3433 0305 0200     		.2byte	0x2
 3434 0307 30       		.byte	0x30
 3435 0308 9F       		.byte	0x9f
 3436 0309 08000000 		.4byte	.LVL65
 3437 030d 1C000000 		.4byte	.LVL70
 3438 0311 0100     		.2byte	0x1
 3439 0313 55       		.byte	0x55
 3440 0314 1C000000 		.4byte	.LVL70
 3441 0318 1E000000 		.4byte	.LFE53
 3442 031c 0100     		.2byte	0x1
 3443 031e 50       		.byte	0x50
 3444 031f 00000000 		.4byte	0
 3445 0323 00000000 		.4byte	0
 3446              	.LLST24:
 3447 0327 00000000 		.4byte	.LVL71
 3448 032b 12000000 		.4byte	.LVL73
 3449 032f 0100     		.2byte	0x1
 3450 0331 50       		.byte	0x50
 3451 0332 12000000 		.4byte	.LVL73
 3452 0336 30000000 		.4byte	.LFE54
 3453 033a 0400     		.2byte	0x4
 3454 033c F3       		.byte	0xf3
 3455 033d 01       		.uleb128 0x1
 3456 033e 50       		.byte	0x50
 3457 033f 9F       		.byte	0x9f
 3458 0340 00000000 		.4byte	0
 3459 0344 00000000 		.4byte	0
 3460              	.LLST25:
 3461 0348 0A000000 		.4byte	.LVL72
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 113


 3462 034c 1E000000 		.4byte	.LVL75
 3463 0350 0100     		.2byte	0x1
 3464 0352 54       		.byte	0x54
 3465 0353 20000000 		.4byte	.LVL76
 3466 0357 24000000 		.4byte	.LVL77
 3467 035b 0100     		.2byte	0x1
 3468 035d 54       		.byte	0x54
 3469 035e 00000000 		.4byte	0
 3470 0362 00000000 		.4byte	0
 3471              	.LLST26:
 3472 0366 12000000 		.4byte	.LVL73
 3473 036a 24000000 		.4byte	.LVL78
 3474 036e 0100     		.2byte	0x1
 3475 0370 55       		.byte	0x55
 3476 0371 24000000 		.4byte	.LVL78
 3477 0375 30000000 		.4byte	.LFE54
 3478 0379 1E00     		.2byte	0x1e
 3479 037b F3       		.byte	0xf3
 3480 037c 01       		.uleb128 0x1
 3481 037d 50       		.byte	0x50
 3482 037e 03       		.byte	0x3
 3483 037f 54000000 		.4byte	.LANCHOR1+84
 3484 0383 22       		.byte	0x22
 3485 0384 94       		.byte	0x94
 3486 0385 01       		.byte	0x1
 3487 0386 08       		.byte	0x8
 3488 0387 FF       		.byte	0xff
 3489 0388 1A       		.byte	0x1a
 3490 0389 F3       		.byte	0xf3
 3491 038a 01       		.uleb128 0x1
 3492 038b 50       		.byte	0x50
 3493 038c 03       		.byte	0x3
 3494 038d 48000000 		.4byte	.LANCHOR1+72
 3495 0391 22       		.byte	0x22
 3496 0392 94       		.byte	0x94
 3497 0393 01       		.byte	0x1
 3498 0394 08       		.byte	0x8
 3499 0395 FF       		.byte	0xff
 3500 0396 1A       		.byte	0x1a
 3501 0397 22       		.byte	0x22
 3502 0398 9F       		.byte	0x9f
 3503 0399 00000000 		.4byte	0
 3504 039d 00000000 		.4byte	0
 3505              	.LLST27:
 3506 03a1 00000000 		.4byte	.LVL79
 3507 03a5 12000000 		.4byte	.LVL81
 3508 03a9 0100     		.2byte	0x1
 3509 03ab 50       		.byte	0x50
 3510 03ac 12000000 		.4byte	.LVL81
 3511 03b0 30000000 		.4byte	.LFE55
 3512 03b4 0400     		.2byte	0x4
 3513 03b6 F3       		.byte	0xf3
 3514 03b7 01       		.uleb128 0x1
 3515 03b8 50       		.byte	0x50
 3516 03b9 9F       		.byte	0x9f
 3517 03ba 00000000 		.4byte	0
 3518 03be 00000000 		.4byte	0
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 114


 3519              	.LLST28:
 3520 03c2 0A000000 		.4byte	.LVL80
 3521 03c6 1E000000 		.4byte	.LVL83
 3522 03ca 0100     		.2byte	0x1
 3523 03cc 54       		.byte	0x54
 3524 03cd 20000000 		.4byte	.LVL84
 3525 03d1 24000000 		.4byte	.LVL85
 3526 03d5 0100     		.2byte	0x1
 3527 03d7 54       		.byte	0x54
 3528 03d8 00000000 		.4byte	0
 3529 03dc 00000000 		.4byte	0
 3530              	.LLST29:
 3531 03e0 12000000 		.4byte	.LVL81
 3532 03e4 24000000 		.4byte	.LVL86
 3533 03e8 0100     		.2byte	0x1
 3534 03ea 55       		.byte	0x55
 3535 03eb 24000000 		.4byte	.LVL86
 3536 03ef 30000000 		.4byte	.LFE55
 3537 03f3 1E00     		.2byte	0x1e
 3538 03f5 F3       		.byte	0xf3
 3539 03f6 01       		.uleb128 0x1
 3540 03f7 50       		.byte	0x50
 3541 03f8 03       		.byte	0x3
 3542 03f9 54000000 		.4byte	.LANCHOR1+84
 3543 03fd 22       		.byte	0x22
 3544 03fe 94       		.byte	0x94
 3545 03ff 01       		.byte	0x1
 3546 0400 08       		.byte	0x8
 3547 0401 FF       		.byte	0xff
 3548 0402 1A       		.byte	0x1a
 3549 0403 F3       		.byte	0xf3
 3550 0404 01       		.uleb128 0x1
 3551 0405 50       		.byte	0x50
 3552 0406 03       		.byte	0x3
 3553 0407 48000000 		.4byte	.LANCHOR1+72
 3554 040b 22       		.byte	0x22
 3555 040c 94       		.byte	0x94
 3556 040d 01       		.byte	0x1
 3557 040e 08       		.byte	0x8
 3558 040f FF       		.byte	0xff
 3559 0410 1A       		.byte	0x1a
 3560 0411 22       		.byte	0x22
 3561 0412 9F       		.byte	0x9f
 3562 0413 00000000 		.4byte	0
 3563 0417 00000000 		.4byte	0
 3564              	.LLST30:
 3565 041b 00000000 		.4byte	.LVL87
 3566 041f 06000000 		.4byte	.LVL90
 3567 0423 0100     		.2byte	0x1
 3568 0425 50       		.byte	0x50
 3569 0426 06000000 		.4byte	.LVL90
 3570 042a 0C000000 		.4byte	.LFE56
 3571 042e 0400     		.2byte	0x4
 3572 0430 F3       		.byte	0xf3
 3573 0431 01       		.uleb128 0x1
 3574 0432 50       		.byte	0x50
 3575 0433 9F       		.byte	0x9f
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 115


 3576 0434 00000000 		.4byte	0
 3577 0438 00000000 		.4byte	0
 3578              	.LLST31:
 3579 043c 00000000 		.4byte	.LVL87
 3580 0440 04000000 		.4byte	.LVL89
 3581 0444 0100     		.2byte	0x1
 3582 0446 51       		.byte	0x51
 3583 0447 04000000 		.4byte	.LVL89
 3584 044b 0C000000 		.4byte	.LFE56
 3585 044f 0400     		.2byte	0x4
 3586 0451 F3       		.byte	0xf3
 3587 0452 01       		.uleb128 0x1
 3588 0453 51       		.byte	0x51
 3589 0454 9F       		.byte	0x9f
 3590 0455 00000000 		.4byte	0
 3591 0459 00000000 		.4byte	0
 3592              	.LLST32:
 3593 045d 02000000 		.4byte	.LVL88
 3594 0461 06000000 		.4byte	.LVL90
 3595 0465 0100     		.2byte	0x1
 3596 0467 53       		.byte	0x53
 3597 0468 06000000 		.4byte	.LVL90
 3598 046c 0A000000 		.4byte	.LVL92
 3599 0470 0100     		.2byte	0x1
 3600 0472 50       		.byte	0x50
 3601 0473 0A000000 		.4byte	.LVL92
 3602 0477 0C000000 		.4byte	.LFE56
 3603 047b 0800     		.2byte	0x8
 3604 047d 71       		.byte	0x71
 3605 047e 00       		.sleb128 0
 3606 047f 73       		.byte	0x73
 3607 0480 00       		.sleb128 0
 3608 0481 22       		.byte	0x22
 3609 0482 32       		.byte	0x32
 3610 0483 25       		.byte	0x25
 3611 0484 9F       		.byte	0x9f
 3612 0485 00000000 		.4byte	0
 3613 0489 00000000 		.4byte	0
 3614              	.LLST33:
 3615 048d 00000000 		.4byte	.LVL93
 3616 0491 1E000000 		.4byte	.LVL97
 3617 0495 0100     		.2byte	0x1
 3618 0497 50       		.byte	0x50
 3619 0498 1E000000 		.4byte	.LVL97
 3620 049c BE000000 		.4byte	.LVL114
 3621 04a0 0100     		.2byte	0x1
 3622 04a2 54       		.byte	0x54
 3623 04a3 BE000000 		.4byte	.LVL114
 3624 04a7 C6000000 		.4byte	.LVL115
 3625 04ab 0400     		.2byte	0x4
 3626 04ad F3       		.byte	0xf3
 3627 04ae 01       		.uleb128 0x1
 3628 04af 50       		.byte	0x50
 3629 04b0 9F       		.byte	0x9f
 3630 04b1 C6000000 		.4byte	.LVL115
 3631 04b5 C8000000 		.4byte	.LVL116
 3632 04b9 0100     		.2byte	0x1
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 116


 3633 04bb 54       		.byte	0x54
 3634 04bc C8000000 		.4byte	.LVL116
 3635 04c0 F8000000 		.4byte	.LFE39
 3636 04c4 0400     		.2byte	0x4
 3637 04c6 F3       		.byte	0xf3
 3638 04c7 01       		.uleb128 0x1
 3639 04c8 50       		.byte	0x50
 3640 04c9 9F       		.byte	0x9f
 3641 04ca 00000000 		.4byte	0
 3642 04ce 00000000 		.4byte	0
 3643              	.LLST34:
 3644 04d2 8E000000 		.4byte	.LVL108
 3645 04d6 98000000 		.4byte	.LVL109
 3646 04da 0100     		.2byte	0x1
 3647 04dc 53       		.byte	0x53
 3648 04dd 98000000 		.4byte	.LVL109
 3649 04e1 9E000000 		.4byte	.LVL110
 3650 04e5 0100     		.2byte	0x1
 3651 04e7 5A       		.byte	0x5a
 3652 04e8 9E000000 		.4byte	.LVL110
 3653 04ec A0000000 		.4byte	.LVL111
 3654 04f0 0100     		.2byte	0x1
 3655 04f2 51       		.byte	0x51
 3656 04f3 A0000000 		.4byte	.LVL111
 3657 04f7 B4000000 		.4byte	.LVL113
 3658 04fb 0100     		.2byte	0x1
 3659 04fd 50       		.byte	0x50
 3660 04fe 00000000 		.4byte	0
 3661 0502 00000000 		.4byte	0
 3662              	.LLST35:
 3663 0506 48000000 		.4byte	.LVL101
 3664 050a 4C000000 		.4byte	.LVL102
 3665 050e 0200     		.2byte	0x2
 3666 0510 31       		.byte	0x31
 3667 0511 9F       		.byte	0x9f
 3668 0512 50000000 		.4byte	.LVL103
 3669 0516 52000000 		.4byte	.LVL104
 3670 051a 0200     		.2byte	0x2
 3671 051c 30       		.byte	0x30
 3672 051d 9F       		.byte	0x9f
 3673 051e 52000000 		.4byte	.LVL104
 3674 0522 D0000000 		.4byte	.LVL119
 3675 0526 0100     		.2byte	0x1
 3676 0528 57       		.byte	0x57
 3677 0529 00000000 		.4byte	0
 3678 052d 00000000 		.4byte	0
 3679              	.LLST36:
 3680 0531 48000000 		.4byte	.LVL101
 3681 0535 4C000000 		.4byte	.LVL102
 3682 0539 0100     		.2byte	0x1
 3683 053b 55       		.byte	0x55
 3684 053c 50000000 		.4byte	.LVL103
 3685 0540 D0000000 		.4byte	.LVL117
 3686 0544 0100     		.2byte	0x1
 3687 0546 55       		.byte	0x55
 3688 0547 00000000 		.4byte	0
 3689 054b 00000000 		.4byte	0
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 117


 3690              	.LLST37:
 3691 054f 1E000000 		.4byte	.LVL97
 3692 0553 2F000000 		.4byte	.LVL98-1
 3693 0557 0100     		.2byte	0x1
 3694 0559 50       		.byte	0x50
 3695 055a 32000000 		.4byte	.LVL99
 3696 055e 34000000 		.4byte	.LVL100
 3697 0562 0100     		.2byte	0x1
 3698 0564 53       		.byte	0x53
 3699 0565 34000000 		.4byte	.LVL100
 3700 0569 6A000000 		.4byte	.LVL105
 3701 056d 0100     		.2byte	0x1
 3702 056f 50       		.byte	0x50
 3703 0570 76000000 		.4byte	.LVL107
 3704 0574 A0000000 		.4byte	.LVL111
 3705 0578 0100     		.2byte	0x1
 3706 057a 50       		.byte	0x50
 3707 057b 00000000 		.4byte	0
 3708 057f 00000000 		.4byte	0
 3709              	.LLST38:
 3710 0583 10000000 		.4byte	.LVL94
 3711 0587 12000000 		.4byte	.LVL95
 3712 058b 0100     		.2byte	0x1
 3713 058d 53       		.byte	0x53
 3714 058e 00000000 		.4byte	0
 3715 0592 00000000 		.4byte	0
 3716              	.LLST39:
 3717 0596 18000000 		.4byte	.LVL96
 3718 059a D0000000 		.4byte	.LVL118
 3719 059e 0100     		.2byte	0x1
 3720 05a0 56       		.byte	0x56
 3721 05a1 00000000 		.4byte	0
 3722 05a5 00000000 		.4byte	0
 3723              	.LLST40:
 3724 05a9 00000000 		.4byte	.LVL120
 3725 05ad 05000000 		.4byte	.LVL121-1
 3726 05b1 0100     		.2byte	0x1
 3727 05b3 50       		.byte	0x50
 3728 05b4 05000000 		.4byte	.LVL121-1
 3729 05b8 08000000 		.4byte	.LFE40
 3730 05bc 0400     		.2byte	0x4
 3731 05be F3       		.byte	0xf3
 3732 05bf 01       		.uleb128 0x1
 3733 05c0 50       		.byte	0x50
 3734 05c1 9F       		.byte	0x9f
 3735 05c2 00000000 		.4byte	0
 3736 05c6 00000000 		.4byte	0
 3737              	.LLST41:
 3738 05ca 02000000 		.4byte	.LVL122
 3739 05ce 06000000 		.4byte	.LVL123
 3740 05d2 0200     		.2byte	0x2
 3741 05d4 30       		.byte	0x30
 3742 05d5 9F       		.byte	0x9f
 3743 05d6 06000000 		.4byte	.LVL123
 3744 05da 1E000000 		.4byte	.LVL128
 3745 05de 0100     		.2byte	0x1
 3746 05e0 54       		.byte	0x54
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 118


 3747 05e1 00000000 		.4byte	0
 3748 05e5 00000000 		.4byte	0
 3749              	.LLST42:
 3750 05e9 0E000000 		.4byte	.LVL124
 3751 05ed 14000000 		.4byte	.LVL125
 3752 05f1 0100     		.2byte	0x1
 3753 05f3 50       		.byte	0x50
 3754 05f4 00000000 		.4byte	0
 3755 05f8 00000000 		.4byte	0
 3756              	.LLST43:
 3757 05fc 00000000 		.4byte	.LVL129
 3758 0600 12000000 		.4byte	.LVL133
 3759 0604 0100     		.2byte	0x1
 3760 0606 50       		.byte	0x50
 3761 0607 12000000 		.4byte	.LVL133
 3762 060b 34000000 		.4byte	.LFE42
 3763 060f 0400     		.2byte	0x4
 3764 0611 F3       		.byte	0xf3
 3765 0612 01       		.uleb128 0x1
 3766 0613 50       		.byte	0x50
 3767 0614 9F       		.byte	0x9f
 3768 0615 00000000 		.4byte	0
 3769 0619 00000000 		.4byte	0
 3770              	.LLST44:
 3771 061d 0A000000 		.4byte	.LVL130
 3772 0621 10000000 		.4byte	.LVL132
 3773 0625 0100     		.2byte	0x1
 3774 0627 55       		.byte	0x55
 3775 0628 10000000 		.4byte	.LVL132
 3776 062c 12000000 		.4byte	.LVL133
 3777 0630 0B00     		.2byte	0xb
 3778 0632 72       		.byte	0x72
 3779 0633 00       		.sleb128 0
 3780 0634 70       		.byte	0x70
 3781 0635 00       		.sleb128 0
 3782 0636 22       		.byte	0x22
 3783 0637 94       		.byte	0x94
 3784 0638 01       		.byte	0x1
 3785 0639 08       		.byte	0x8
 3786 063a FF       		.byte	0xff
 3787 063b 1A       		.byte	0x1a
 3788 063c 9F       		.byte	0x9f
 3789 063d 12000000 		.4byte	.LVL133
 3790 0641 34000000 		.4byte	.LFE42
 3791 0645 0F00     		.2byte	0xf
 3792 0647 F3       		.byte	0xf3
 3793 0648 01       		.uleb128 0x1
 3794 0649 50       		.byte	0x50
 3795 064a 03       		.byte	0x3
 3796 064b 54000000 		.4byte	.LANCHOR1+84
 3797 064f 22       		.byte	0x22
 3798 0650 94       		.byte	0x94
 3799 0651 01       		.byte	0x1
 3800 0652 08       		.byte	0x8
 3801 0653 FF       		.byte	0xff
 3802 0654 1A       		.byte	0x1a
 3803 0655 9F       		.byte	0x9f
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 119


 3804 0656 00000000 		.4byte	0
 3805 065a 00000000 		.4byte	0
 3806              	.LLST45:
 3807 065e 0E000000 		.4byte	.LVL131
 3808 0662 12000000 		.4byte	.LVL133
 3809 0666 0100     		.2byte	0x1
 3810 0668 54       		.byte	0x54
 3811 0669 12000000 		.4byte	.LVL133
 3812 066d 34000000 		.4byte	.LFE42
 3813 0671 0F00     		.2byte	0xf
 3814 0673 F3       		.byte	0xf3
 3815 0674 01       		.uleb128 0x1
 3816 0675 50       		.byte	0x50
 3817 0676 03       		.byte	0x3
 3818 0677 48000000 		.4byte	.LANCHOR1+72
 3819 067b 22       		.byte	0x22
 3820 067c 94       		.byte	0x94
 3821 067d 01       		.byte	0x1
 3822 067e 08       		.byte	0x8
 3823 067f FF       		.byte	0xff
 3824 0680 1A       		.byte	0x1a
 3825 0681 9F       		.byte	0x9f
 3826 0682 00000000 		.4byte	0
 3827 0686 00000000 		.4byte	0
 3828              	.LLST46:
 3829 068a 10000000 		.4byte	.LVL132
 3830 068e 2A000000 		.4byte	.LVL139
 3831 0692 0100     		.2byte	0x1
 3832 0694 55       		.byte	0x55
 3833 0695 2A000000 		.4byte	.LVL139
 3834 0699 34000000 		.4byte	.LFE42
 3835 069d 1E00     		.2byte	0x1e
 3836 069f F3       		.byte	0xf3
 3837 06a0 01       		.uleb128 0x1
 3838 06a1 50       		.byte	0x50
 3839 06a2 03       		.byte	0x3
 3840 06a3 54000000 		.4byte	.LANCHOR1+84
 3841 06a7 22       		.byte	0x22
 3842 06a8 94       		.byte	0x94
 3843 06a9 01       		.byte	0x1
 3844 06aa 08       		.byte	0x8
 3845 06ab FF       		.byte	0xff
 3846 06ac 1A       		.byte	0x1a
 3847 06ad F3       		.byte	0xf3
 3848 06ae 01       		.uleb128 0x1
 3849 06af 50       		.byte	0x50
 3850 06b0 03       		.byte	0x3
 3851 06b1 48000000 		.4byte	.LANCHOR1+72
 3852 06b5 22       		.byte	0x22
 3853 06b6 94       		.byte	0x94
 3854 06b7 01       		.byte	0x1
 3855 06b8 08       		.byte	0x8
 3856 06b9 FF       		.byte	0xff
 3857 06ba 1A       		.byte	0x1a
 3858 06bb 22       		.byte	0x22
 3859 06bc 9F       		.byte	0x9f
 3860 06bd 00000000 		.4byte	0
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 120


 3861 06c1 00000000 		.4byte	0
 3862              	.LLST47:
 3863 06c5 10000000 		.4byte	.LVL132
 3864 06c9 2A000000 		.4byte	.LVL138
 3865 06cd 0100     		.2byte	0x1
 3866 06cf 54       		.byte	0x54
 3867 06d0 00000000 		.4byte	0
 3868 06d4 00000000 		.4byte	0
 3869              	.LLST48:
 3870 06d8 1A000000 		.4byte	.LVL134
 3871 06dc 20000000 		.4byte	.LVL135
 3872 06e0 0100     		.2byte	0x1
 3873 06e2 50       		.byte	0x50
 3874 06e3 00000000 		.4byte	0
 3875 06e7 00000000 		.4byte	0
 3876              	.LLST49:
 3877 06eb 00000000 		.4byte	.LVL140
 3878 06ef 04000000 		.4byte	.LVL141
 3879 06f3 0100     		.2byte	0x1
 3880 06f5 50       		.byte	0x50
 3881 06f6 04000000 		.4byte	.LVL141
 3882 06fa 0C000000 		.4byte	.LFE57
 3883 06fe 0400     		.2byte	0x4
 3884 0700 F3       		.byte	0xf3
 3885 0701 01       		.uleb128 0x1
 3886 0702 50       		.byte	0x50
 3887 0703 9F       		.byte	0x9f
 3888 0704 00000000 		.4byte	0
 3889 0708 00000000 		.4byte	0
 3890              	.LLST50:
 3891 070c 00000000 		.4byte	.LVL142
 3892 0710 04000000 		.4byte	.LVL143
 3893 0714 0100     		.2byte	0x1
 3894 0716 50       		.byte	0x50
 3895 0717 04000000 		.4byte	.LVL143
 3896 071b 0C000000 		.4byte	.LFE58
 3897 071f 0400     		.2byte	0x4
 3898 0721 F3       		.byte	0xf3
 3899 0722 01       		.uleb128 0x1
 3900 0723 50       		.byte	0x50
 3901 0724 9F       		.byte	0x9f
 3902 0725 00000000 		.4byte	0
 3903 0729 00000000 		.4byte	0
 3904              	.LLST51:
 3905 072d 00000000 		.4byte	.LVL144
 3906 0731 04000000 		.4byte	.LVL145
 3907 0735 0100     		.2byte	0x1
 3908 0737 50       		.byte	0x50
 3909 0738 04000000 		.4byte	.LVL145
 3910 073c 0C000000 		.4byte	.LFE59
 3911 0740 0400     		.2byte	0x4
 3912 0742 F3       		.byte	0xf3
 3913 0743 01       		.uleb128 0x1
 3914 0744 50       		.byte	0x50
 3915 0745 9F       		.byte	0x9f
 3916 0746 00000000 		.4byte	0
 3917 074a 00000000 		.4byte	0
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 121


 3918              		.section	.debug_aranges,"",%progbits
 3919 0000 EC000000 		.4byte	0xec
 3920 0004 0200     		.2byte	0x2
 3921 0006 00000000 		.4byte	.Ldebug_info0
 3922 000a 04       		.byte	0x4
 3923 000b 00       		.byte	0
 3924 000c 0000     		.2byte	0
 3925 000e 0000     		.2byte	0
 3926 0010 00000000 		.4byte	.LFB35
 3927 0014 3C000000 		.4byte	.LFE35-.LFB35
 3928 0018 00000000 		.4byte	.LFB36
 3929 001c 18000000 		.4byte	.LFE36-.LFB36
 3930 0020 00000000 		.4byte	.LFB37
 3931 0024 14000000 		.4byte	.LFE37-.LFB37
 3932 0028 00000000 		.4byte	.LFB38
 3933 002c 30000000 		.4byte	.LFE38-.LFB38
 3934 0030 00000000 		.4byte	.LFB43
 3935 0034 0C000000 		.4byte	.LFE43-.LFB43
 3936 0038 00000000 		.4byte	.LFB44
 3937 003c 0C000000 		.4byte	.LFE44-.LFB44
 3938 0040 00000000 		.4byte	.LFB45
 3939 0044 10000000 		.4byte	.LFE45-.LFB45
 3940 0048 00000000 		.4byte	.LFB46
 3941 004c 10000000 		.4byte	.LFE46-.LFB46
 3942 0050 00000000 		.4byte	.LFB47
 3943 0054 10000000 		.4byte	.LFE47-.LFB47
 3944 0058 00000000 		.4byte	.LFB48
 3945 005c 10000000 		.4byte	.LFE48-.LFB48
 3946 0060 00000000 		.4byte	.LFB49
 3947 0064 10000000 		.4byte	.LFE49-.LFB49
 3948 0068 00000000 		.4byte	.LFB50
 3949 006c 04000000 		.4byte	.LFE50-.LFB50
 3950 0070 00000000 		.4byte	.LFB51
 3951 0074 A0000000 		.4byte	.LFE51-.LFB51
 3952 0078 00000000 		.4byte	.LFB52
 3953 007c 2C000000 		.4byte	.LFE52-.LFB52
 3954 0080 00000000 		.4byte	.LFB53
 3955 0084 1E000000 		.4byte	.LFE53-.LFB53
 3956 0088 00000000 		.4byte	.LFB54
 3957 008c 30000000 		.4byte	.LFE54-.LFB54
 3958 0090 00000000 		.4byte	.LFB55
 3959 0094 30000000 		.4byte	.LFE55-.LFB55
 3960 0098 00000000 		.4byte	.LFB56
 3961 009c 0C000000 		.4byte	.LFE56-.LFB56
 3962 00a0 00000000 		.4byte	.LFB39
 3963 00a4 F8000000 		.4byte	.LFE39-.LFB39
 3964 00a8 00000000 		.4byte	.LFB40
 3965 00ac 08000000 		.4byte	.LFE40-.LFB40
 3966 00b0 00000000 		.4byte	.LFB41
 3967 00b4 24000000 		.4byte	.LFE41-.LFB41
 3968 00b8 00000000 		.4byte	.LFB42
 3969 00bc 34000000 		.4byte	.LFE42-.LFB42
 3970 00c0 00000000 		.4byte	.LFB57
 3971 00c4 0C000000 		.4byte	.LFE57-.LFB57
 3972 00c8 00000000 		.4byte	.LFB58
 3973 00cc 0C000000 		.4byte	.LFE58-.LFB58
 3974 00d0 00000000 		.4byte	.LFB59
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 122


 3975 00d4 0C000000 		.4byte	.LFE59-.LFB59
 3976 00d8 00000000 		.4byte	.LFB60
 3977 00dc 0C000000 		.4byte	.LFE60-.LFB60
 3978 00e0 00000000 		.4byte	.LFB61
 3979 00e4 0C000000 		.4byte	.LFE61-.LFB61
 3980 00e8 00000000 		.4byte	0
 3981 00ec 00000000 		.4byte	0
 3982              		.section	.debug_ranges,"",%progbits
 3983              	.Ldebug_ranges0:
 3984 0000 00000000 		.4byte	.LFB35
 3985 0004 3C000000 		.4byte	.LFE35
 3986 0008 00000000 		.4byte	.LFB36
 3987 000c 18000000 		.4byte	.LFE36
 3988 0010 00000000 		.4byte	.LFB37
 3989 0014 14000000 		.4byte	.LFE37
 3990 0018 00000000 		.4byte	.LFB38
 3991 001c 30000000 		.4byte	.LFE38
 3992 0020 00000000 		.4byte	.LFB43
 3993 0024 0C000000 		.4byte	.LFE43
 3994 0028 00000000 		.4byte	.LFB44
 3995 002c 0C000000 		.4byte	.LFE44
 3996 0030 00000000 		.4byte	.LFB45
 3997 0034 10000000 		.4byte	.LFE45
 3998 0038 00000000 		.4byte	.LFB46
 3999 003c 10000000 		.4byte	.LFE46
 4000 0040 00000000 		.4byte	.LFB47
 4001 0044 10000000 		.4byte	.LFE47
 4002 0048 00000000 		.4byte	.LFB48
 4003 004c 10000000 		.4byte	.LFE48
 4004 0050 00000000 		.4byte	.LFB49
 4005 0054 10000000 		.4byte	.LFE49
 4006 0058 00000000 		.4byte	.LFB50
 4007 005c 04000000 		.4byte	.LFE50
 4008 0060 00000000 		.4byte	.LFB51
 4009 0064 A0000000 		.4byte	.LFE51
 4010 0068 00000000 		.4byte	.LFB52
 4011 006c 2C000000 		.4byte	.LFE52
 4012 0070 00000000 		.4byte	.LFB53
 4013 0074 1E000000 		.4byte	.LFE53
 4014 0078 00000000 		.4byte	.LFB54
 4015 007c 30000000 		.4byte	.LFE54
 4016 0080 00000000 		.4byte	.LFB55
 4017 0084 30000000 		.4byte	.LFE55
 4018 0088 00000000 		.4byte	.LFB56
 4019 008c 0C000000 		.4byte	.LFE56
 4020 0090 00000000 		.4byte	.LFB39
 4021 0094 F8000000 		.4byte	.LFE39
 4022 0098 00000000 		.4byte	.LFB40
 4023 009c 08000000 		.4byte	.LFE40
 4024 00a0 00000000 		.4byte	.LFB41
 4025 00a4 24000000 		.4byte	.LFE41
 4026 00a8 00000000 		.4byte	.LFB42
 4027 00ac 34000000 		.4byte	.LFE42
 4028 00b0 00000000 		.4byte	.LFB57
 4029 00b4 0C000000 		.4byte	.LFE57
 4030 00b8 00000000 		.4byte	.LFB58
 4031 00bc 0C000000 		.4byte	.LFE58
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 123


 4032 00c0 00000000 		.4byte	.LFB59
 4033 00c4 0C000000 		.4byte	.LFE59
 4034 00c8 00000000 		.4byte	.LFB60
 4035 00cc 0C000000 		.4byte	.LFE60
 4036 00d0 00000000 		.4byte	.LFB61
 4037 00d4 0C000000 		.4byte	.LFE61
 4038 00d8 00000000 		.4byte	0
 4039 00dc 00000000 		.4byte	0
 4040              		.section	.debug_line,"",%progbits
 4041              	.Ldebug_line0:
 4042 0000 44030000 		.section	.debug_str,"MS",%progbits,1
 4042      02006C00 
 4042      00000201 
 4042      FB0E0D00 
 4042      01010101 
 4043              	.LASF10:
 4044 0000 75696E74 		.ascii	"uint16\000"
 4044      313600
 4045              	.LASF50:
 4046 0007 66696C74 		.ascii	"filteredRawData\000"
 4046      65726564 
 4046      52617744 
 4046      61746100 
 4047              	.LASF57:
 4048 0017 6C617374 		.ascii	"lastSensor\000"
 4048      53656E73 
 4048      6F7200
 4049              	.LASF77:
 4050 0022 43617053 		.ascii	"CapSense_rawDataIndex\000"
 4050      656E7365 
 4050      5F726177 
 4050      44617461 
 4050      496E6465 
 4051              	.LASF70:
 4052 0038 43617053 		.ascii	"CapSense_sensorOnMask\000"
 4052      656E7365 
 4052      5F73656E 
 4052      736F724F 
 4052      6E4D6173 
 4053              	.LASF32:
 4054 004e 43617053 		.ascii	"CapSense_GetNegativeNoiseThreshold\000"
 4054      656E7365 
 4054      5F476574 
 4054      4E656761 
 4054      74697665 
 4055              	.LASF36:
 4056 0071 66696E67 		.ascii	"fingerThreshold\000"
 4056      65725468 
 4056      72657368 
 4056      6F6C6400 
 4057              	.LASF54:
 4058 0081 43617053 		.ascii	"CapSense_UpdateWidgetBaseline\000"
 4058      656E7365 
 4058      5F557064 
 4058      61746557 
 4058      69646765 
 4059              	.LASF60:
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 124


 4060 009f 43617053 		.ascii	"CapSense_GetDebounce\000"
 4060      656E7365 
 4060      5F476574 
 4060      4465626F 
 4060      756E6365 
 4061              	.LASF7:
 4062 00b4 6C6F6E67 		.ascii	"long long unsigned int\000"
 4062      206C6F6E 
 4062      6720756E 
 4062      7369676E 
 4062      65642069 
 4063              	.LASF83:
 4064 00cb 433A5C55 		.ascii	"C:\\Users\\Alexandre\\Documents\\GitHub\\CoRo_PW_PS"
 4064      73657273 
 4064      5C416C65 
 4064      78616E64 
 4064      72655C44 
 4065 00f9 4F435C50 		.ascii	"OC\\PSOC_CapSense_2_BLE\\PSOC_CapSense_2_BLE.cydsn\000"
 4065      534F435F 
 4065      43617053 
 4065      656E7365 
 4065      5F325F42 
 4066              	.LASF69:
 4067 012a 43617053 		.ascii	"CapSense_sensorSignal\000"
 4067      656E7365 
 4067      5F73656E 
 4067      736F7253 
 4067      69676E61 
 4068              	.LASF30:
 4069 0140 43617053 		.ascii	"CapSense_GetNoiseThreshold\000"
 4069      656E7365 
 4069      5F476574 
 4069      4E6F6973 
 4069      65546872 
 4070              	.LASF21:
 4071 015b 43617053 		.ascii	"CapSense_InitializeEnabledBaselines\000"
 4071      656E7365 
 4071      5F496E69 
 4071      7469616C 
 4071      697A6545 
 4072              	.LASF53:
 4073 017f 43617053 		.ascii	"CapSense_UpdateEnabledBaselines\000"
 4073      656E7365 
 4073      5F557064 
 4073      61746545 
 4073      6E61626C 
 4074              	.LASF6:
 4075 019f 6C6F6E67 		.ascii	"long long int\000"
 4075      206C6F6E 
 4075      6720696E 
 4075      7400
 4076              	.LASF0:
 4077 01ad 7369676E 		.ascii	"signed char\000"
 4077      65642063 
 4077      68617200 
 4078              	.LASF44:
 4079 01b9 43617053 		.ascii	"CapSense_DisableWidget\000"
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 125


 4079      656E7365 
 4079      5F446973 
 4079      61626C65 
 4079      57696467 
 4080              	.LASF39:
 4081 01d0 72617749 		.ascii	"rawIndex\000"
 4081      6E646578 
 4081      00
 4082              	.LASF25:
 4083 01d9 43617053 		.ascii	"CapSense_GetBaselineData\000"
 4083      656E7365 
 4083      5F476574 
 4083      42617365 
 4083      6C696E65 
 4084              	.LASF41:
 4085 01f2 73746174 		.ascii	"state\000"
 4085      6500
 4086              	.LASF4:
 4087 01f8 6C6F6E67 		.ascii	"long int\000"
 4087      20696E74 
 4087      00
 4088              	.LASF42:
 4089 0201 43617053 		.ascii	"CapSense_CheckIsAnyWidgetActive\000"
 4089      656E7365 
 4089      5F436865 
 4089      636B4973 
 4089      416E7957 
 4090              	.LASF9:
 4091 0221 75696E74 		.ascii	"uint8\000"
 4091      3800
 4092              	.LASF72:
 4093 0227 43617053 		.ascii	"CapSense_lowBaselineReset\000"
 4093      656E7365 
 4093      5F6C6F77 
 4093      42617365 
 4093      6C696E65 
 4094              	.LASF62:
 4095 0241 43617053 		.ascii	"CapSense_DisableRawDataFilters\000"
 4095      656E7365 
 4095      5F446973 
 4095      61626C65 
 4095      52617744 
 4096              	.LASF13:
 4097 0260 646F7562 		.ascii	"double\000"
 4097      6C6500
 4098              	.LASF66:
 4099 0267 43617053 		.ascii	"CapSense_widgetNumber\000"
 4099      656E7365 
 4099      5F776964 
 4099      6765744E 
 4099      756D6265 
 4100              	.LASF11:
 4101 027d 75696E74 		.ascii	"uint32\000"
 4101      333200
 4102              	.LASF37:
 4103 0284 68797374 		.ascii	"hysteresis\000"
 4103      65726573 
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 126


 4103      697300
 4104              	.LASF28:
 4105 028f 76616C75 		.ascii	"value\000"
 4105      6500
 4106              	.LASF45:
 4107 0295 43617053 		.ascii	"CapSense_IIR4Filter\000"
 4107      656E7365 
 4107      5F494952 
 4107      3446696C 
 4107      74657200 
 4108              	.LASF84:
 4109 02a9 43617053 		.ascii	"CapSense_ScanSensor\000"
 4109      656E7365 
 4109      5F536361 
 4109      6E53656E 
 4109      736F7200 
 4110              	.LASF8:
 4111 02bd 756E7369 		.ascii	"unsigned int\000"
 4111      676E6564 
 4111      20696E74 
 4111      00
 4112              	.LASF5:
 4113 02ca 6C6F6E67 		.ascii	"long unsigned int\000"
 4113      20756E73 
 4113      69676E65 
 4113      6420696E 
 4113      7400
 4114              	.LASF68:
 4115 02dc 43617053 		.ascii	"CapSense_sensorBaselineLow\000"
 4115      656E7365 
 4115      5F73656E 
 4115      736F7242 
 4115      6173656C 
 4116              	.LASF46:
 4117 02f7 43617053 		.ascii	"CapSense_UpdateBaselineNoThreshold\000"
 4117      656E7365 
 4117      5F557064 
 4117      61746542 
 4117      6173656C 
 4118              	.LASF24:
 4119 031a 64617461 		.ascii	"data\000"
 4119      00
 4120              	.LASF3:
 4121 031f 73686F72 		.ascii	"short unsigned int\000"
 4121      7420756E 
 4121      7369676E 
 4121      65642069 
 4121      6E7400
 4122              	.LASF18:
 4123 0332 73656E73 		.ascii	"sensor\000"
 4123      6F7200
 4124              	.LASF65:
 4125 0339 43617053 		.ascii	"CapSense_sensorEnableMask\000"
 4125      656E7365 
 4125      5F73656E 
 4125      736F7245 
 4125      6E61626C 
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 127


 4126              	.LASF52:
 4127 0353 43617053 		.ascii	"CapSense_UpdateSensorBaseline\000"
 4127      656E7365 
 4127      5F557064 
 4127      61746553 
 4127      656E736F 
 4128              	.LASF47:
 4129 0371 63616C63 		.ascii	"calc\000"
 4129      00
 4130              	.LASF82:
 4131 0376 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\CapSense_CSHL.c\000"
 4131      6E657261 
 4131      7465645F 
 4131      536F7572 
 4131      63655C50 
 4132              	.LASF26:
 4133 039f 43617053 		.ascii	"CapSense_GetDiffCountData\000"
 4133      656E7365 
 4133      5F476574 
 4133      44696666 
 4133      436F756E 
 4134              	.LASF34:
 4135 03b9 6465626F 		.ascii	"debounce\000"
 4135      756E6365 
 4135      00
 4136              	.LASF15:
 4137 03c2 73697A65 		.ascii	"sizetype\000"
 4137      74797065 
 4137      00
 4138              	.LASF43:
 4139 03cb 43617053 		.ascii	"CapSense_EnableWidget\000"
 4139      656E7365 
 4139      5F456E61 
 4139      626C6557 
 4139      69646765 
 4140              	.LASF17:
 4141 03e1 43617053 		.ascii	"CapSense_InitializeSensorBaseline\000"
 4141      656E7365 
 4141      5F496E69 
 4141      7469616C 
 4141      697A6553 
 4142              	.LASF33:
 4143 0403 43617053 		.ascii	"CapSense_CheckIsSensorActive\000"
 4143      656E7365 
 4143      5F436865 
 4143      636B4973 
 4143      53656E73 
 4144              	.LASF29:
 4145 0420 43617053 		.ascii	"CapSense_GetFingerThreshold\000"
 4145      656E7365 
 4145      5F476574 
 4145      46696E67 
 4145      65725468 
 4146              	.LASF74:
 4147 043c 43617053 		.ascii	"CapSense_noiseThreshold\000"
 4147      656E7365 
 4147      5F6E6F69 
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 128


 4147      73655468 
 4147      72657368 
 4148              	.LASF81:
 4149 0454 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 4149      4320342E 
 4149      392E3320 
 4149      32303135 
 4149      30333033 
 4150 0487 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 4150      20726576 
 4150      6973696F 
 4150      6E203232 
 4150      31323230 
 4151 04ba 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 4151      66756E63 
 4151      74696F6E 
 4151      2D736563 
 4151      74696F6E 
 4152              	.LASF73:
 4153 04e2 43617053 		.ascii	"CapSense_fingerThreshold\000"
 4153      656E7365 
 4153      5F66696E 
 4153      67657254 
 4153      68726573 
 4154              	.LASF88:
 4155 04fb 43617053 		.ascii	"CapSense_SetBitValue\000"
 4155      656E7365 
 4155      5F536574 
 4155      42697456 
 4155      616C7565 
 4156              	.LASF79:
 4157 0510 43617053 		.ascii	"CapSense_rawFilterData1\000"
 4157      656E7365 
 4157      5F726177 
 4157      46696C74 
 4157      65724461 
 4158              	.LASF12:
 4159 0528 666C6F61 		.ascii	"float\000"
 4159      7400
 4160              	.LASF59:
 4161 052e 43617053 		.ascii	"CapSense_GetLowBaselineReset\000"
 4161      656E7365 
 4161      5F476574 
 4161      4C6F7742 
 4161      6173656C 
 4162              	.LASF38:
 4163 054b 43617053 		.ascii	"CapSense_CheckIsWidgetActive\000"
 4163      656E7365 
 4163      5F436865 
 4163      636B4973 
 4163      57696467 
 4164              	.LASF1:
 4165 0568 756E7369 		.ascii	"unsigned char\000"
 4165      676E6564 
 4165      20636861 
 4165      7200
 4166              	.LASF19:
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 129


 4167 0576 43617053 		.ascii	"CapSense_InitializeAllBaselines\000"
 4167      656E7365 
 4167      5F496E69 
 4167      7469616C 
 4167      697A6541 
 4168              	.LASF23:
 4169 0596 43617053 		.ascii	"CapSense_SetBaselineData\000"
 4169      656E7365 
 4169      5F536574 
 4169      42617365 
 4169      6C696E65 
 4170              	.LASF51:
 4171 05af 6E6F6973 		.ascii	"noiseThreshold\000"
 4171      65546872 
 4171      6573686F 
 4171      6C6400
 4172              	.LASF2:
 4173 05be 73686F72 		.ascii	"short int\000"
 4173      7420696E 
 4173      7400
 4174              	.LASF20:
 4175 05c8 77696467 		.ascii	"widget\000"
 4175      657400
 4176              	.LASF22:
 4177 05cf 69735365 		.ascii	"isSensorEnabled\000"
 4177      6E736F72 
 4177      456E6162 
 4177      6C656400 
 4178              	.LASF16:
 4179 05df 43617053 		.ascii	"CapSense_BaseInit\000"
 4179      656E7365 
 4179      5F426173 
 4179      65496E69 
 4179      7400
 4180              	.LASF55:
 4181 05f1 73656E73 		.ascii	"sensorsPerWidget\000"
 4181      6F727350 
 4181      65725769 
 4181      64676574 
 4181      00
 4182              	.LASF71:
 4183 0602 43617053 		.ascii	"CapSense_lowBaselineResetCnt\000"
 4183      656E7365 
 4183      5F6C6F77 
 4183      42617365 
 4183      6C696E65 
 4184              	.LASF76:
 4185 061f 43617053 		.ascii	"CapSense_debounce\000"
 4185      656E7365 
 4185      5F646562 
 4185      6F756E63 
 4185      6500
 4186              	.LASF67:
 4187 0631 43617053 		.ascii	"CapSense_sensorBaseline\000"
 4187      656E7365 
 4187      5F73656E 
 4187      736F7242 
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 130


 4187      6173656C 
 4188              	.LASF75:
 4189 0649 43617053 		.ascii	"CapSense_hysteresis\000"
 4189      656E7365 
 4189      5F687973 
 4189      74657265 
 4189      73697300 
 4190              	.LASF14:
 4191 065d 63686172 		.ascii	"char\000"
 4191      00
 4192              	.LASF80:
 4193 0662 43617053 		.ascii	"CapSense_enableRawFilters\000"
 4193      656E7365 
 4193      5F656E61 
 4193      626C6552 
 4193      61774669 
 4194              	.LASF31:
 4195 067c 43617053 		.ascii	"CapSense_GetFingerHysteresis\000"
 4195      656E7365 
 4195      5F476574 
 4195      46696E67 
 4195      65724879 
 4196              	.LASF56:
 4197 0699 66697273 		.ascii	"firstSensor\000"
 4197      7453656E 
 4197      736F7200 
 4198              	.LASF35:
 4199 06a5 6465626F 		.ascii	"debounceIndex\000"
 4199      756E6365 
 4199      496E6465 
 4199      7800
 4200              	.LASF48:
 4201 06b3 7369676E 		.ascii	"sign\000"
 4201      00
 4202              	.LASF40:
 4203 06b8 6E756D4F 		.ascii	"numOfSensors\000"
 4203      6653656E 
 4203      736F7273 
 4203      00
 4204              	.LASF64:
 4205 06c5 43617053 		.ascii	"CapSense_sensorRaw\000"
 4205      656E7365 
 4205      5F73656E 
 4205      736F7252 
 4205      617700
 4206              	.LASF27:
 4207 06d8 43617053 		.ascii	"CapSense_SetDiffCountData\000"
 4207      656E7365 
 4207      5F536574 
 4207      44696666 
 4207      436F756E 
 4208              	.LASF87:
 4209 06f2 43617053 		.ascii	"CapSense_GetBitValue\000"
 4209      656E7365 
 4209      5F476574 
 4209      42697456 
 4209      616C7565 
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccCdetCh.s 			page 131


 4210              	.LASF58:
 4211 0707 43617053 		.ascii	"CapSense_GetWidgetNumber\000"
 4211      656E7365 
 4211      5F476574 
 4211      57696467 
 4211      65744E75 
 4212              	.LASF86:
 4213 0720 43617053 		.ascii	"CapSense_ScanEnabledWidgets\000"
 4213      656E7365 
 4213      5F536361 
 4213      6E456E61 
 4213      626C6564 
 4214              	.LASF61:
 4215 073c 43617053 		.ascii	"CapSense_EnableRawDataFilters\000"
 4215      656E7365 
 4215      5F456E61 
 4215      626C6552 
 4215      61774461 
 4216              	.LASF63:
 4217 075a 43617053 		.ascii	"CapSense_debounceCounter\000"
 4217      656E7365 
 4217      5F646562 
 4217      6F756E63 
 4217      65436F75 
 4218              	.LASF49:
 4219 0773 74656D70 		.ascii	"tempRaw\000"
 4219      52617700 
 4220              	.LASF85:
 4221 077b 43617053 		.ascii	"CapSense_IsBusy\000"
 4221      656E7365 
 4221      5F497342 
 4221      75737900 
 4222              	.LASF78:
 4223 078b 43617053 		.ascii	"CapSense_numberOfSensors\000"
 4223      656E7365 
 4223      5F6E756D 
 4223      6265724F 
 4223      6653656E 
 4224              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
