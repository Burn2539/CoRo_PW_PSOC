ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CapSense_CSHL.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.CapSense_BaseInit,"ax",%progbits
  18              		.align	2
  19              		.global	CapSense_BaseInit
  20              		.code	16
  21              		.thumb_func
  22              		.type	CapSense_BaseInit, %function
  23              	CapSense_BaseInit:
  24              	.LFB35:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\CapSense_CSHL.c"
   1:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * File Name: CapSense_CSHL.c
   3:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Version 2.20
   4:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
   5:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Description:
   6:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CSD component.
   8:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
   9:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Note:
  10:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
  11:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  18:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_CSHL.h"
  19:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_PVT.h"
  20:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  21:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /* SmartSense functions */
  22:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  23:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     extern void CapSense_UpdateThresholds(uint32 sensor);
  24:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  25:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  26:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /* Storage of filters data */
  27:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
  28:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) )
  29:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  30:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  31:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData2[CapSense_TOTAL_SENSOR_COUNT];
  32:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 2


  33:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #elif ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER))   || \
  34:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER))   || \
  35:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
  36:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))   || \
  37:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)) )
  38:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  39:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  40:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
  41:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         *    (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) )
  42:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         */
  43:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  44:.\Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint16 CapSense_sensorRaw[CapSense_TOTAL_SENSOR_COUNT];
  45:.\Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint8 CapSense_sensorEnableMask[CapSense_TOTAL_SENSOR_MASK];
  46:.\Generated_Source\PSoC4/CapSense_CSHL.c **** extern const uint8 CapSense_widgetNumber[CapSense_TOTAL_SENSOR_COUNT];
  47:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  48:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
  49:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     extern uint32 CapSense_widgetResolution[CapSense_RESOLUTIONS_TBL_SIZE];
  50:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
  51:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  52:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_sensorBaseline[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  53:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorBaselineLow[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  54:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_sensorSignal[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  55:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorOnMask[CapSense_TOTAL_SENSOR_MASK] = {0u};
  56:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  57:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineResetCnt[CapSense_TOTAL_SENSOR_COUNT];
  58:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineReset[CapSense_TOTAL_SENSOR_COUNT] = {
  59:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     5u, 5u, 5u, 5u, 5u, 
  60:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  61:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  62:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  63:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  64:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  65:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     extern CapSense_CONFIG_TYPE_P4_v2_30 CapSense_config;
  66:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  67:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  68:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
  69:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
  70:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
  71:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  72:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /* Generated by Customizer */
  73:.\Generated_Source\PSoC4/CapSense_CSHL.c **** const uint16 CapSense_fingerThreshold[] = {
  74:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     100u, 
  75:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  76:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  77:.\Generated_Source\PSoC4/CapSense_CSHL.c **** const uint16 CapSense_noiseThreshold[] = {
  78:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     30u, 
  79:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  80:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  81:.\Generated_Source\PSoC4/CapSense_CSHL.c **** const uint16 CapSense_hysteresis[] = {
  82:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, 
  83:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  84:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  85:.\Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_debounce[] = {
  86:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, 
  87:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  88:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  89:.\Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_rawDataIndex[] = {
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 3


  90:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, /* LinearSlider0__LS */
  91:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  92:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  93:.\Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_numberOfSensors[] = {
  94:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     5u, /* LinearSlider0__LS */
  95:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  96:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  97:.\Generated_Source\PSoC4/CapSense_CSHL.c **** static const uint16 CapSense_centroidMult[] = {
  98:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     6400u, 
  99:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
 100:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 101:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 102:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 103:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 104:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 105:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_BaseInit
 106:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 107:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 108:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 109:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an
 110:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value.
 111:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Resets to zero CapSense_sensorBaselineLow[sensor] and
 112:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[sensor] array element.
 113:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_rawFilterData2[sensor] and
 114:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[sensor] array element with an
 115:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value if the raw data filter is enabled.
 116:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 117:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 118:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 119:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 120:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 121:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 122:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 123:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 124:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store the baseline value.
 125:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store the fraction byte of
 126:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the baseline value.
 127:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store a difference between
 128:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and the previous value of the baseline.
 129:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store a previous sample of
 130:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
 131:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before a previous sample
 132:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  of the enabled raw data filter. Required only for median or average filters.
 133:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 134:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 135:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 136:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 137:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 138:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_BaseInit(uint32 sensor)
 139:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
  26              		.loc 1 139 0
  27              		.cfi_startproc
  28              	.LVL0:
 140:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((CapSense_TOTAL_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || \
 141:.\Generated_Source\PSoC4/CapSense_CSHL.c ****          (CapSense_TOTAL_GENERICS_COUNT))
 142:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 widget = CapSense_widgetNumber[sensor];
 143:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* ((CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 4


 144:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 145:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)
 146:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 debounceIndex;
 147:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) */
 148:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 149:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 150:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 151:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 152:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 153:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 154:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 155:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline */
 156:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaseline[sensor] = CapSense_sensorRaw[sensor];
  29              		.loc 1 156 0
  30 0000 4300     		lsl	r3, r0, #1
  31 0002 054A     		ldr	r2, .L2
  32 0004 995A     		ldrh	r1, [r3, r2]
  33 0006 054A     		ldr	r2, .L2+4
  34 0008 9952     		strh	r1, [r3, r2]
 157:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaselineLow[sensor] = 0u;
  35              		.loc 1 157 0
  36 000a 1018     		add	r0, r2, r0
  37              	.LVL1:
  38 000c 0021     		mov	r1, #0
  39 000e 0173     		strb	r1, [r0, #12]
 158:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = 0u;
  40              		.loc 1 158 0
  41 0010 D318     		add	r3, r2, r3
  42 0012 9982     		strh	r1, [r3, #20]
 159:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 160:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 161:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 162:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) ||\
 163:.\Generated_Source\PSoC4/CapSense_CSHL.c ****          (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)))
 164:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 165:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
 166:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_sensorRaw[sensor];
 167:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 168:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #elif ((CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER) ||\
 169:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER) ||\
 170:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER) ||\
 171:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER) ||\
 172:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
 173:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 174:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
 175:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 176:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 177:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* No Raw filters */
 178:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* ((CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
 179:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             *   (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER))
 180:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             */
 181:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 182:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 183:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 184:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 185:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 186:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 5


  43              		.loc 1 186 0
  44              		@ sp needed
  45 0014 7047     		bx	lr
  46              	.L3:
  47 0016 C046     		.align	2
  48              	.L2:
  49 0018 00000000 		.word	CapSense_sensorRaw
  50 001c 00000000 		.word	.LANCHOR0
  51              		.cfi_endproc
  52              	.LFE35:
  53              		.size	CapSense_BaseInit, .-CapSense_BaseInit
  54              		.section	.text.CapSense_InitializeSensorBaseline,"ax",%progbits
  55              		.align	2
  56              		.global	CapSense_InitializeSensorBaseline
  57              		.code	16
  58              		.thumb_func
  59              		.type	CapSense_InitializeSensorBaseline, %function
  60              	CapSense_InitializeSensorBaseline:
  61              	.LFB36:
 187:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 188:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 189:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 190:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeSensorBaseline
 191:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 192:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 193:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 194:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an
 195:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or a pair
 196:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the
 197:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if
 198:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  enabled.
 199:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 200:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 201:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 202:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 203:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 204:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 205:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 206:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 207:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 208:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 209:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 210:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 211:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 212:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 213:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeSensorBaseline(uint32 sensor)
 214:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
  62              		.loc 1 214 0
  63              		.cfi_startproc
  64              	.LVL2:
  65 0000 10B5     		push	{r4, lr}
  66              		.cfi_def_cfa_offset 8
  67              		.cfi_offset 4, -8
  68              		.cfi_offset 14, -4
  69 0002 041C     		mov	r4, r0
 215:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Scan sensor */
 216:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanSensor(sensor);
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 6


  70              		.loc 1 216 0
  71 0004 FFF7FEFF 		bl	CapSense_ScanSensor
  72              	.LVL3:
  73              	.L5:
 217:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
  74              		.loc 1 217 0 discriminator 1
  75 0008 FFF7FEFF 		bl	CapSense_IsBusy
  76              	.LVL4:
  77 000c 0028     		cmp	r0, #0
  78 000e FBD1     		bne	.L5
 218:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 219:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
 220:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 221:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 222:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline, Signal and debounce counters */
 223:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_BaseInit(sensor);
  79              		.loc 1 223 0
  80 0010 201C     		mov	r0, r4
  81 0012 FFF7FEFF 		bl	CapSense_BaseInit
  82              	.LVL5:
 224:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
  83              		.loc 1 224 0
  84              		@ sp needed
  85              	.LVL6:
  86 0016 10BD     		pop	{r4, pc}
  87              		.cfi_endproc
  88              	.LFE36:
  89              		.size	CapSense_InitializeSensorBaseline, .-CapSense_InitializeSensorBaseline
  90              		.section	.text.CapSense_InitializeAllBaselines,"ax",%progbits
  91              		.align	2
  92              		.global	CapSense_InitializeAllBaselines
  93              		.code	16
  94              		.thumb_func
  95              		.type	CapSense_InitializeAllBaselines, %function
  96              	CapSense_InitializeAllBaselines:
  97              	.LFB37:
 225:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 226:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 227:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 228:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeAllBaselines
 229:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 230:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 231:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 232:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Uses the CapSense_InitializeSensorBaseline function to load the
 233:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] array with an initial values by scanning
 234:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw count values are copied into the baseline array for
 235:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw data filters are initialized if enabled.
 236:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 237:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 238:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 239:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 240:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 241:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 242:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 243:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 244:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 245:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 7


 246:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 247:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 248:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 249:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 250:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeAllBaselines(void)
 251:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
  98              		.loc 1 251 0
  99              		.cfi_startproc
 100 0000 10B5     		push	{r4, lr}
 101              		.cfi_def_cfa_offset 8
 102              		.cfi_offset 4, -8
 103              		.cfi_offset 14, -4
 104              	.LVL7:
 252:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 253:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 254:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 105              		.loc 1 254 0
 106 0002 0024     		mov	r4, #0
 107 0004 03E0     		b	.L7
 108              	.LVL8:
 109              	.L8:
 255:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 256:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_InitializeSensorBaseline(i);
 110              		.loc 1 256 0 discriminator 3
 111 0006 201C     		mov	r0, r4
 112 0008 FFF7FEFF 		bl	CapSense_InitializeSensorBaseline
 113              	.LVL9:
 254:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 114              		.loc 1 254 0 discriminator 3
 115 000c 0134     		add	r4, r4, #1
 116              	.LVL10:
 117              	.L7:
 254:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 118              		.loc 1 254 0 is_stmt 0 discriminator 1
 119 000e 042C     		cmp	r4, #4
 120 0010 F9D9     		bls	.L8
 257:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 258:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 121              		.loc 1 258 0 is_stmt 1
 122              		@ sp needed
 123              	.LVL11:
 124 0012 10BD     		pop	{r4, pc}
 125              		.cfi_endproc
 126              	.LFE37:
 127              		.size	CapSense_InitializeAllBaselines, .-CapSense_InitializeAllBaselines
 128              		.section	.text.CapSense_InitializeEnabledBaselines,"ax",%progbits
 129              		.align	2
 130              		.global	CapSense_InitializeEnabledBaselines
 131              		.code	16
 132              		.thumb_func
 133              		.type	CapSense_InitializeEnabledBaselines, %function
 134              	CapSense_InitializeEnabledBaselines:
 135              	.LFB38:
 259:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 260:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 261:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 262:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeEnabledBaselines
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 8


 263:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 264:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 265:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 266:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Scans all the enabled widgets and the raw count values are copied into the
 267:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for all the sensors enabled in the scanning process. The baselines
 268:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  are initialized with zero values for sensors disabled from the scanning process.
 269:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  The raw data filters are initialized if enabled.
 270:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 271:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 272:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 273:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 274:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 275:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 276:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 277:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 278:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorRaw[] - used to store the sensors raw data.
 279:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[ ] - used to store bit masks of the enabled sensors.
 280:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 281:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 282:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 283:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 284:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 285:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeEnabledBaselines(void)
 286:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 136              		.loc 1 286 0
 137              		.cfi_startproc
 138 0000 10B5     		push	{r4, lr}
 139              		.cfi_def_cfa_offset 8
 140              		.cfi_offset 4, -8
 141              		.cfi_offset 14, -4
 287:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 288:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 289:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 290:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanEnabledWidgets();
 142              		.loc 1 290 0
 143 0002 FFF7FEFF 		bl	CapSense_ScanEnabledWidgets
 144              	.LVL12:
 145              	.L10:
 291:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 146              		.loc 1 291 0 discriminator 1
 147 0006 FFF7FEFF 		bl	CapSense_IsBusy
 148              	.LVL13:
 149 000a 0028     		cmp	r0, #0
 150 000c FBD1     		bne	.L10
 151 000e 0024     		mov	r4, #0
 152 0010 09E0     		b	.L11
 153              	.LVL14:
 154              	.L13:
 292:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 293:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
 294:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 295:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 296:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 297:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 298:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 155              		.loc 1 298 0
 156 0012 0648     		ldr	r0, .L14
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 9


 157 0014 211C     		mov	r1, r4
 158 0016 FFF7FEFF 		bl	CapSense_GetBitValue
 159              	.LVL15:
 299:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 300:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 301:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(isSensorEnabled != 0u)
 160              		.loc 1 301 0
 161 001a 0028     		cmp	r0, #0
 162 001c 02D0     		beq	.L12
 302:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 303:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Initialize baselines */
 304:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(i);
 163              		.loc 1 304 0
 164 001e 201C     		mov	r0, r4
 165              	.LVL16:
 166 0020 FFF7FEFF 		bl	CapSense_BaseInit
 167              	.LVL17:
 168              	.L12:
 296:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 169              		.loc 1 296 0 discriminator 2
 170 0024 0134     		add	r4, r4, #1
 171              	.LVL18:
 172              	.L11:
 296:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 173              		.loc 1 296 0 is_stmt 0 discriminator 1
 174 0026 042C     		cmp	r4, #4
 175 0028 F3D9     		bls	.L13
 305:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 306:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 307:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 176              		.loc 1 307 0 is_stmt 1
 177              		@ sp needed
 178              	.LVL19:
 179 002a 10BD     		pop	{r4, pc}
 180              	.L15:
 181              		.align	2
 182              	.L14:
 183 002c 00000000 		.word	CapSense_sensorEnableMask
 184              		.cfi_endproc
 185              	.LFE38:
 186              		.size	CapSense_InitializeEnabledBaselines, .-CapSense_InitializeEnabledBaselines
 187              		.section	.text.CapSense_UpdateBaselineNoThreshold,"ax",%progbits
 188              		.align	2
 189              		.global	CapSense_UpdateBaselineNoThreshold
 190              		.code	16
 191              		.thumb_func
 192              		.type	CapSense_UpdateBaselineNoThreshold, %function
 193              	CapSense_UpdateBaselineNoThreshold:
 194              	.LFB39:
 308:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 309:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 310:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 311:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateBaselineNoThreshold
 312:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 313:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 314:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 315:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 10


 316:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by
 317:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 318:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor].
 319:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold.
 320:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating; baseline is loaded
 321:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  with a raw count value if a signal is greater than zero and if signal is less
 322:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  than noise threshold.
 323:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline
 324:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 325:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 326:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API does not update the thresholds in the Smartsense Mode.
 327:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 328:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 329:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 330:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 331:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 332:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 333:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 334:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 335:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
 336:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store baseline value.
 337:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store fraction byte of
 338:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline value.
 339:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store difference between
 340:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
 341:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store previous sample of
 342:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
 343:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before previous sample
 344:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 345:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 346:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 347:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 348:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 349:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 350:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateBaselineNoThreshold(uint32 sensor)
 351:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 195              		.loc 1 351 0
 196              		.cfi_startproc
 197              	.LVL20:
 198 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 199              		.cfi_def_cfa_offset 24
 200              		.cfi_offset 3, -24
 201              		.cfi_offset 4, -20
 202              		.cfi_offset 5, -16
 203              		.cfi_offset 6, -12
 204              		.cfi_offset 7, -8
 205              		.cfi_offset 14, -4
 206 0002 041C     		mov	r4, r0
 207              	.LVL21:
 352:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 calc;
 353:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sign;
 354:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 tempRaw;
 355:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 filteredRawData;
 356:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 widget = CapSense_widgetNumber[sensor];
 357:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 noiseThreshold;
 358:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 359:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 11


 360:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 361:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 362:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 363:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 364:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 365:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     noiseThreshold = CapSense_noiseThreshold[widget];
 366:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     filteredRawData = CapSense_sensorRaw[sensor];
 208              		.loc 1 366 0
 209 0004 4300     		lsl	r3, r0, #1
 210 0006 254A     		ldr	r2, .L25
 211 0008 985A     		ldrh	r0, [r3, r2]
 212              	.LVL22:
 367:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 368:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_RAW_FILTER_MASK != 0u)
 369:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if(CapSense_enableRawFilters != 0u)
 370:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 371:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)
 372:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             tempRaw = filteredRawData;
 373:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_MedianFilter(filteredRawData, CapSense_rawFilterData1[sensor
 374:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                             CapSense_rawFilterData2[sensor]);
 375:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 376:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = tempRaw;
 377:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 378:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)
 379:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             tempRaw = filteredRawData;
 380:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_AveragingFilter(filteredRawData, CapSense_rawFilterData1[sen
 381:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                CapSense_rawFilterData2[sensor]);
 382:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 383:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = tempRaw;
 384:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 385:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)
 386:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR2Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 387:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 388:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 389:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)
 390:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR4Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 391:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 392:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 393:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)
 394:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_JitterFilter(filteredRawData, CapSense_rawFilterData1[sensor
 395:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 396:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 397:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)
 398:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR8Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 399:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 400:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 401:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)
 402:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR16Filter(filteredRawData, CapSense_rawFilterData1[sensor]
 403:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 404:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 405:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 406:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* No Raw filters */
 407:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) */
 408:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 409:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
 410:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 411:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 12


 412:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         MeasureNoiseEnvelope_P4_v2_30(&CapSense_config, (uint8)sensor, CapSense_sensorRaw);
 413:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 414:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 415:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Baseline calculation */
 416:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 417:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if(filteredRawData >= CapSense_sensorBaseline[sensor])
 213              		.loc 1 417 0
 214 000a 254A     		ldr	r2, .L25+4
 215 000c 995A     		ldrh	r1, [r3, r2]
 216 000e 8142     		cmp	r1, r0
 217 0010 06D8     		bhi	.L17
 418:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 419:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_lowBaselineResetCnt[sensor] = 0u;
 218              		.loc 1 419 0
 219 0012 0022     		mov	r2, #0
 220 0014 234B     		ldr	r3, .L25+8
 221 0016 1A55     		strb	r2, [r3, r4]
 420:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = filteredRawData - CapSense_sensorBaseline[sensor];
 222              		.loc 1 420 0
 223 0018 451A     		sub	r5, r0, r1
 224 001a ADB2     		uxth	r5, r5
 225              	.LVL23:
 421:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 226              		.loc 1 421 0
 227 001c 0126     		mov	r6, #1
 228 001e 02E0     		b	.L18
 229              	.LVL24:
 230              	.L17:
 422:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 423:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 424:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 425:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = CapSense_sensorBaseline[sensor] - filteredRawData;
 231              		.loc 1 425 0
 232 0020 0D1A     		sub	r5, r1, r0
 233 0022 ADB2     		uxth	r5, r5
 234              	.LVL25:
 426:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 235              		.loc 1 426 0
 236 0024 0026     		mov	r6, #0
 237              	.LVL26:
 238              	.L18:
 427:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 428:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 429:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 430:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if((sign == 0u) && (tempRaw > (uint16) CapSense_negativeNoiseThreshold[widget]))
 431:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 432:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if((sign == 0u) && (tempRaw > (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD))
 239              		.loc 1 432 0
 240 0026 002E     		cmp	r6, #0
 241 0028 12D1     		bne	.L19
 242              		.loc 1 432 0 is_stmt 0 discriminator 1
 243 002a 142D     		cmp	r5, #20
 244 002c 10D9     		bls	.L19
 433:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 434:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 435:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_lowBaselineResetCnt[sensor] >= CapSense_lowBaselineReset[sensor])
 245              		.loc 1 435 0 is_stmt 1
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 13


 246 002e 1D4B     		ldr	r3, .L25+8
 247 0030 1B5D     		ldrb	r3, [r3, r4]
 248 0032 1D4A     		ldr	r2, .L25+12
 249 0034 125D     		ldrb	r2, [r2, r4]
 250 0036 9342     		cmp	r3, r2
 251 0038 06D3     		bcc	.L20
 436:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 437:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(sensor);
 252              		.loc 1 437 0
 253 003a 201C     		mov	r0, r4
 254              	.LVL27:
 255 003c FFF7FEFF 		bl	CapSense_BaseInit
 256              	.LVL28:
 438:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor] = 0u;
 257              		.loc 1 438 0
 258 0040 0022     		mov	r2, #0
 259 0042 184B     		ldr	r3, .L25+8
 260 0044 1A55     		strb	r2, [r3, r4]
 261 0046 19E0     		b	.L21
 262              	.LVL29:
 263              	.L20:
 439:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 440:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
 441:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 442:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor]++;
 264              		.loc 1 442 0
 265 0048 0133     		add	r3, r3, #1
 266 004a 164A     		ldr	r2, .L25+8
 267 004c 1355     		strb	r3, [r2, r4]
 268 004e 15E0     		b	.L21
 269              	.L19:
 443:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 444:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 445:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 446:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 447:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 448:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 449:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Update Baseline if lower than noiseThreshold */
 450:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if ( (tempRaw <= noiseThreshold) ||
 451:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 452:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                && (sign == 0u)))
 453:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 454:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 455:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Update Baseline if lower than noiseThreshold */
 456:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if ( (tempRaw <= noiseThreshold) ||
 270              		.loc 1 456 0
 271 0050 1E2D     		cmp	r5, #30
 272 0052 03D9     		bls	.L22
 273              		.loc 1 456 0 is_stmt 0 discriminator 1
 274 0054 132D     		cmp	r5, #19
 275 0056 11D8     		bhi	.L21
 457:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                  ((tempRaw < (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD)
 458:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                    && (sign == 0u)))
 276              		.loc 1 458 0 is_stmt 1
 277 0058 002E     		cmp	r6, #0
 278 005a 0FD1     		bne	.L21
 279              	.L22:
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 14


 459:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 460:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 461:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 462:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make full Baseline 23 bits */
 463:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc = (uint32) CapSense_sensorBaseline[sensor] << 8u;
 280              		.loc 1 463 0
 281 005c 0A02     		lsl	r2, r1, #8
 282              	.LVL30:
 464:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc |= (uint32) CapSense_sensorBaselineLow[sensor];
 283              		.loc 1 464 0
 284 005e 104B     		ldr	r3, .L25+4
 285 0060 9C46     		mov	ip, r3
 286 0062 1F19     		add	r7, r3, r4
 287 0064 3B7B     		ldrb	r3, [r7, #12]
 288 0066 1343     		orr	r3, r2
 289              	.LVL31:
 465:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 466:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Add Raw Data to Baseline */
 467:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc += filteredRawData;
 290              		.loc 1 467 0
 291 0068 C318     		add	r3, r0, r3
 292              	.LVL32:
 468:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 469:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Sub the high Baseline */
 470:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc -= CapSense_sensorBaseline[sensor];
 293              		.loc 1 470 0
 294 006a 5B1A     		sub	r3, r3, r1
 295              	.LVL33:
 471:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 472:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Put Baseline and BaselineLow */
 473:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 296              		.loc 1 473 0
 297 006c 190A     		lsr	r1, r3, #8
 298 006e 6200     		lsl	r2, r4, #1
 299 0070 6046     		mov	r0, ip
 300              	.LVL34:
 301 0072 8152     		strh	r1, [r0, r2]
 474:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaselineLow[sensor] = ((uint8) calc);
 302              		.loc 1 474 0
 303 0074 3B73     		strb	r3, [r7, #12]
 475:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 476:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_lowBaselineResetCnt[sensor] = 0u;
 304              		.loc 1 476 0
 305 0076 0022     		mov	r2, #0
 306 0078 0A4B     		ldr	r3, .L25+8
 307              	.LVL35:
 308 007a 1A55     		strb	r2, [r3, r4]
 309              	.LVL36:
 310              	.L21:
 477:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 478:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 479:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 480:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 481:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 482:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate Signal if positive difference > noiseThreshold */
 483:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (sign != 0u))
 311              		.loc 1 483 0
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 15


 312 007c 1E2D     		cmp	r5, #30
 313 007e 06D9     		bls	.L23
 314              		.loc 1 483 0 is_stmt 0 discriminator 1
 315 0080 002E     		cmp	r6, #0
 316 0082 04D0     		beq	.L23
 484:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 485:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8)
 486:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Over flow defence for uint8 */
 487:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (tempRaw > 0xFFu)
 488:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 489:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = 0xFFu;
 490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 491:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
 492:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 493:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = ((uint8) tempRaw);
 494:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 495:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 496:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_sensorSignal[sensor] = ((uint16) tempRaw);
 317              		.loc 1 496 0 is_stmt 1
 318 0084 6400     		lsl	r4, r4, #1
 319              	.LVL37:
 320 0086 064B     		ldr	r3, .L25+4
 321 0088 1C19     		add	r4, r3, r4
 322 008a A582     		strh	r5, [r4, #20]
 323 008c 04E0     		b	.L16
 324              	.LVL38:
 325              	.L23:
 497:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8) */
 498:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 499:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 500:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 501:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Signal is zero */
 502:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_sensorSignal[sensor] = 0u;
 326              		.loc 1 502 0
 327 008e 6400     		lsl	r4, r4, #1
 328              	.LVL39:
 329 0090 034B     		ldr	r3, .L25+4
 330 0092 1C19     		add	r4, r3, r4
 331 0094 0023     		mov	r3, #0
 332 0096 A382     		strh	r3, [r4, #20]
 333              	.L16:
 503:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 504:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 505:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 506:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 507:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 508:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 509:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 334              		.loc 1 509 0
 335              		@ sp needed
 336              	.LVL40:
 337              	.LVL41:
 338 0098 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 339              	.L26:
 340 009a C046     		.align	2
 341              	.L25:
 342 009c 00000000 		.word	CapSense_sensorRaw
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 16


 343 00a0 00000000 		.word	.LANCHOR0
 344 00a4 00000000 		.word	CapSense_lowBaselineResetCnt
 345 00a8 00000000 		.word	.LANCHOR1
 346              		.cfi_endproc
 347              	.LFE39:
 348              		.size	CapSense_UpdateBaselineNoThreshold, .-CapSense_UpdateBaselineNoThreshold
 349              		.section	.text.CapSense_UpdateSensorBaseline,"ax",%progbits
 350              		.align	2
 351              		.global	CapSense_UpdateSensorBaseline
 352              		.code	16
 353              		.thumb_func
 354              		.type	CapSense_UpdateSensorBaseline, %function
 355              	CapSense_UpdateSensorBaseline:
 356              	.LFB40:
 510:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 511:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 512:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 513:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateSensorBaseline
 514:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 515:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 516:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 517:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the
 518:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by
 519:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 520:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor].
 521:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold.
 522:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating.
 523:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Baseline is loaded with raw count value if a signal is greater than zero and
 524:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  if signal is less than noise threshold.
 525:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline
 526:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 527:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API updates the thresholds in the Smartsense Mode.
 528:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 529:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 530:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 531:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 532:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 533:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 534:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 535:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 536:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
 537:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 538:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 539:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 540:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 541:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 542:.\Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateSensorBaseline(uint32 sensor)
 543:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 357              		.loc 1 543 0
 358              		.cfi_startproc
 359              	.LVL42:
 360 0000 08B5     		push	{r3, lr}
 361              		.cfi_def_cfa_offset 8
 362              		.cfi_offset 3, -8
 363              		.cfi_offset 14, -4
 544:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 545:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 widget;
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 17


 546:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 547:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         widget = CapSense_widgetNumber[sensor];
 548:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 549:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 550:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 551:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 552:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 553:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 554:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
 555:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_UpdateThresholds(sensor);
 556:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 557:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 558:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_UpdateBaselineNoThreshold(sensor);
 364              		.loc 1 558 0
 365 0002 FFF7FEFF 		bl	CapSense_UpdateBaselineNoThreshold
 366              	.LVL43:
 559:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 560:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 561:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 562:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 563:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 564:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 367              		.loc 1 564 0
 368              		@ sp needed
 369 0006 08BD     		pop	{r3, pc}
 370              		.cfi_endproc
 371              	.LFE40:
 372              		.size	CapSense_UpdateSensorBaseline, .-CapSense_UpdateSensorBaseline
 373              		.section	.text.CapSense_UpdateEnabledBaselines,"ax",%progbits
 374              		.align	2
 375              		.global	CapSense_UpdateEnabledBaselines
 376              		.code	16
 377              		.thumb_func
 378              		.type	CapSense_UpdateEnabledBaselines, %function
 379              	CapSense_UpdateEnabledBaselines:
 380              	.LFB41:
 565:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 566:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 567:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 568:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateEnabledBaselines
 569:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 570:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 571:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 572:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the
 573:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines
 574:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors.
 575:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 576:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 577:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 578:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 579:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 580:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 581:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 582:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 583:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
 584:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 585:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 18


 586:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 587:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
 588:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 589:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 590:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 591:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 592:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 593:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 594:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 595:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 596:.\Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateEnabledBaselines(void)
 597:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 381              		.loc 1 597 0
 382              		.cfi_startproc
 383 0000 10B5     		push	{r4, lr}
 384              		.cfi_def_cfa_offset 8
 385              		.cfi_offset 4, -8
 386              		.cfi_offset 14, -4
 387              	.LVL44:
 598:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 599:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 600:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 601:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 388              		.loc 1 601 0
 389 0002 0024     		mov	r4, #0
 390 0004 09E0     		b	.L29
 391              	.LVL45:
 392              	.L31:
 602:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 603:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 393              		.loc 1 603 0
 394 0006 0648     		ldr	r0, .L32
 395 0008 211C     		mov	r1, r4
 396 000a FFF7FEFF 		bl	CapSense_GetBitValue
 397              	.LVL46:
 604:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 605:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 398              		.loc 1 605 0
 399 000e 0028     		cmp	r0, #0
 400 0010 02D0     		beq	.L30
 606:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 607:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 401              		.loc 1 607 0
 402 0012 201C     		mov	r0, r4
 403              	.LVL47:
 404 0014 FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 405              	.LVL48:
 406              	.L30:
 601:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 407              		.loc 1 601 0 discriminator 2
 408 0018 0134     		add	r4, r4, #1
 409              	.LVL49:
 410              	.L29:
 601:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 411              		.loc 1 601 0 is_stmt 0 discriminator 1
 412 001a 042C     		cmp	r4, #4
 413 001c F3D9     		bls	.L31
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 19


 608:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 609:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 610:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 414              		.loc 1 610 0 is_stmt 1
 415              		@ sp needed
 416              	.LVL50:
 417 001e 10BD     		pop	{r4, pc}
 418              	.L33:
 419              		.align	2
 420              	.L32:
 421 0020 00000000 		.word	CapSense_sensorEnableMask
 422              		.cfi_endproc
 423              	.LFE41:
 424              		.size	CapSense_UpdateEnabledBaselines, .-CapSense_UpdateEnabledBaselines
 425              		.section	.text.CapSense_UpdateWidgetBaseline,"ax",%progbits
 426              		.align	2
 427              		.global	CapSense_UpdateWidgetBaseline
 428              		.code	16
 429              		.thumb_func
 430              		.type	CapSense_UpdateWidgetBaseline, %function
 431              	CapSense_UpdateWidgetBaseline:
 432              	.LFB42:
 611:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 612:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 613:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateWidgetBaseline
 614:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 615:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 616:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 617:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the
 618:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines
 619:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors that belong to widget.
 620:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 621:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 622:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  Widget number.
 623:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 624:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 625:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 626:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 627:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 628:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
 629:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 630:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
 631:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 632:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
 633:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 634:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 635:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 636:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 637:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 638:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 639:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 640:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 641:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateWidgetBaseline(uint32 widget)
 642:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 433              		.loc 1 642 0
 434              		.cfi_startproc
 435              	.LVL51:
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 20


 436 0000 10B5     		push	{r4, lr}
 437              		.cfi_def_cfa_offset 8
 438              		.cfi_offset 4, -8
 439              		.cfi_offset 14, -4
 440              	.LVL52:
 643:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sensorsPerWidget;
 644:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 firstSensor;
 645:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 lastSensor;
 646:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 647:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 648:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 649:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get number of sensors in widget */
 650:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     sensorsPerWidget = CapSense_numberOfSensors[widget];
 651:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 652:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get first sensor in widget */
 653:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     firstSensor = CapSense_rawDataIndex[widget];
 654:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 655:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get last sensor in widget */
 656:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     lastSensor = (CapSense_rawDataIndex[widget] + sensorsPerWidget);
 657:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 658:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 441              		.loc 1 658 0
 442 0002 0024     		mov	r4, #0
 443 0004 09E0     		b	.L35
 444              	.LVL53:
 445              	.L37:
 659:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 660:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 446              		.loc 1 660 0
 447 0006 0648     		ldr	r0, .L38
 448 0008 211C     		mov	r1, r4
 449 000a FFF7FEFF 		bl	CapSense_GetBitValue
 450              	.LVL54:
 661:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 662:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 451              		.loc 1 662 0
 452 000e 0028     		cmp	r0, #0
 453 0010 02D0     		beq	.L36
 663:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 664:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 454              		.loc 1 664 0
 455 0012 201C     		mov	r0, r4
 456              	.LVL55:
 457 0014 FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 458              	.LVL56:
 459              	.L36:
 658:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 460              		.loc 1 658 0 discriminator 2
 461 0018 0134     		add	r4, r4, #1
 462              	.LVL57:
 463              	.L35:
 658:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 464              		.loc 1 658 0 is_stmt 0 discriminator 1
 465 001a 042C     		cmp	r4, #4
 466 001c F3D9     		bls	.L37
 665:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 666:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 21


 667:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 467              		.loc 1 667 0 is_stmt 1
 468              		@ sp needed
 469              	.LVL58:
 470 001e 10BD     		pop	{r4, pc}
 471              	.L39:
 472              		.align	2
 473              	.L38:
 474 0020 00000000 		.word	CapSense_sensorEnableMask
 475              		.cfi_endproc
 476              	.LFE42:
 477              		.size	CapSense_UpdateWidgetBaseline, .-CapSense_UpdateWidgetBaseline
 478              		.section	.text.CapSense_GetBaselineData,"ax",%progbits
 479              		.align	2
 480              		.global	CapSense_GetBaselineData
 481              		.code	16
 482              		.thumb_func
 483              		.type	CapSense_GetBaselineData, %function
 484              	CapSense_GetBaselineData:
 485              	.LFB43:
 668:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 669:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 670:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 671:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetBaselineData
 672:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 673:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 674:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 675:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the sensor baseline from the component.
 676:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 677:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 678:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 679:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 680:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 681:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the baseline value of the sensor indicated by an argument.
 682:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 683:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 684:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with an initial values by scanning
 685:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 686:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 687:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 688:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 689:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 690:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_GetBaselineData(uint32 sensor)
 691:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 486              		.loc 1 691 0
 487              		.cfi_startproc
 488              	.LVL59:
 692:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_sensorBaseline[sensor]);
 489              		.loc 1 692 0
 490 0000 4000     		lsl	r0, r0, #1
 491              	.LVL60:
 492 0002 014B     		ldr	r3, .L41
 493 0004 185A     		ldrh	r0, [r3, r0]
 693:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 494              		.loc 1 693 0
 495              		@ sp needed
 496 0006 7047     		bx	lr
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 22


 497              	.L42:
 498              		.align	2
 499              	.L41:
 500 0008 00000000 		.word	.LANCHOR0
 501              		.cfi_endproc
 502              	.LFE43:
 503              		.size	CapSense_GetBaselineData, .-CapSense_GetBaselineData
 504              		.section	.text.CapSense_SetBaselineData,"ax",%progbits
 505              		.align	2
 506              		.global	CapSense_SetBaselineData
 507              		.code	16
 508              		.thumb_func
 509              		.type	CapSense_SetBaselineData, %function
 510              	CapSense_SetBaselineData:
 511              	.LFB44:
 694:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 695:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 696:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 697:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetBaselineData
 698:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 699:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 700:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 701:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor baseline array.
 702:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 703:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 704:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 705:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  data:    Sensor baseline.
 706:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 707:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 708:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 709:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 710:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 711:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with initial values by scanning
 712:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 713:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 714:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 715:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 716:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 717:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetBaselineData(uint32 sensor, uint16 data)
 718:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 512              		.loc 1 718 0
 513              		.cfi_startproc
 514              	.LVL61:
 719:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaseline[sensor] = data;
 515              		.loc 1 719 0
 516 0000 4000     		lsl	r0, r0, #1
 517              	.LVL62:
 518 0002 014B     		ldr	r3, .L44
 519 0004 C152     		strh	r1, [r0, r3]
 720:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 520              		.loc 1 720 0
 521              		@ sp needed
 522 0006 7047     		bx	lr
 523              	.L45:
 524              		.align	2
 525              	.L44:
 526 0008 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 23


 527              		.cfi_endproc
 528              	.LFE44:
 529              		.size	CapSense_SetBaselineData, .-CapSense_SetBaselineData
 530              		.section	.text.CapSense_GetDiffCountData,"ax",%progbits
 531              		.align	2
 532              		.global	CapSense_GetDiffCountData
 533              		.code	16
 534              		.thumb_func
 535              		.type	CapSense_GetDiffCountData, %function
 536              	CapSense_GetDiffCountData:
 537              	.LFB45:
 721:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 722:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 723:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 724:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDiffCountData
 725:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 726:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 727:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 728:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function returns the Sensor Signal from the component.
 729:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 730:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 731:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 732:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 733:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 734:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the difference count value of the sensor indicated by the
 735:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  argument.
 736:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 737:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 738:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 739:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 740:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 741:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 742:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 743:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 744:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_GetDiffCountData(uint32 sensor)
 745:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 538              		.loc 1 745 0
 539              		.cfi_startproc
 540              	.LVL63:
 746:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_sensorSignal[sensor]);
 541              		.loc 1 746 0
 542 0000 4000     		lsl	r0, r0, #1
 543              	.LVL64:
 544 0002 024B     		ldr	r3, .L47
 545 0004 1818     		add	r0, r3, r0
 546 0006 808A     		ldrh	r0, [r0, #20]
 747:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 547              		.loc 1 747 0
 548              		@ sp needed
 549 0008 7047     		bx	lr
 550              	.L48:
 551 000a C046     		.align	2
 552              	.L47:
 553 000c 00000000 		.word	.LANCHOR0
 554              		.cfi_endproc
 555              	.LFE45:
 556              		.size	CapSense_GetDiffCountData, .-CapSense_GetDiffCountData
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 24


 557              		.section	.text.CapSense_SetDiffCountData,"ax",%progbits
 558              		.align	2
 559              		.global	CapSense_SetDiffCountData
 560              		.code	16
 561              		.thumb_func
 562              		.type	CapSense_SetDiffCountData, %function
 563              	CapSense_SetDiffCountData:
 564              	.LFB46:
 748:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 749:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 750:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 751:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetDiffCountData
 752:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 753:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 754:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 755:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor signal array.
 756:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 757:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 758:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 759:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  value:   Sensor signal.
 760:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 761:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 762:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 763:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 764:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 765:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 766:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 767:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 768:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 769:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 770:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 771:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetDiffCountData(uint32 sensor, uint16 value)
 772:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 565              		.loc 1 772 0
 566              		.cfi_startproc
 567              	.LVL65:
 773:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = value;
 568              		.loc 1 773 0
 569 0000 4000     		lsl	r0, r0, #1
 570              	.LVL66:
 571 0002 024B     		ldr	r3, .L50
 572 0004 1818     		add	r0, r3, r0
 573 0006 8182     		strh	r1, [r0, #20]
 774:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 574              		.loc 1 774 0
 575              		@ sp needed
 576 0008 7047     		bx	lr
 577              	.L51:
 578 000a C046     		.align	2
 579              	.L50:
 580 000c 00000000 		.word	.LANCHOR0
 581              		.cfi_endproc
 582              	.LFE46:
 583              		.size	CapSense_SetDiffCountData, .-CapSense_SetDiffCountData
 584              		.section	.text.CapSense_GetFingerThreshold,"ax",%progbits
 585              		.align	2
 586              		.global	CapSense_GetFingerThreshold
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 25


 587              		.code	16
 588              		.thumb_func
 589              		.type	CapSense_GetFingerThreshold, %function
 590              	CapSense_GetFingerThreshold:
 591              	.LFB47:
 775:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 776:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 777:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 778:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerThreshold
 779:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 780:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 781:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 782:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the finger threshold from the component.
 783:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 784:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 785:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 786:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 787:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 788:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the finger threshold of the widget indicated by the argument.
 789:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 790:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 791:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_fingerThreshold[] - This array contains the level of signal
 792:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that is determined if a finger is present on the widget.
 793:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 794:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 795:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 796:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 797:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 798:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_GetFingerThreshold(uint32 widget)
 799:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 592              		.loc 1 799 0
 593              		.cfi_startproc
 594              	.LVL67:
 800:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_fingerThreshold[widget]);
 801:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 595              		.loc 1 801 0
 596 0000 6420     		mov	r0, #100
 597              	.LVL68:
 598              		@ sp needed
 599 0002 7047     		bx	lr
 600              		.cfi_endproc
 601              	.LFE47:
 602              		.size	CapSense_GetFingerThreshold, .-CapSense_GetFingerThreshold
 603              		.section	.text.CapSense_GetNoiseThreshold,"ax",%progbits
 604              		.align	2
 605              		.global	CapSense_GetNoiseThreshold
 606              		.code	16
 607              		.thumb_func
 608              		.type	CapSense_GetNoiseThreshold, %function
 609              	CapSense_GetNoiseThreshold:
 610              	.LFB48:
 802:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 803:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 804:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 805:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNoiseThreshold
 806:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 807:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 26


 808:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 809:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the noise threshold from the component.
 810:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 811:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 812:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 813:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 814:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 815:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the noise threshold of the widget indicated by the argument.
 816:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 817:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 818:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_noiseThreshold[] - This array contains the level of signal
 819:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that determines the level of noise in the capacitive scan.
 820:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 821:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 822:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 823:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 824:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 825:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_GetNoiseThreshold(uint32 widget)
 826:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 611              		.loc 1 826 0
 612              		.cfi_startproc
 613              	.LVL69:
 827:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_noiseThreshold[widget]);
 828:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 614              		.loc 1 828 0
 615 0000 1E20     		mov	r0, #30
 616              	.LVL70:
 617              		@ sp needed
 618 0002 7047     		bx	lr
 619              		.cfi_endproc
 620              	.LFE48:
 621              		.size	CapSense_GetNoiseThreshold, .-CapSense_GetNoiseThreshold
 622              		.section	.text.CapSense_GetFingerHysteresis,"ax",%progbits
 623              		.align	2
 624              		.global	CapSense_GetFingerHysteresis
 625              		.code	16
 626              		.thumb_func
 627              		.type	CapSense_GetFingerHysteresis, %function
 628              	CapSense_GetFingerHysteresis:
 629              	.LFB49:
 829:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 830:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 831:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 832:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerHysteresis
 833:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 834:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 835:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 836:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the Hysteresis value from the component.
 837:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 838:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 839:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 840:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 841:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 842:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the Hysteresis of the widget indicated by the argument.
 843:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 844:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 845:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_hysteresis[] - This array contains the hysteresis value
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 27


 846:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   for each widget.
 847:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 848:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 849:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 850:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 851:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 852:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 853:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_GetFingerHysteresis(uint32 widget)
 854:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 630              		.loc 1 854 0
 631              		.cfi_startproc
 632              	.LVL71:
 855:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_hysteresis[widget]);
 856:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 633              		.loc 1 856 0
 634 0000 0020     		mov	r0, #0
 635              	.LVL72:
 636              		@ sp needed
 637 0002 7047     		bx	lr
 638              		.cfi_endproc
 639              	.LFE49:
 640              		.size	CapSense_GetFingerHysteresis, .-CapSense_GetFingerHysteresis
 641              		.section	.text.CapSense_GetNegativeNoiseThreshold,"ax",%progbits
 642              		.align	2
 643              		.global	CapSense_GetNegativeNoiseThreshold
 644              		.code	16
 645              		.thumb_func
 646              		.type	CapSense_GetNegativeNoiseThreshold, %function
 647              	CapSense_GetNegativeNoiseThreshold:
 648              	.LFB50:
 857:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 858:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 859:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 860:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNegativeNoiseThreshold
 861:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 862:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 863:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 864:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the negative noise threshold from the component.
 865:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 866:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 867:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 868:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 869:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return Value:
 870:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the negative noise threshold
 871:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 872:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 873:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_negativeNoiseThreshold - This variable specifies the negative
 874:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   difference between the raw count and baseline levels for Baseline resetting
 875:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   to the raw count level.
 876:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 877:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 878:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 879:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 880:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 881:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_GetNegativeNoiseThreshold(uint32 widget)
 882:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 649              		.loc 1 882 0
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 28


 650              		.cfi_startproc
 651              	.LVL73:
 883:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 884:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_negativeNoiseThreshold[widget]);
 885:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #else
 886:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_NEGATIVE_NOISE_THRESHOLD);
 887:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 888:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 652              		.loc 1 888 0
 653 0000 1420     		mov	r0, #20
 654              	.LVL74:
 655              		@ sp needed
 656 0002 7047     		bx	lr
 657              		.cfi_endproc
 658              	.LFE50:
 659              		.size	CapSense_GetNegativeNoiseThreshold, .-CapSense_GetNegativeNoiseThreshold
 660              		.section	.text.CapSense_CheckIsSensorActive,"ax",%progbits
 661              		.align	2
 662              		.global	CapSense_CheckIsSensorActive
 663              		.code	16
 664              		.thumb_func
 665              		.type	CapSense_CheckIsSensorActive, %function
 666              	CapSense_CheckIsSensorActive:
 667              	.LFB51:
 889:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 890:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 891:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 892:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 893:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetFingerThreshold
 894:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 895:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 896:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 897:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the finger threshold value for a widget.
 898:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 899:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 900:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensorNumber:  widget index.
 901:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Finger threshold value for the widget.
 902:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 903:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 904:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 905:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 906:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 907:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_fingerThreshold[] - This array contains the level of signal
 908:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   for each widget that determines if a finger is present on the widget.
 909:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 910:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 911:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 912:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 913:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 914:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetFingerThreshold(uint32 widget, uint16 value)
 915:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 916:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_fingerThreshold[widget] = value;
 917:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 918:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 919:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 920:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 921:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetNoiseThreshold
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 29


 922:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 923:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 924:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 925:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Noise Threshold value for each widget.
 926:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 927:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 928:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Sensor index number.
 929:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:   Noise Threshold value for widget.
 930:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 931:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 932:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 933:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 934:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 935:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_noiseThreshold[] - This array contains the level of signal
 936:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   for each widget that determines the level of noise in the capacitive scan.
 937:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 938:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 939:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 940:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 941:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 942:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetNoiseThreshold(uint32 widget, uint16 value)
 943:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 944:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_noiseThreshold[widget] = value;
 945:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 946:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 947:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 948:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 949:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetFingerHysteresis
 950:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 951:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 952:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 953:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Hysteresis value of a widget
 954:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 955:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 956:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Hysteresis value for widgets.
 957:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  widget number
 958:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 959:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 960:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 961:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 962:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 963:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_hysteresis[] - This array contains the hysteresis value for each widget.
 964:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 965:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 966:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 967:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 968:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 969:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 970:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetFingerHysteresis(uint32 widget, uint16 value)
 971:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 972:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_hysteresis[widget] = value;
 973:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 974:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 975:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 976:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 977:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetNegativeNoiseThreshold
 978:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 30


 979:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 980:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 981:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Negative Noise Threshold value of a widget
 982:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 983:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 984:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Negative Noise Threshold value for widgets.
 985:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget: widget number
 986:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 987:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 988:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 989:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 990:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 991:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_negativeNoiseThreshold  - This parameter specifies the negative
 992:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   difference between the raw count and baseline levels for Baseline resetting to
 993:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   the raw count level.
 994:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 995:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 996:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 997:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 998:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 999:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetNegativeNoiseThreshold(uint32 widget, uint16 value)
1000:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1001:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_negativeNoiseThreshold[widget] = value;
1002:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1003:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1004:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1005:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1006:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetDebounce
1007:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1008:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1009:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1010:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the debounce value for a widget.
1011:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1012:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1013:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Debounce value for widget.
1014:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget: widget index.
1015:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1016:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
1017:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1018:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1019:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1020:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_debounce[] - This array contains the debounce value for each widget.
1021:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
1022:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1023:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1024:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1025:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1026:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1027:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetDebounce(uint32 widget, uint8 value)
1028:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1029:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_debounce[widget] = value;
1030:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1031:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1032:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1033:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1034:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetLowBaselineReset
1035:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 31


1036:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1037:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1038:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the low baseline reset threshold value for the sensor.
1039:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1040:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1041:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value: low baseline reset threshold value.
1042:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensor: Sensor index.
1043:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1044:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
1045:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1046:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1047:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1048:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_lowBaselineReset[] - This array contains the Baseline update
1049:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold value for each sensor.
1050:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1051:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1052:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1053:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1054:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1055:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetLowBaselineReset(uint32 sensor, uint8 value)
1056:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1057:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_lowBaselineReset[sensor] = value;
1058:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1059:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
1060:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1061:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1062:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1063:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsSensorActive
1064:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1065:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1066:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1067:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[sensor] array element to the finger
1068:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold of the widget it belongs to. The hysteresis and debounce are taken into
1069:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold
1070:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  based on whether the sensor is currently active.
1071:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
1072:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
1073:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  The debounce counter is added to the sensor active transition.
1074:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function updates the CapSense_sensorOnMask[] array element.
1075:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1076:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1077:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
1078:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1079:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1080:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
1081:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1082:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1083:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - used to store the difference between
1084:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and a previous value of the baseline.
1085:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounceCounter[]   - used to store the current debounce
1086:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  counter of the sensor. the widget which have this parameter are buttons, matrix
1087:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  buttons, proximity, and guard. All other widgets don't have the  debounce parameter
1088:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
1089:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[] - used to store the sensors on/off state.
1090:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[0] contains the masked bits for sensors
1091:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1092:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 32


1093:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1094:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor is inactive.
1095:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is active.
1096:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1097:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1098:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1099:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1100:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1101:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsSensorActive(uint32 sensor)
1102:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 668              		.loc 1 1102 0
 669              		.cfi_startproc
 670              	.LVL75:
 671 0000 38B5     		push	{r3, r4, r5, lr}
 672              		.cfi_def_cfa_offset 16
 673              		.cfi_offset 3, -16
 674              		.cfi_offset 4, -12
 675              		.cfi_offset 5, -8
 676              		.cfi_offset 14, -4
 677 0002 041C     		mov	r4, r0
 678              	.LVL76:
1103:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 widget;
1104:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 debounce;
1105:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 debounceIndex;
1106:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1107:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 fingerThreshold;
1108:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 hysteresis;
1109:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     static uint8 CapSense_debounceCounter[] = {
1110:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, 
1111:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
1112:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1113:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1114:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1115:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Prepare to find debounce counter index */
1116:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     widget = CapSense_widgetNumber[sensor];
1117:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1118:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     fingerThreshold = CapSense_fingerThreshold[widget];
1119:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     hysteresis = CapSense_hysteresis[widget];
1120:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     debounce = CapSense_debounce[widget];
1121:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1122:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         debounceIndex = CapSense_UNUSED_DEBOUNCE_COUNTER_INDEX;
1123:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_debounceCounter[debounceIndex] = 1u;
 679              		.loc 1 1123 0
 680 0004 1E48     		ldr	r0, .L61
 681              	.LVL77:
 682 0006 0122     		mov	r2, #1
 683 0008 2023     		mov	r3, #32
 684 000a C254     		strb	r2, [r0, r3]
1124:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1125:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1126:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Was on */
1127:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if (0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor))
 685              		.loc 1 1127 0
 686 000c 2430     		add	r0, r0, #36
 687 000e 211C     		mov	r1, r4
 688 0010 FFF7FEFF 		bl	CapSense_GetBitValue
 689              	.LVL78:
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 33


 690 0014 0028     		cmp	r0, #0
 691 0016 10D0     		beq	.L57
1128:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1129:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis minus */
1130:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 692              		.loc 1 1130 0
 693 0018 6300     		lsl	r3, r4, #1
 694 001a 194A     		ldr	r2, .L61
 695 001c D318     		add	r3, r2, r3
 696 001e 9B8A     		ldrh	r3, [r3, #20]
 697 0020 632B     		cmp	r3, #99
 698 0022 23DC     		bgt	.L58
1131:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1132:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 0u);
 699              		.loc 1 1132 0
 700 0024 151C     		mov	r5, r2
 701 0026 101C     		mov	r0, r2
 702 0028 2430     		add	r0, r0, #36
 703 002a 211C     		mov	r1, r4
 704 002c 0022     		mov	r2, #0
 705 002e FFF7FEFF 		bl	CapSense_SetBitValue
 706              	.LVL79:
1133:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1134:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 707              		.loc 1 1134 0
 708 0032 0122     		mov	r2, #1
 709 0034 2023     		mov	r3, #32
 710 0036 EA54     		strb	r2, [r5, r3]
 711 0038 18E0     		b	.L58
 712              	.L57:
1135:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1136:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1137:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else    /* Was off */
1138:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1139:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis plus */
1140:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] >= (fingerThreshold + hysteresis))
 713              		.loc 1 1140 0
 714 003a 6300     		lsl	r3, r4, #1
 715 003c 104A     		ldr	r2, .L61
 716 003e D318     		add	r3, r2, r3
 717 0040 9B8A     		ldrh	r3, [r3, #20]
 718 0042 632B     		cmp	r3, #99
 719 0044 0EDD     		ble	.L59
1141:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1142:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex]--;
 720              		.loc 1 1142 0
 721 0046 111C     		mov	r1, r2
 722 0048 2022     		mov	r2, #32
 723 004a 8B5C     		ldrb	r3, [r1, r2]
 724 004c 013B     		sub	r3, r3, #1
 725 004e DBB2     		uxtb	r3, r3
 726 0050 8B54     		strb	r3, [r1, r2]
1143:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor active, decrement debounce counter */
1144:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(CapSense_debounceCounter[debounceIndex] == 0u)
 727              		.loc 1 1144 0
 728 0052 002B     		cmp	r3, #0
 729 0054 0AD1     		bne	.L58
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 34


1145:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1146:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 1u);
 730              		.loc 1 1146 0
 731 0056 081C     		mov	r0, r1
 732 0058 2430     		add	r0, r0, #36
 733 005a 211C     		mov	r1, r4
 734 005c 1F3A     		sub	r2, r2, #31
 735 005e FFF7FEFF 		bl	CapSense_SetBitValue
 736              	.LVL80:
 737 0062 03E0     		b	.L58
 738              	.L59:
1147:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1148:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1149:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1150:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1151:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1152:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 739              		.loc 1 1152 0
 740 0064 0121     		mov	r1, #1
 741 0066 2023     		mov	r3, #32
 742 0068 054A     		ldr	r2, .L61
 743 006a D154     		strb	r1, [r2, r3]
 744              	.L58:
1153:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1154:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1155:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1156:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return ((uint32)((0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor)) ? 1u : 0u));
 745              		.loc 1 1156 0
 746 006c 0448     		ldr	r0, .L61
 747 006e 2430     		add	r0, r0, #36
 748 0070 211C     		mov	r1, r4
 749 0072 FFF7FEFF 		bl	CapSense_GetBitValue
 750              	.LVL81:
 751 0076 0028     		cmp	r0, #0
 752 0078 00D0     		beq	.L60
 753 007a 0120     		mov	r0, #1
 754              	.L60:
1157:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 755              		.loc 1 1157 0 discriminator 4
 756              		@ sp needed
 757              	.LVL82:
 758 007c 38BD     		pop	{r3, r4, r5, pc}
 759              	.L62:
 760 007e C046     		.align	2
 761              	.L61:
 762 0080 00000000 		.word	.LANCHOR0
 763              		.cfi_endproc
 764              	.LFE51:
 765              		.size	CapSense_CheckIsSensorActive, .-CapSense_CheckIsSensorActive
 766              		.section	.text.CapSense_CheckIsWidgetActive,"ax",%progbits
 767              		.align	2
 768              		.global	CapSense_CheckIsWidgetActive
 769              		.code	16
 770              		.thumb_func
 771              		.type	CapSense_CheckIsWidgetActive, %function
 772              	CapSense_CheckIsWidgetActive:
 773              	.LFB52:
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 35


1158:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1159:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1160:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1161:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsWidgetActive
1162:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1163:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1164:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1165:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[] array element to the finger threshold of
1166:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * the widget it belongs to. The hysteresis and debounce are taken into account.
1167:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * The hysteresis is added or subtracted from the finger threshold based on whether
1168:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the sensor is currently active. If the sensor is active, the threshold is
1169:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  lowered by the hysteresis amount. If the sensor is inactive, the threshold
1170:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  is raised by the hysteresis amount.
1171:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * The debounce counter added to the sensor active transition.
1172:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * This function updates CapSense_sensorOnMask[] array element
1173:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1174:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1175:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1176:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1177:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1178:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are
1179:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
1180:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1181:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1182:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  rawDataIndex[]: Contains the  1st sensor position in the widget
1183:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1184:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1185:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1186:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1187:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1188:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsWidgetActive(uint32 widget)
1189:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 774              		.loc 1 1189 0
 775              		.cfi_startproc
 776              	.LVL83:
 777 0000 38B5     		push	{r3, r4, r5, lr}
 778              		.cfi_def_cfa_offset 16
 779              		.cfi_offset 3, -16
 780              		.cfi_offset 4, -12
 781              		.cfi_offset 5, -8
 782              		.cfi_offset 14, -4
 783              	.LVL84:
1190:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 rawIndex = (uint32)CapSense_rawDataIndex[widget];
1191:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 numOfSensors = (uint32)CapSense_numberOfSensors[widget] + rawIndex;
1192:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
 784              		.loc 1 1192 0
 785 0002 0025     		mov	r5, #0
1190:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 rawIndex = (uint32)CapSense_rawDataIndex[widget];
 786              		.loc 1 1190 0
 787 0004 0024     		mov	r4, #0
 788              	.LVL85:
 789              	.L65:
1193:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1194:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Check all sensors of widget */
1195:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1196:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1197:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_CheckIsSensorActive((uint32)rawIndex) != 0u)
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 36


 790              		.loc 1 1197 0
 791 0006 201C     		mov	r0, r4
 792 0008 FFF7FEFF 		bl	CapSense_CheckIsSensorActive
 793              	.LVL86:
 794 000c 0028     		cmp	r0, #0
 795 000e 00D0     		beq	.L64
1198:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1199:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_SENSOR_IS_ACTIVE;
 796              		.loc 1 1199 0
 797 0010 0125     		mov	r5, #1
 798              	.LVL87:
 799              	.L64:
1200:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1201:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 800              		.loc 1 1201 0
 801 0012 0134     		add	r4, r4, #1
 802              	.LVL88:
1202:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1203:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 803              		.loc 1 1203 0
 804 0014 042C     		cmp	r4, #4
 805 0016 F6D9     		bls	.L65
1204:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1205:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1206:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1207:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
1208:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 806              		.loc 1 1208 0
 807 0018 281C     		mov	r0, r5
 808              		@ sp needed
 809              	.LVL89:
 810              	.LVL90:
 811 001a 38BD     		pop	{r3, r4, r5, pc}
 812              		.cfi_endproc
 813              	.LFE52:
 814              		.size	CapSense_CheckIsWidgetActive, .-CapSense_CheckIsWidgetActive
 815              		.section	.text.CapSense_CheckIsAnyWidgetActive,"ax",%progbits
 816              		.align	2
 817              		.global	CapSense_CheckIsAnyWidgetActive
 818              		.code	16
 819              		.thumb_func
 820              		.type	CapSense_CheckIsAnyWidgetActive, %function
 821              	CapSense_CheckIsAnyWidgetActive:
 822              	.LFB53:
1209:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1210:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1211:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1212:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsAnyWidgetActive
1213:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1214:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1215:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1216:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares all the sensors of the CapSense_Signal[] array to their finger
1217:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold. Calls CapSense_CheckIsWidgetActive() for each widget so
1218:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the CapSense_sensorOnMask[] array is up to date after calling this
1219:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  function.
1220:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1221:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 37


1222:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1223:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1224:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1225:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
1226:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1227:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1228:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1229:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1230:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1231:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1232:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1233:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1234:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsAnyWidgetActive(void)
1235:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 823              		.loc 1 1235 0
 824              		.cfi_startproc
 825 0000 38B5     		push	{r3, r4, r5, lr}
 826              		.cfi_def_cfa_offset 16
 827              		.cfi_offset 3, -16
 828              		.cfi_offset 4, -12
 829              		.cfi_offset 5, -8
 830              		.cfi_offset 14, -4
 831              	.LVL91:
1236:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1237:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 i;
1238:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
 832              		.loc 1 1238 0
 833 0002 0025     		mov	r5, #0
1239:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1240:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 834              		.loc 1 1240 0
 835 0004 0024     		mov	r4, #0
 836 0006 06E0     		b	.L68
 837              	.LVL92:
 838              	.L70:
1241:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1242:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(i) != 0u)
 839              		.loc 1 1242 0
 840 0008 201C     		mov	r0, r4
 841 000a FFF7FEFF 		bl	CapSense_CheckIsWidgetActive
 842              	.LVL93:
 843 000e 0028     		cmp	r0, #0
 844 0010 00D0     		beq	.L69
1243:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1244:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_WIDGET_IS_ACTIVE;
 845              		.loc 1 1244 0
 846 0012 0125     		mov	r5, #1
 847              	.LVL94:
 848              	.L69:
1240:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 849              		.loc 1 1240 0 discriminator 2
 850 0014 0134     		add	r4, r4, #1
 851              	.LVL95:
 852              	.L68:
1240:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 853              		.loc 1 1240 0 is_stmt 0 discriminator 1
 854 0016 002C     		cmp	r4, #0
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 38


 855 0018 F6D0     		beq	.L70
1245:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1246:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1247:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1248:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1249:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1250:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
1251:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 856              		.loc 1 1251 0 is_stmt 1
 857 001a 281C     		mov	r0, r5
 858              		@ sp needed
 859              	.LVL96:
 860              	.LVL97:
 861 001c 38BD     		pop	{r3, r4, r5, pc}
 862              		.cfi_endproc
 863              	.LFE53:
 864              		.size	CapSense_CheckIsAnyWidgetActive, .-CapSense_CheckIsAnyWidgetActive
 865 001e C046     		.section	.text.CapSense_EnableWidget,"ax",%progbits
 866              		.align	2
 867              		.global	CapSense_EnableWidget
 868              		.code	16
 869              		.thumb_func
 870              		.type	CapSense_EnableWidget, %function
 871              	CapSense_EnableWidget:
 872              	.LFB54:
1252:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1253:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1254:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1255:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_EnableWidget
1256:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1257:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1258:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1259:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Enables all the widget elements (sensors) to the scanning process.
1260:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1261:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1262:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1263:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1264:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1265:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1266:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1267:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1268:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
1269:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1270:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
1271:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1272:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1273:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1274:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
1275:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
1276:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1277:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1278:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1279:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1280:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1281:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_EnableWidget(uint32 widget)
1282:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 873              		.loc 1 1282 0
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 39


 874              		.cfi_startproc
 875              	.LVL98:
 876 0000 10B5     		push	{r4, lr}
 877              		.cfi_def_cfa_offset 8
 878              		.cfi_offset 4, -8
 879              		.cfi_offset 14, -4
 880              	.LVL99:
1283:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1284:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 881              		.loc 1 1284 0
 882 0002 0024     		mov	r4, #0
 883              	.LVL100:
 884              	.L73:
1285:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
1286:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1287:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Enable all sensors of widget */
1288:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1289:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1290:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 1u);
 885              		.loc 1 1290 0 discriminator 1
 886 0004 0448     		ldr	r0, .L74
 887 0006 211C     		mov	r1, r4
 888 0008 0122     		mov	r2, #1
 889 000a FFF7FEFF 		bl	CapSense_SetBitValue
 890              	.LVL101:
1291:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 891              		.loc 1 1291 0 discriminator 1
 892 000e 0134     		add	r4, r4, #1
 893              	.LVL102:
 894 0010 E4B2     		uxtb	r4, r4
 895              	.LVL103:
1292:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1293:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 896              		.loc 1 1293 0 discriminator 1
 897 0012 042C     		cmp	r4, #4
 898 0014 F6D9     		bls	.L73
1294:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 899              		.loc 1 1294 0
 900              		@ sp needed
 901              	.LVL104:
 902 0016 10BD     		pop	{r4, pc}
 903              	.L75:
 904              		.align	2
 905              	.L74:
 906 0018 00000000 		.word	CapSense_sensorEnableMask
 907              		.cfi_endproc
 908              	.LFE54:
 909              		.size	CapSense_EnableWidget, .-CapSense_EnableWidget
 910              		.section	.text.CapSense_DisableWidget,"ax",%progbits
 911              		.align	2
 912              		.global	CapSense_DisableWidget
 913              		.code	16
 914              		.thumb_func
 915              		.type	CapSense_DisableWidget, %function
 916              	CapSense_DisableWidget:
 917              	.LFB55:
1295:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 40


1296:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1297:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1298:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_DisableWidget
1299:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1300:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1301:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1302:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Disables all the widget elements (sensors) from the scanning process.
1303:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1304:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1305:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1306:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1307:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1308:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1309:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1310:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1311:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
1312:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1313:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
1314:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1315:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1316:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1317:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor isn't scanned by CapSense_ScanEnabledWidgets().
1318:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is scanned by CapSense_ScanEnabledWidgets().
1319:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1320:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1321:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1322:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1323:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1324:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_DisableWidget(uint32 widget)
1325:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 918              		.loc 1 1325 0
 919              		.cfi_startproc
 920              	.LVL105:
 921 0000 10B5     		push	{r4, lr}
 922              		.cfi_def_cfa_offset 8
 923              		.cfi_offset 4, -8
 924              		.cfi_offset 14, -4
 925              	.LVL106:
1326:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 926              		.loc 1 1326 0
 927 0002 0024     		mov	r4, #0
 928              	.LVL107:
 929              	.L77:
1327:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
1328:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1329:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Disable all sensors of widget */
1330:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1331:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1332:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1333:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 0u);
 930              		.loc 1 1333 0 discriminator 1
 931 0004 0448     		ldr	r0, .L78
 932 0006 211C     		mov	r1, r4
 933 0008 0022     		mov	r2, #0
 934 000a FFF7FEFF 		bl	CapSense_SetBitValue
 935              	.LVL108:
1334:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 41


 936              		.loc 1 1334 0 discriminator 1
 937 000e 0134     		add	r4, r4, #1
 938              	.LVL109:
 939 0010 E4B2     		uxtb	r4, r4
 940              	.LVL110:
1335:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1336:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 941              		.loc 1 1336 0 discriminator 1
 942 0012 042C     		cmp	r4, #4
 943 0014 F6D9     		bls	.L77
1337:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 944              		.loc 1 1337 0
 945              		@ sp needed
 946              	.LVL111:
 947 0016 10BD     		pop	{r4, pc}
 948              	.L79:
 949              		.align	2
 950              	.L78:
 951 0018 00000000 		.word	CapSense_sensorEnableMask
 952              		.cfi_endproc
 953              	.LFE55:
 954              		.size	CapSense_DisableWidget, .-CapSense_DisableWidget
 955              		.section	.text.CapSense_FindMaximum,"ax",%progbits
 956              		.align	2
 957              		.global	CapSense_FindMaximum
 958              		.code	16
 959              		.thumb_func
 960              		.type	CapSense_FindMaximum, %function
 961              	CapSense_FindMaximum:
 962              	.LFB56:
1338:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1339:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1340:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1341:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1342:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_FindMaximum
1343:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1344:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1345:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1346:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Finds the index of the maximum element within a defined centroid. Checks
1347:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_sensorSignal[] within a defined centroid and
1348:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  returns the index of the maximum element. The values below the finger threshold are
1349:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  ignored.
1350:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The centroid is defined by offset of the first element and a number of elements - count.
1351:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The diplexed centroid requires at least two consecutive elements above
1352:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  FingerThreshold to find the index of the maximum element.
1353:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1354:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1355:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:  Start index of centroid in CapSense_sensorSignal[] array.
1356:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:   number of elements within centroid.
1357:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  fingerThreshold:  Finger threshold.
1358:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:   pointer to diplex table.
1359:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1360:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1361:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns the index of the maximum element within a defined centroid.
1362:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If the index of the maximum element isn't found it returns 0xFF.
1363:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1364:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 42


1365:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_startOfSlider[] - contains the index of the first slider element
1366:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1367:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1368:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1369:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1370:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1371:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_IS_DIPLEX_SLIDER)
1372:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint16 fingerThreshold, const uint8 *
1373:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
1374:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint16 fingerThreshold)
1375:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1376:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 963              		.loc 1 1376 0
 964              		.cfi_startproc
 965              	.LVL112:
 966 0000 70B5     		push	{r4, r5, r6, lr}
 967              		.cfi_def_cfa_offset 16
 968              		.cfi_offset 4, -16
 969              		.cfi_offset 5, -12
 970              		.cfi_offset 6, -8
 971              		.cfi_offset 14, -4
 972              	.LVL113:
1377:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
1378:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1379:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curPos = 0u;
1380:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* No centroid at Start */
1381:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCntrdSize = 0u;
1382:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1383:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Biggest centroid is zero */
1384:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdSize = 0u;
1385:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
1386:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1387:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum = CapSense_MAXIMUM_CENTROID;
1388:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1389:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 temp = 0u;
1390:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 *startOfSlider = &CapSense_sensorSignal[offset];
 973              		.loc 1 1390 0
 974 0002 4000     		lsl	r0, r0, #1
 975              	.LVL114:
 976 0004 094D     		ldr	r5, .L85
 977 0006 1435     		add	r5, r5, #20
 978 0008 2D18     		add	r5, r5, r0
 979              	.LVL115:
1389:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 *startOfSlider = &CapSense_sensorSignal[offset];
 980              		.loc 1 1389 0
 981 000a 0026     		mov	r6, #0
1387:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 982              		.loc 1 1387 0
 983 000c FF20     		mov	r0, #255
1391:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1392:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1393:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(diplex != 0u)
1394:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1395:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Initialize */
1396:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 i = 0u;
1397:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1398:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make slider x2 as Diplexed */
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 43


1399:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 count <<= 1u;
1400:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 while(1u)
1401:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1402:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
1403:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1404:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (curCtrdStartPos == CapSense_MAXIMUM_CENTROID)
1405:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1406:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Start of centroid */
1407:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = i;
1408:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
1409:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1410:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
1411:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1412:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
1413:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1414:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1415:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else   /* Select biggest and indicate zero start */
1416:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1417:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(curCntrdSize > 0u)
1418:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1419:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* We are at the end of current */
1420:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
1421:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1422:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
1423:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
1424:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1425:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1426:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize = 0u;
1427:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1428:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1429:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1430:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1431:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     i++;
1432:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     curPos = diplex[i];
1433:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(i == count)
1434:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1435:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         break;
1436:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1437:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1438:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1439:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Find biggest centroid if two are same size, last one wins
1440:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                        We are at the end of current */
1441:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize)
1442:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1443:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
1444:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
1445:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1446:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1447:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1448:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1449:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Without diplexing */
1450:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 biggestCtrdSize = count;
1451:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1452:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1453:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1454:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Check centroid size */
1455:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_NON_DIPLEX_SLIDER)
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 44


1456:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
1457:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #else
1458:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(biggestCtrdSize >= 2u)
1459:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_NON_DIPLEX_SLIDER) */
1460:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1461:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
1462:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1463:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)
1464:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (diplex == 0u)
1465:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1466:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = i;
1467:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1468:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             else
1469:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1470:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = diplex[i];
1471:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1472:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #elif (CapSense_IS_DIPLEX_SLIDER)
1473:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curPos = diplex[i];
1474:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1475:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Looking for greater element within centroid */
1476:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
1477:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1478:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(startOfSlider[curPos] > temp)
1479:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1480:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 maximum = i;
1481:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 temp = startOfSlider[curPos];
1482:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1483:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1484:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1485:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1486:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1487:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for (i = 0u; i < count; i++)
 984              		.loc 1 1487 0
 985 000e 0023     		mov	r3, #0
 986 0010 09E0     		b	.L81
 987              	.LVL116:
 988              	.L83:
1488:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1489:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Looking for greater element within centroid */
1490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
 989              		.loc 1 1490 0
 990 0012 5C00     		lsl	r4, r3, #1
 991 0014 645B     		ldrh	r4, [r4, r5]
 992 0016 9442     		cmp	r4, r2
 993 0018 03D9     		bls	.L82
1491:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1492:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(startOfSlider[i] > temp)
 994              		.loc 1 1492 0
 995 001a A642     		cmp	r6, r4
 996 001c 01D2     		bcs	.L82
1493:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1494:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         maximum = i;
1495:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         temp = startOfSlider[i];
 997              		.loc 1 1495 0
 998 001e 261C     		mov	r6, r4
 999              	.LVL117:
1494:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         temp = startOfSlider[i];
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 45


 1000              		.loc 1 1494 0
 1001 0020 181C     		mov	r0, r3
 1002              	.LVL118:
 1003              	.L82:
1487:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 1004              		.loc 1 1487 0 discriminator 2
 1005 0022 0133     		add	r3, r3, #1
 1006              	.LVL119:
 1007 0024 DBB2     		uxtb	r3, r3
 1008              	.LVL120:
 1009              	.L81:
1487:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 1010              		.loc 1 1487 0 is_stmt 0 discriminator 1
 1011 0026 8B42     		cmp	r3, r1
 1012 0028 F3D3     		bcc	.L83
1496:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1497:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1498:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1499:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1500:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (maximum);
1501:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1013              		.loc 1 1501 0 is_stmt 1
 1014              		@ sp needed
 1015              	.LVL121:
 1016              	.LVL122:
 1017 002a 70BD     		pop	{r4, r5, r6, pc}
 1018              	.L86:
 1019              		.align	2
 1020              	.L85:
 1021 002c 00000000 		.word	.LANCHOR0
 1022              		.cfi_endproc
 1023              	.LFE56:
 1024              		.size	CapSense_FindMaximum, .-CapSense_FindMaximum
 1025              		.global	__aeabi_idiv
 1026              		.section	.text.CapSense_CalcCentroid,"ax",%progbits
 1027              		.align	2
 1028              		.global	CapSense_CalcCentroid
 1029              		.code	16
 1030              		.thumb_func
 1031              		.type	CapSense_CalcCentroid, %function
 1032              	CapSense_CalcCentroid:
 1033              	.LFB57:
1502:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1503:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1504:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1505:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_CalcCentroid
1506:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1507:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1508:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1509:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value calculated according to the index of the maximum element and API
1510:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution.
1511:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1512:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1513:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  type:  widget type.
1514:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:  pointer to diplex table.
1515:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
1516:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:   Start index of centroid in CapSense_sensorSignal[] array.
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 46


1517:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:    Number of elements within centroid.
1518:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
1519:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  API resolution.
1520:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  noiseThreshold:  Noise threshold.
1521:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1522:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1523:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the slider.
1524:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1525:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1526:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1527:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1528:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1529:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u)
1530:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset,
1531:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint32 resolution, uint16 noiseThreshold)
1532:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #else
1533:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset,
1534:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint16 resolution, uint16 noiseThreshold)
1535:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u) */
1536:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1034              		.loc 1 1536 0
 1035              		.cfi_startproc
 1036              	.LVL123:
 1037 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1038              		.cfi_def_cfa_offset 20
 1039              		.cfi_offset 4, -20
 1040              		.cfi_offset 5, -16
 1041              		.cfi_offset 6, -12
 1042              		.cfi_offset 7, -8
 1043              		.cfi_offset 14, -4
 1044 0002 4746     		mov	r7, r8
 1045 0004 80B4     		push	{r7}
 1046              		.cfi_def_cfa_offset 24
 1047              		.cfi_offset 8, -24
 1048 0006 82B0     		sub	sp, sp, #8
 1049              		.cfi_def_cfa_offset 32
 1050 0008 041C     		mov	r4, r0
 1051 000a 0193     		str	r3, [sp, #4]
 1052 000c 08AB     		add	r3, sp, #32
 1053              	.LVL124:
 1054 000e 1888     		ldrh	r0, [r3]
 1055              	.LVL125:
1537:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1538:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posPrev;
1539:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posNext;
1540:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1541:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1542:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Helps during centroid calculation */
1543:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1544:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             static uint16 CapSense_centroid[3u];
1545:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1546:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1547:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1548:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 pos;
1549:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1550:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1551:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 position;
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 47


1552:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 numerator;
1553:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         int32 denominator;
1554:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1555:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16  *startOfSlider = &CapSense_sensorSignal[offset];
 1056              		.loc 1 1555 0
 1057 0010 4900     		lsl	r1, r1, #1
 1058              	.LVL126:
 1059 0012 304B     		ldr	r3, .L97
 1060              	.LVL127:
 1061 0014 1433     		add	r3, r3, #20
 1062 0016 5918     		add	r1, r3, r1
 1063              	.LVL128:
1556:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1557:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1558:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             posPrev = 0u;
1559:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1560:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1561:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1562:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(type == CapSense_TYPE_RADIAL_SLIDER)
1563:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1564:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1565:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1566:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1567:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1568:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
1569:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1570:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for ROTARY Slider */
1571:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1572:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1573:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[count - 1u];
1574:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[1u];
1575:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1576:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1577:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1578:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1579:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[0u];
1580:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1581:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1582:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1583:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1584:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[maximum + 1u];
1585:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1586:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1587:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1588:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1589:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1590:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1591:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1592:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1593:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1594:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1595:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)
1596:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1597:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(diplex == 0u)
1598:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1599:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = maximum;
1600:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 48


1601:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = maximum + 1u;
1602:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1603:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1604:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1605:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = diplex[maximum];
1606:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1607:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = diplex[maximum + 1u];
1608:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         count <<= 1u;
1609:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1610:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #elif (CapSense_IS_DIPLEX_SLIDER)
1611:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1612:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     pos     = diplex[maximum];
1613:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1614:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = diplex[maximum + 1u];
1615:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     count <<= 1u;
1616:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else
1617:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1618:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (maximum >= 1u)
 1064              		.loc 1 1618 0
 1065 0018 002C     		cmp	r4, #0
 1066 001a 03D0     		beq	.L96
1619:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1620:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
 1067              		.loc 1 1620 0
 1068 001c 631E     		sub	r3, r4, #1
 1069 001e DBB2     		uxtb	r3, r3
 1070 0020 9846     		mov	r8, r3
 1071              	.LVL129:
 1072 0022 01E0     		b	.L88
 1073              	.LVL130:
 1074              	.L96:
1558:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
 1075              		.loc 1 1558 0
 1076 0024 0023     		mov	r3, #0
 1077 0026 9846     		mov	r8, r3
 1078              	.LVL131:
 1079              	.L88:
1621:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1622:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = maximum + 1u;
 1080              		.loc 1 1622 0
 1081 0028 661C     		add	r6, r4, #1
 1082 002a F5B2     		uxtb	r5, r6
 1083              	.LVL132:
1623:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1624:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1625:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1626:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER)
1627:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[pos];
1628:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else
1629:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
 1084              		.loc 1 1629 0
 1085 002c 6700     		lsl	r7, r4, #1
 1086 002e 7F5A     		ldrh	r7, [r7, r1]
 1087 0030 BC46     		mov	ip, r7
 1088 0032 284F     		ldr	r7, .L97
 1089 0034 6346     		mov	r3, ip
 1090 0036 7B85     		strh	r3, [r7, #42]
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 49


1630:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1631:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1632:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for LINEAR Slider */
1633:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
 1091              		.loc 1 1633 0
 1092 0038 002C     		cmp	r4, #0
 1093 003a 05D1     		bne	.L89
1634:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1635:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = 0u;
 1094              		.loc 1 1635 0
 1095 003c 0023     		mov	r3, #0
 1096 003e 3B85     		strh	r3, [r7, #40]
1636:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
 1097              		.loc 1 1636 0
 1098 0040 6B00     		lsl	r3, r5, #1
 1099 0042 5B5A     		ldrh	r3, [r3, r1]
 1100 0044 BB85     		strh	r3, [r7, #44]
 1101 0046 12E0     		b	.L90
 1102              	.L89:
1637:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1638:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
 1103              		.loc 1 1638 0
 1104 0048 013A     		sub	r2, r2, #1
 1105              	.LVL133:
 1106 004a 9442     		cmp	r4, r2
 1107 004c 07D1     		bne	.L91
1639:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1640:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
 1108              		.loc 1 1640 0
 1109 004e 4346     		mov	r3, r8
 1110 0050 5B00     		lsl	r3, r3, #1
 1111 0052 5A5A     		ldrh	r2, [r3, r1]
 1112 0054 1F4B     		ldr	r3, .L97
 1113 0056 1A85     		strh	r2, [r3, #40]
1641:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = 0u;
 1114              		.loc 1 1641 0
 1115 0058 0022     		mov	r2, #0
 1116 005a 9A85     		strh	r2, [r3, #44]
 1117 005c 07E0     		b	.L90
 1118              	.L91:
1642:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1643:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1644:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1645:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
 1119              		.loc 1 1645 0
 1120 005e 4346     		mov	r3, r8
 1121 0060 5B00     		lsl	r3, r3, #1
 1122 0062 5B5A     		ldrh	r3, [r3, r1]
 1123 0064 1B4A     		ldr	r2, .L97
 1124 0066 1385     		strh	r3, [r2, #40]
1646:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
 1125              		.loc 1 1646 0
 1126 0068 6B00     		lsl	r3, r5, #1
 1127 006a 5B5A     		ldrh	r3, [r3, r1]
 1128 006c 9385     		strh	r3, [r2, #44]
 1129              	.L90:
1647:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 50


1648:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_TOTAL_TOUCH_PADS_BASIC_C
1649:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1650:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1651:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1652:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1653:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1654:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1655:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_PREV] > noiseThreshold)
 1130              		.loc 1 1655 0
 1131 006e 194B     		ldr	r3, .L97
 1132 0070 1B8D     		ldrh	r3, [r3, #40]
 1133 0072 8342     		cmp	r3, r0
 1134 0074 03D9     		bls	.L92
1656:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1657:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] -= noiseThreshold;
 1135              		.loc 1 1657 0
 1136 0076 1B1A     		sub	r3, r3, r0
 1137 0078 164A     		ldr	r2, .L97
 1138 007a 1385     		strh	r3, [r2, #40]
 1139 007c 02E0     		b	.L93
 1140              	.L92:
1658:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1659:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1660:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1661:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] = 0u;
 1141              		.loc 1 1661 0
 1142 007e 0022     		mov	r2, #0
 1143 0080 144B     		ldr	r3, .L97
 1144 0082 1A85     		strh	r2, [r3, #40]
 1145              	.L93:
1662:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1663:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1664:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Maximum always greater than fingerThreshold, so greater than noiseThreshold */
1665:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_centroid[CapSense_POS] -= noiseThreshold;
 1146              		.loc 1 1665 0
 1147 0084 134A     		ldr	r2, .L97
 1148 0086 538D     		ldrh	r3, [r2, #42]
 1149 0088 1B1A     		sub	r3, r3, r0
 1150 008a 9BB2     		uxth	r3, r3
 1151 008c 5385     		strh	r3, [r2, #42]
1666:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1667:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1668:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_NEXT] > noiseThreshold)
 1152              		.loc 1 1668 0
 1153 008e 928D     		ldrh	r2, [r2, #44]
 1154 0090 8242     		cmp	r2, r0
 1155 0092 03D9     		bls	.L94
1669:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1670:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] -= noiseThreshold;
 1156              		.loc 1 1670 0
 1157 0094 101A     		sub	r0, r2, r0
 1158 0096 0F4A     		ldr	r2, .L97
 1159 0098 9085     		strh	r0, [r2, #44]
 1160 009a 02E0     		b	.L95
 1161              	.L94:
1671:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1672:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 51


1673:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1674:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] = 0u;
 1162              		.loc 1 1674 0
 1163 009c 0021     		mov	r1, #0
 1164              	.LVL134:
 1165 009e 0D4A     		ldr	r2, .L97
 1166 00a0 9185     		strh	r1, [r2, #44]
 1167              	.L95:
1675:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1676:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1677:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1678:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 - Si-1 */
1679:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         numerator = (uint32) CapSense_centroid[CapSense_POS_NEXT] -
 1168              		.loc 1 1679 0
 1169 00a2 0C49     		ldr	r1, .L97
 1170 00a4 8A8D     		ldrh	r2, [r1, #44]
1680:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     (uint32) CapSense_centroid[CapSense_POS_PREV];
 1171              		.loc 1 1680 0
 1172 00a6 098D     		ldrh	r1, [r1, #40]
1679:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     (uint32) CapSense_centroid[CapSense_POS_PREV];
 1173              		.loc 1 1679 0
 1174 00a8 501A     		sub	r0, r2, r1
 1175              	.LVL135:
1681:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1682:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 + Si + Si-1 */
1683:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (int32) CapSense_centroid[CapSense_POS_PREV] +
 1176              		.loc 1 1683 0
 1177 00aa C918     		add	r1, r1, r3
 1178 00ac 8918     		add	r1, r1, r2
 1179              	.LVL136:
1684:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS] +
1685:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS_NEXT];
1686:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1687:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* (numerator/denominator) + maximum */
1688:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
 1180              		.loc 1 1688 0
 1181 00ae 0002     		lsl	r0, r0, #8
 1182              	.LVL137:
 1183 00b0 FFF7FEFF 		bl	__aeabi_idiv
 1184              	.LVL138:
 1185 00b4 2402     		lsl	r4, r4, #8
 1186 00b6 0419     		add	r4, r0, r4
 1187              	.LVL139:
1689:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1690:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if(CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1691:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Only required for RADIAL Slider */
1692:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(denominator < 0)
1693:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1694:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
1695:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1696:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1697:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1698:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator *= (int16)resolution;
 1188              		.loc 1 1698 0
 1189 00b8 6B46     		mov	r3, sp
 1190 00ba 0420     		mov	r0, #4
 1191 00bc 185E     		ldrsh	r0, [r3, r0]
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 52


 1192 00be 6043     		mul	r0, r4
 1193              	.LVL140:
1699:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1700:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Round result and put it to uint8 */
1701:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + CapSense_CENTROID_ROUND_VALUE));
 1194              		.loc 1 1701 0
 1195 00c0 FE23     		mov	r3, #254
 1196 00c2 DB01     		lsl	r3, r3, #7
 1197 00c4 9C46     		mov	ip, r3
 1198 00c6 6044     		add	r0, r0, ip
 1199              	.LVL141:
 1200 00c8 000C     		lsr	r0, r0, #16
 1201              	.LVL142:
 1202 00ca C0B2     		uxtb	r0, r0
 1203              	.LVL143:
1702:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1703:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
1704:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1204              		.loc 1 1704 0
 1205 00cc 02B0     		add	sp, sp, #8
 1206              	.LVL144:
 1207              		@ sp needed
 1208              	.LVL145:
 1209              	.LVL146:
 1210              	.LVL147:
 1211              	.LVL148:
 1212 00ce 04BC     		pop	{r2}
 1213 00d0 9046     		mov	r8, r2
 1214 00d2 F0BD     		pop	{r4, r5, r6, r7, pc}
 1215              	.L98:
 1216              		.align	2
 1217              	.L97:
 1218 00d4 00000000 		.word	.LANCHOR0
 1219              		.cfi_endproc
 1220              	.LFE57:
 1221              		.size	CapSense_CalcCentroid, .-CapSense_CalcCentroid
 1222              		.section	.text.CapSense_GetCentroidPos,"ax",%progbits
 1223              		.align	2
 1224              		.global	CapSense_GetCentroidPos
 1225              		.code	16
 1226              		.thumb_func
 1227              		.type	CapSense_GetCentroidPos, %function
 1228              	CapSense_GetCentroidPos:
 1229              	.LFB58:
1705:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1706:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1707:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1708:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1709:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1710:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetCentroidPos
1711:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1712:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1713:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1714:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1715:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1716:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1717:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 53


1718:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1719:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1720:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1721:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1722:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__LS           5
1723:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1724:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1725:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the linear slider.
1726:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1727:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1728:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1729:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1730:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1731:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1732:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1733:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1734:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1735:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1736:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1737:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1738:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1739:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1740:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1741:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1742:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1743:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1744:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_GetCentroidPos(uint32 widget)
1745:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1230              		.loc 1 1745 0
 1231              		.cfi_startproc
 1232              	.LVL149:
 1233 0000 00B5     		push	{lr}
 1234              		.cfi_def_cfa_offset 4
 1235              		.cfi_offset 14, -4
 1236 0002 83B0     		sub	sp, sp, #12
 1237              		.cfi_def_cfa_offset 16
 1238              	.LVL150:
1746:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1747:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             const uint8 *diplex;
1748:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1749:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1750:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1751:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1752:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1753:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
1754:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1755:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1756:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1757:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1758:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1759:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1760:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1761:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1762:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1763:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1764:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1765:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 54


1766:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
1767:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1768:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1769:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(widget < CapSense_TOTAL_DIPLEXED_SLIDERS_COUNT)
1770:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1771:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 maximum = CapSense_diplexTable[widget];
1772:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = &CapSense_diplexTable[maximum];
1773:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1774:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1775:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1776:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = 0u;
1777:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1778:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1779:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1780:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within centroid */
1781:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1782:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint16)CapSense_fingerThreshold[widget],
1783:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1784:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint16)CapSense_fingerThreshold[widget])
 1239              		.loc 1 1784 0
 1240 0004 0020     		mov	r0, #0
 1241              	.LVL151:
 1242 0006 0521     		mov	r1, #5
 1243 0008 6422     		mov	r2, #100
 1244 000a FFF7FEFF 		bl	CapSense_FindMaximum
 1245              	.LVL152:
1785:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1786:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1787:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != 0xFFu)
 1246              		.loc 1 1787 0
 1247 000e FF28     		cmp	r0, #255
 1248 0010 09D0     		beq	.L101
1788:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1789:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
1790:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum,
 1249              		.loc 1 1790 0
 1250 0012 1E23     		mov	r3, #30
 1251 0014 0093     		str	r3, [sp]
 1252 0016 0021     		mov	r1, #0
 1253 0018 0522     		mov	r2, #5
 1254 001a C823     		mov	r3, #200
 1255 001c 5B01     		lsl	r3, r3, #5
 1256 001e FFF7FEFF 		bl	CapSense_CalcCentroid
 1257              	.LVL153:
 1258 0022 80B2     		uxth	r0, r0
 1259              	.LVL154:
 1260 0024 00E0     		b	.L100
 1261              	.LVL155:
 1262              	.L101:
1791:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1792:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1793:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1794:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1795:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1796:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1797:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
1798:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 55


1799:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1800:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1801:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1802:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
1803:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1804:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1805:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1806:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1807:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1808:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1809:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) ||
1810:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1811:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1812:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
1813:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1814:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1815:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1816:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
1817:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1818:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1819:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1820:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
1821:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1822:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1823:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1824:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
1825:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1826:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
1827:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1828:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1829:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
1830:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1831:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1832:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] =
1833:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
1834:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1835:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1836:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /*(0u != (CapSense_MEDIAN_FILTER &
1837:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *         CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1838:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1839:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1840:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if(0u!=(CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1841:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
1842:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1843:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1844:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
1845:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1846:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1847:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]=CapSense_posFiltersData[posInd
1848:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1849:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1850:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
1851:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1852:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1853:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1854:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1855:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 56


1856:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1857:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
1858:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1859:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1860:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1861:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER & \
1862:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1863:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1864:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1865:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1866:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
1867:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1868:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
1869:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1870:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1871:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1872:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER & \
1873:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1874:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1875:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1876:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1877:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
1878:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1879:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position,
1880:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1881:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1882:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1883:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER & \
1884:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1885:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1886:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1887:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1888:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1889:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1890:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1891:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1892:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1893:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum wasn't found */
1894:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
 1263              		.loc 1 1894 0
 1264 0026 0148     		ldr	r0, .L102
 1265              	.LVL156:
 1266              	.L100:
1895:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1896:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if(0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1897:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
1898:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1899:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1900:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
1901:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1902:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1903:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1904:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1905:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1906:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
1907:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1267              		.loc 1 1907 0
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 57


 1268 0028 03B0     		add	sp, sp, #12
 1269              		@ sp needed
 1270 002a 00BD     		pop	{pc}
 1271              	.L103:
 1272              		.align	2
 1273              	.L102:
 1274 002c FFFF0000 		.word	65535
 1275              		.cfi_endproc
 1276              	.LFE58:
 1277              		.size	CapSense_GetCentroidPos, .-CapSense_GetCentroidPos
 1278              		.section	.text.CapSense_GetRadialCentroidPos,"ax",%progbits
 1279              		.align	2
 1280              		.global	CapSense_GetRadialCentroidPos
 1281              		.code	16
 1282              		.thumb_func
 1283              		.type	CapSense_GetRadialCentroidPos, %function
 1284              	CapSense_GetRadialCentroidPos:
 1285              	.LFB59:
1908:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
1909:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1910:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1911:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1912:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1913:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetRadialCentroidPos
1914:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1915:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1916:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1917:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1918:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1919:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1920:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1921:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1922:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1923:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1924:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every radial slider widget there are defines in this format:
1925:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__RS           5
1926:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1927:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1928:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the radial slider.
1929:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1930:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1931:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
1932:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1933:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1934:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1935:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1936:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF.
1937:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1938:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1939:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1940:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1941:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1942:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1943:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1944:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1945:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1946:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 58


1947:.\Generated_Source\PSoC4/CapSense_CSHL.c ****      uint16 CapSense_GetRadialCentroidPos(uint32 widget)
1948:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1286              		.loc 1 1948 0
 1287              		.cfi_startproc
 1288              	.LVL157:
 1289 0000 00B5     		push	{lr}
 1290              		.cfi_def_cfa_offset 4
 1291              		.cfi_offset 14, -4
 1292 0002 83B0     		sub	sp, sp, #12
 1293              		.cfi_def_cfa_offset 16
 1294              	.LVL158:
1949:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1950:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1951:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1952:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
1953:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1954:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1955:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1956:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1957:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1958:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1959:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1960:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1961:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1962:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1963:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1964:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
1965:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
1966:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1967:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within centroid */
1968:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1969:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint16)CapSense_fingerThreshold[widget],
1970:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1971:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint16)CapSense_fingerThreshold[widget])
 1295              		.loc 1 1971 0
 1296 0004 0020     		mov	r0, #0
 1297              	.LVL159:
 1298 0006 0521     		mov	r1, #5
 1299 0008 6422     		mov	r2, #100
 1300 000a FFF7FEFF 		bl	CapSense_FindMaximum
 1301              	.LVL160:
1972:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1973:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1974:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != CapSense_MAXIMUM_CENTROID)
 1302              		.loc 1 1974 0
 1303 000e FF28     		cmp	r0, #255
 1304 0010 09D0     		beq	.L106
1975:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1976:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
1977:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum,
 1305              		.loc 1 1977 0
 1306 0012 1E23     		mov	r3, #30
 1307 0014 0093     		str	r3, [sp]
 1308 0016 0021     		mov	r1, #0
 1309 0018 0522     		mov	r2, #5
 1310 001a C823     		mov	r3, #200
 1311 001c 5B01     		lsl	r3, r3, #5
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 59


 1312 001e FFF7FEFF 		bl	CapSense_CalcCentroid
 1313              	.LVL161:
 1314 0022 80B2     		uxth	r0, r0
 1315              	.LVL162:
 1316 0024 00E0     		b	.L105
 1317              	.LVL163:
 1318              	.L106:
1978:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1979:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1980:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1981:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this Radial slider has enabled filters */
1982:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1983:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1984:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
1985:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1986:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1987:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1988:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1989:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
1990:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1991:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1992:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1993:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1994:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1995:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1996:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))  ||
1997:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1998:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1999:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
2000:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2001:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
2002:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
2003:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
2004:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
2005:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2006:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2007:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
2008:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2009:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
2010:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2011:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
2012:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2013:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2014:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2015:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2016:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
2017:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2018:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2019:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] =
2020:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                               CapSense_posFiltersDa
2021:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2022:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2023:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_MEDIAN_FILTER &
2024:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2025:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2026:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2027:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_AVERAGING_FILTER & \
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 60


2028:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2029:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2030:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2031:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2032:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
2033:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2034:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2035:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]= CapSense_posFiltersData[posIn
2036:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2037:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2038:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2039:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2040:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2041:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2042:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2043:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2044:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2045:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
2046:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2047:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2048:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2049:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER &
2050:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2051:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2052:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2053:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2054:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
2055:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2056:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
2057:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2058:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2059:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2060:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER &
2061:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2062:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2063:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2064:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2065:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2066:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2067:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position,
2068:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                          CapSense_posFiltersData[po
2069:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2070:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2071:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER &
2072:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2073:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2074:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2075:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2076:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2077:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2078:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2079:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2080:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2081:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum was not found */
2082:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
 1319              		.loc 1 2082 0
 1320 0026 0148     		ldr	r0, .L107
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 61


 1321              	.LVL164:
 1322              	.L105:
2083:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2084:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
2085:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
2086:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2087:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2088:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2089:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2090:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2091:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2092:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2093:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
2094:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1323              		.loc 1 2094 0
 1324 0028 03B0     		add	sp, sp, #12
 1325              		@ sp needed
 1326 002a 00BD     		pop	{pc}
 1327              	.L108:
 1328              		.align	2
 1329              	.L107:
 1330 002c FFFF0000 		.word	65535
 1331              		.cfi_endproc
 1332              	.LFE59:
 1333              		.size	CapSense_GetRadialCentroidPos, .-CapSense_GetRadialCentroidPos
 1334              		.section	.text.CapSense_GetWidgetNumber,"ax",%progbits
 1335              		.align	2
 1336              		.global	CapSense_GetWidgetNumber
 1337              		.code	16
 1338              		.thumb_func
 1339              		.type	CapSense_GetWidgetNumber, %function
 1340              	CapSense_GetWidgetNumber:
 1341              	.LFB60:
2095:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
2096:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2097:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2098:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u)
2099:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2100:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetTouchCentroidPos
2101:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2102:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2103:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2104:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If a finger is present on a touchpad, this function calculates the X and Y
2105:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  position of the finger by calculating the centroids within touchpad specified
2106:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  range. The X and Y positions are calculated according to the API resolutions set in the
2107:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense customizer. Returns 1 if a finger is on the touchpad.
2108:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The position filter is applied to the result if enabled.
2109:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This function is available only if a touch pad is defined by the CapSense
2110:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  customizer.
2111:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2112:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2113:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
2114:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every touchpad widget there are defines in this format:
2115:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__TP            5
2116:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2117:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     Pointer to the array of two uint16 elements, where result
2118:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result of calculation of X and Y position are stored.
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 62


2119:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[0u]  - position of X
2120:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[1u]  - position of Y
2121:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2122:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2123:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a 1 if a finger is on the touch pad, 0 - if not.
2124:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2125:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2126:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2127:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2128:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2129:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   There are no checks of the widget type argument provided to this function.
2130:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   The unproper widget type provided will cause unexpected position
2131:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   calculations.
2132:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2133:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2134:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetTouchCentroidPos(uint32 widget, uint16* pos)
2135:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2136:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2137:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posXIndex;
2138:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posYIndex;
2139:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
2140:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
2141:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2142:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2143:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2144:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2145:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint16 tempPos;
2146:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2147:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2148:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                */
2149:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2150:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxX;
2151:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxY;
2152:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posX;
2153:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posY;
2154:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 touch = 0u;
2155:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
2156:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
2157:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2158:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within X centroid */
2159:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
2160:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget], 0u);
2161:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
2162:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget]);
2163:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2164:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2165:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (MaxX != CapSense_MAXIMUM_CENTROID)
2166:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2167:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             offset = CapSense_rawDataIndex[widget + 1u];
2168:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             count = CapSense_numberOfSensors[widget + 1u];
2169:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2170:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find Maximum within Y centroid */
2171:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_DIPLEX_SLIDER)
2172:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u], 0
2173:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #else
2174:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u]);
2175:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_DIPLEX_SLIDER) */
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 63


2176:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2177:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (MaxY != CapSense_MAXIMUM_CENTROID)
2178:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2179:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* X and Y maximums are found = true touch */
2180:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 touch = 1u;
2181:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2182:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate Y centroid */
2183:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 posY = CapSense_CalcCentroid(MaxY, offset, count,
2184:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget + 1u], CapSense_noiseThreshold[widget + 1u
2185:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2186:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate X centroid */
2187:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 offset = CapSense_rawDataIndex[widget];
2188:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 count = CapSense_numberOfSensors[widget];
2189:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2190:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 posX = CapSense_CalcCentroid(MaxX, offset, count,
2191:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget],CapSense_noiseThreshold[widget]);
2192:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2193:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2194:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Check if this TP has enabled filters */
2195:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
2196:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2197:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Calculate position to store filters data */
2198:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posXIndex  = firstTimeIndex + 1u;
2199:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posYIndex  = CapSense_posFiltersData[widget + 1u];
2200:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2201:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (0u == CapSense_posFiltersData[firstTimeIndex])
2202:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2203:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Init filters */
2204:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posXIndex] = posX;
2205:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posYIndex] = posY;
2206:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2207:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if((0u != (CapSense_MEDIAN_FILTER & \
2208:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK))|| \
2209:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 (0u != (CapSense_AVERAGING_FILTER & \
2210:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2211:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2212:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) ||
2213:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
2214:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2215:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = posX;
2216:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = posY;
2217:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2218:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
2219:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2220:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *    (0u != (CapSense_AVERAGING_FILTER & \
2221:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *            CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2222:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2223:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2224:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[firstTimeIndex] = 1u;
2225:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2226:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
2227:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2228:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Do filtering */
2229:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2230:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2231:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2232:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 64


2233:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_MedianFilter(posX,
2234:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2235:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2236:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] =
2237:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2238:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2239:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2240:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2241:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_MedianFilter(posY,
2242:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2243:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2244:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] =
2245:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2246:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2247:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2248:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2249:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_MEDIAN_FILTER & \
2250:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2251:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2252:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2253:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if(0u !=(CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_M
2254:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2255:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2256:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2257:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_AveragingFilter(posX,
2258:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2259:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2260:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] =
2261:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2262:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2263:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2264:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2265:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_AveragingFilter(posY,
2266:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2267:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2268:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] =
2269:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2270:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2271:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2272:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2273:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2274:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2275:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2276:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2277:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR2_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2278:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2279:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2280:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR2Filter(posX,
2281:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                            CapSense_posFiltersData[
2282:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2283:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2284:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR2Filter(posY,
2285:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2286:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2287:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2288:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2289:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR2_FILTER & \
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 65


2290:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2291:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2292:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2293:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR4_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2294:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
2295:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2296:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR4Filter((uint16)posX,
2297:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2298:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2299:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2300:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR4Filter((uint16)posY,
2301:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2302:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2303:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2304:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2305:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR4_FILTER & \
2306:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2307:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2308:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2309:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_JITTER_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2310:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2311:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     {
2312:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posX = (uint8) CapSense_JitterFilter(posX,
2313:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2314:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posXIndex] = posX;
2315:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2316:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posY = (uint8) CapSense_JitterFilter(posY,
2317:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2318:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posYIndex] = posY;
2319:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     }
2320:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_JITTER_FILTER & \
2321:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2322:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2323:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2324:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2325:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2326:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2327:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Save positions */
2328:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = posX;
2329:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = posY;
2330:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2331:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2332:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2333:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2334:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(touch == 0u)
2335:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2336:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
2337:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if ((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2338:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2339:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2340:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2341:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2342:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2343:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2344:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (touch);
2345:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2346:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u) */
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 66


2347:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2348:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2349:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2350:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2351:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) )
2352:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2353:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_MedianFilter
2354:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2355:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2356:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2357:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Median filter function.
2358:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The median filter looks at the three most recent samples and reports the
2359:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  median value.
2360:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2361:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2362:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2363:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2364:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2365:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2366:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2367:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2368:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2369:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2370:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2371:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2372:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2373:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2374:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2375:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2376:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
2377:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2378:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 tmp;
2379:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2380:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
2381:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2382:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             tmp = x2;
2383:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x1;
2384:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x1 = tmp;
2385:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2386:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2387:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x2 > x3)
2388:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2389:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x3;
2390:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2391:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2392:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((x1 > x2) ? x1 : x2);
2393:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2394:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2395:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2396:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) ) */
2397:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2398:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2399:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) || \
2400:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER)) )
2401:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2402:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_AveragingFilter
2403:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 67


2404:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2405:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2406:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Averaging filter function.
2407:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The averaging filter looks at the three most recent samples of a position and
2408:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  reports the averaging value.
2409:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2410:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2411:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2412:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2413:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2414:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2415:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2416:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2417:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2418:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2419:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2420:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2421:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2422:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2423:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2424:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2425:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_AveragingFilter(uint16 x1, uint16 x2, uint16 x3)
2426:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2427:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp = ((uint32)x1 + (uint32)x2 + (uint32)x3) / 3u;
2428:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2429:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2430:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2431:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) || \
2432:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER) ) */
2433:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2434:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2435:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2436:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2437:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2438:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR2Filter
2439:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2440:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2441:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2442:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/2 filter function. IIR1/2 = 1/2current + 1/2previous.
2443:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2444:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2445:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2446:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2447:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2448:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2449:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2450:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2451:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2452:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2453:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2454:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2455:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2456:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2457:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2458:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR2Filter(uint16 x1, uint16 x2)
2459:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2460:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 68


2461:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2462:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/2 Current Value+ 1/2 Previous Value */
2463:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
2464:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 1u;
2465:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2466:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2467:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2468:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2469:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2470:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2471:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2472:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2473:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2474:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2475:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2476:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR4Filter
2477:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2478:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2479:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2480:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/4 filter function. IIR1/4 = 1/4current + 3/4previous.
2481:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2482:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2483:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2484:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2485:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2486:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2487:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a filtered value.
2488:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2489:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2491:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2492:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2493:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2494:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2495:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2496:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR4Filter(uint16 x1, uint16 x2)
2497:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2498:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2499:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2500:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/4 Current Value + 3/4 Previous Value */
2501:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
2502:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += ((uint32)x2 << 1u);
2503:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 2u;
2504:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2505:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2506:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2507:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2508:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2509:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2510:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2511:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2512:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2513:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) || \
2514:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)))
2515:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2516:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: uint16 CapSense_JitterFilter
2517:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 69


2518:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2519:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2520:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Jitter filter function.
2521:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2522:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2523:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2524:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2525:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2526:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2527:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2528:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2529:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2530:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2531:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2532:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2533:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2534:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2535:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2536:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_JitterFilter(uint16 x1, uint16 x2)
2537:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2538:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
2539:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2540:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x1--;
2541:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2542:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2543:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2544:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (x1 < x2)
2545:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2546:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 x1++;
2547:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2548:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2549:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2550:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return x1;
2551:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2552:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2553:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2554:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2555:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2556:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2557:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2558:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))
2559:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2560:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR8Filter
2561:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2562:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2563:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2564:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/8 filter function. IIR1/8 = 1/8current + 7/8previous.
2565:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2566:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2567:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2568:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2569:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2570:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2571:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2572:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2573:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2574:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 70


2575:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2576:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2577:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2578:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2579:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2580:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2581:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR8Filter(uint16 x1, uint16 x2)
2582:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2583:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2584:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2585:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/8 Current Value + 7/8 Previous Value */
2586:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2587:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 3u) - ((uint32)x2));
2588:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 3u;
2589:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2590:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2591:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2592:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)) */
2593:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2594:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2595:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
2596:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2597:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR16Filter
2598:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2599:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2600:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2601:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/16 filter function. IIR1/16 = 1/16current + 15/16previous.
2602:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2603:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2604:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2605:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2606:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2607:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2608:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2609:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2610:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2611:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2612:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2613:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2614:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2615:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2616:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2617:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2618:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR16Filter(uint16 x1, uint16 x2)
2619:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2620:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2621:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2622:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/16 Current Value + 15/16 Previous Value */
2623:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2624:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 4u) - ((uint32)x2));
2625:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 4u;
2626:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2627:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2628:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2629:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER) */
2630:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2631:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 71


2632:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT))
2633:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2634:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2635:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetMatrixButtonPos
2636:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2637:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2638:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2639:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Function calculates and returns a touch position (column and row) for the matrix
2640:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  button widget.
2641:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2642:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2643:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  widget number;
2644:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     pointer to an array of two uint8, where touch position will be
2645:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *           stored:
2646:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[0] - column position;
2647:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[1] - raw position.
2648:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2649:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2650:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns 1 if row and column sensors of matrix button are active, 0 - in other
2651:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  cases.
2652:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2653:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2654:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_fingerThreshold[ ] - used to store the finger threshold for all widgets.
2655:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_sensorSignal[ ] - used to store a difference between the current value of
2656:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  raw data and a previous value of the baseline.
2657:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2658:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2659:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2660:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2661:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2662:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetMatrixButtonPos(uint32 widget, uint8* pos)
2663:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2664:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
2665:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 retVal = 0u;
2666:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 row_sig_max = 0u;
2667:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 col_sig_max = 0u;
2668:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 row_ind = 0u;
2669:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 col_ind = 0u;
2670:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2671:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(widget) == 1u)
2672:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2673:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2674:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget]; i < (CapSense_rawDataIndex[widget] + \
2675:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget]); i++)
2676:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2677:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > col_sig_max)
2678:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2679:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_ind = i;
2680:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_sig_max = CapSense_sensorSignal[i];
2681:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2682:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2683:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2684:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2685:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget+1u]; i < (CapSense_rawDataIndex[widget+1u] + \
2686:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget+1u]); i++)
2687:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2688:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > row_sig_max)
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 72


2689:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2690:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_ind = i;
2691:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_sig_max = CapSense_sensorSignal[i];
2692:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2693:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2694:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2695:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if((col_sig_max >= CapSense_fingerThreshold[widget]) && \
2696:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                (row_sig_max >= CapSense_fingerThreshold[widget+1u]))
2697:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2698:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = col_ind - CapSense_rawDataIndex[widget];
2699:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = row_ind - CapSense_rawDataIndex[widget+1u];
2700:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 retVal = 1u;
2701:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2702:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2703:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (retVal);
2704:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2705:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2706:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
2707:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2708:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2709:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetWidgetNumber
2710:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2711:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2712:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2713:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor.
2714:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2715:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2716:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2717:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2718:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2719:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2720:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor.
2721:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2722:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2723:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
2724:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2725:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2726:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2727:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2728:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2729:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_GetWidgetNumber(uint32 sensor)
2730:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1342              		.loc 1 2730 0
 1343              		.cfi_startproc
 1344              	.LVL165:
2731:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return((uint32)CapSense_widgetNumber[sensor]);
 1345              		.loc 1 2731 0
 1346 0000 014B     		ldr	r3, .L110
 1347 0002 185C     		ldrb	r0, [r3, r0]
 1348              	.LVL166:
2732:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1349              		.loc 1 2732 0
 1350              		@ sp needed
 1351 0004 7047     		bx	lr
 1352              	.L111:
 1353 0006 C046     		.align	2
 1354              	.L110:
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 73


 1355 0008 00000000 		.word	CapSense_widgetNumber
 1356              		.cfi_endproc
 1357              	.LFE60:
 1358              		.size	CapSense_GetWidgetNumber, .-CapSense_GetWidgetNumber
 1359              		.section	.text.CapSense_GetLowBaselineReset,"ax",%progbits
 1360              		.align	2
 1361              		.global	CapSense_GetLowBaselineReset
 1362              		.code	16
 1363              		.thumb_func
 1364              		.type	CapSense_GetLowBaselineReset, %function
 1365              	CapSense_GetLowBaselineReset:
 1366              	.LFB61:
2733:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2734:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2735:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetLowBaselineReset
2736:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2737:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2738:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2739:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the low baseline reset threshold value for the  sensor.
2740:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2741:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2742:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2743:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2744:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2745:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2746:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  low baseline reset threshold value a sensor.
2747:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2748:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2749:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_lowBaselineReset[]  - stores low baseline reset values.
2750:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2751:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2752:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2753:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2754:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2755:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetLowBaselineReset(uint32 sensor)
2756:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1367              		.loc 1 2756 0
 1368              		.cfi_startproc
 1369              	.LVL167:
2757:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_lowBaselineReset[sensor]);
 1370              		.loc 1 2757 0
 1371 0000 014B     		ldr	r3, .L113
 1372 0002 185C     		ldrb	r0, [r3, r0]
 1373              	.LVL168:
2758:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1374              		.loc 1 2758 0
 1375              		@ sp needed
 1376 0004 7047     		bx	lr
 1377              	.L114:
 1378 0006 C046     		.align	2
 1379              	.L113:
 1380 0008 00000000 		.word	.LANCHOR1
 1381              		.cfi_endproc
 1382              	.LFE61:
 1383              		.size	CapSense_GetLowBaselineReset, .-CapSense_GetLowBaselineReset
 1384              		.section	.text.CapSense_GetDebounce,"ax",%progbits
 1385              		.align	2
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 74


 1386              		.global	CapSense_GetDebounce
 1387              		.code	16
 1388              		.thumb_func
 1389              		.type	CapSense_GetDebounce, %function
 1390              	CapSense_GetDebounce:
 1391              	.LFB62:
2759:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2760:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2761:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDebounce
2762:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2763:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2764:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2765:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns a debounce value.
2766:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2767:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2768:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2769:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2770:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2771:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2772:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Debounce value
2773:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2774:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2775:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounce[]  - stores the debounce value.
2776:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2777:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2778:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2779:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2780:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2781:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetDebounce(uint32 widget)
2782:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1392              		.loc 1 2782 0
 1393              		.cfi_startproc
 1394              	.LVL169:
2783:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_debounce[widget]);
2784:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1395              		.loc 1 2784 0
 1396 0000 0120     		mov	r0, #1
 1397              	.LVL170:
 1398              		@ sp needed
 1399 0002 7047     		bx	lr
 1400              		.cfi_endproc
 1401              	.LFE62:
 1402              		.size	CapSense_GetDebounce, .-CapSense_GetDebounce
 1403              		.global	CapSense_numberOfSensors
 1404              		.global	CapSense_rawDataIndex
 1405              		.global	CapSense_debounce
 1406              		.global	CapSense_hysteresis
 1407              		.global	CapSense_noiseThreshold
 1408              		.global	CapSense_fingerThreshold
 1409              		.global	CapSense_lowBaselineReset
 1410              		.comm	CapSense_lowBaselineResetCnt,5,4
 1411              		.global	CapSense_sensorOnMask
 1412              		.global	CapSense_sensorSignal
 1413              		.global	CapSense_sensorBaselineLow
 1414              		.global	CapSense_sensorBaseline
 1415              		.section	.rodata
 1416              		.align	2
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 75


 1417              		.type	CapSense_numberOfSensors, %object
 1418              		.size	CapSense_numberOfSensors, 1
 1419              	CapSense_numberOfSensors:
 1420 0000 05       		.byte	5
 1421 0001 000000   		.space	3
 1422              		.type	CapSense_rawDataIndex, %object
 1423              		.size	CapSense_rawDataIndex, 1
 1424              	CapSense_rawDataIndex:
 1425 0004 00       		.space	1
 1426 0005 000000   		.space	3
 1427              		.type	CapSense_debounce, %object
 1428              		.size	CapSense_debounce, 1
 1429              	CapSense_debounce:
 1430 0008 01       		.byte	1
 1431 0009 000000   		.space	3
 1432              		.type	CapSense_hysteresis, %object
 1433              		.size	CapSense_hysteresis, 2
 1434              	CapSense_hysteresis:
 1435 000c 0000     		.space	2
 1436 000e 0000     		.space	2
 1437              		.type	CapSense_noiseThreshold, %object
 1438              		.size	CapSense_noiseThreshold, 2
 1439              	CapSense_noiseThreshold:
 1440 0010 1E00     		.short	30
 1441 0012 0000     		.space	2
 1442              		.type	CapSense_fingerThreshold, %object
 1443              		.size	CapSense_fingerThreshold, 2
 1444              	CapSense_fingerThreshold:
 1445 0014 6400     		.short	100
 1446 0016 0000     		.data
 1447              		.align	2
 1448              		.set	.LANCHOR1,. + 0
 1449              		.type	CapSense_lowBaselineReset, %object
 1450              		.size	CapSense_lowBaselineReset, 5
 1451              	CapSense_lowBaselineReset:
 1452 0000 05       		.byte	5
 1453 0001 05       		.byte	5
 1454 0002 05       		.byte	5
 1455 0003 05       		.byte	5
 1456 0004 05       		.byte	5
 1457 0005 000000   		.bss
 1458              		.align	2
 1459              		.set	.LANCHOR0,. + 0
 1460              		.type	CapSense_sensorBaseline, %object
 1461              		.size	CapSense_sensorBaseline, 10
 1462              	CapSense_sensorBaseline:
 1463 0000 00000000 		.space	10
 1463      00000000 
 1463      0000
 1464 000a 0000     		.space	2
 1465              		.type	CapSense_sensorBaselineLow, %object
 1466              		.size	CapSense_sensorBaselineLow, 5
 1467              	CapSense_sensorBaselineLow:
 1468 000c 00000000 		.space	5
 1468      00
 1469 0011 000000   		.space	3
 1470              		.type	CapSense_sensorSignal, %object
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 76


 1471              		.size	CapSense_sensorSignal, 10
 1472              	CapSense_sensorSignal:
 1473 0014 00000000 		.space	10
 1473      00000000 
 1473      0000
 1474 001e 0000     		.space	2
 1475              		.type	CapSense_debounceCounter.5304, %object
 1476              		.size	CapSense_debounceCounter.5304, 1
 1477              	CapSense_debounceCounter.5304:
 1478 0020 00       		.space	1
 1479 0021 000000   		.space	3
 1480              		.type	CapSense_sensorOnMask, %object
 1481              		.size	CapSense_sensorOnMask, 1
 1482              	CapSense_sensorOnMask:
 1483 0024 00       		.space	1
 1484 0025 000000   		.space	3
 1485              		.type	CapSense_centroid.5356, %object
 1486              		.size	CapSense_centroid.5356, 6
 1487              	CapSense_centroid.5356:
 1488 0028 00000000 		.space	6
 1488      0000
 1489 002e 0000     		.text
 1490              	.Letext0:
 1491              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1492              		.file 3 ".\\Generated_Source\\PSoC4\\CapSense.h"
 1493              		.file 4 ".\\Generated_Source\\PSoC4\\CapSense_PVT.h"
 1494              		.section	.debug_info,"",%progbits
 1495              	.Ldebug_info0:
 1496 0000 4B0C0000 		.4byte	0xc4b
 1497 0004 0400     		.2byte	0x4
 1498 0006 00000000 		.4byte	.Ldebug_abbrev0
 1499 000a 04       		.byte	0x4
 1500 000b 01       		.uleb128 0x1
 1501 000c BE020000 		.4byte	.LASF95
 1502 0010 01       		.byte	0x1
 1503 0011 C4060000 		.4byte	.LASF96
 1504 0015 30060000 		.4byte	.LASF97
 1505 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1506 001d 00000000 		.4byte	0
 1507 0021 00000000 		.4byte	.Ldebug_line0
 1508 0025 02       		.uleb128 0x2
 1509 0026 01       		.byte	0x1
 1510 0027 06       		.byte	0x6
 1511 0028 BF030000 		.4byte	.LASF0
 1512 002c 02       		.uleb128 0x2
 1513 002d 01       		.byte	0x1
 1514 002e 08       		.byte	0x8
 1515 002f 8E030000 		.4byte	.LASF1
 1516 0033 02       		.uleb128 0x2
 1517 0034 02       		.byte	0x2
 1518 0035 05       		.byte	0x5
 1519 0036 89000000 		.4byte	.LASF2
 1520 003a 02       		.uleb128 0x2
 1521 003b 02       		.byte	0x2
 1522 003c 07       		.byte	0x7
 1523 003d 89050000 		.4byte	.LASF3
 1524 0041 02       		.uleb128 0x2
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 77


 1525 0042 04       		.byte	0x4
 1526 0043 05       		.byte	0x5
 1527 0044 25020000 		.4byte	.LASF4
 1528 0048 02       		.uleb128 0x2
 1529 0049 04       		.byte	0x4
 1530 004a 07       		.byte	0x7
 1531 004b C6050000 		.4byte	.LASF5
 1532 004f 02       		.uleb128 0x2
 1533 0050 08       		.byte	0x8
 1534 0051 05       		.byte	0x5
 1535 0052 17020000 		.4byte	.LASF6
 1536 0056 02       		.uleb128 0x2
 1537 0057 08       		.byte	0x8
 1538 0058 07       		.byte	0x7
 1539 0059 CB030000 		.4byte	.LASF7
 1540 005d 03       		.uleb128 0x3
 1541 005e 04       		.byte	0x4
 1542 005f 05       		.byte	0x5
 1543 0060 696E7400 		.ascii	"int\000"
 1544 0064 02       		.uleb128 0x2
 1545 0065 04       		.byte	0x4
 1546 0066 07       		.byte	0x7
 1547 0067 E2030000 		.4byte	.LASF8
 1548 006b 04       		.uleb128 0x4
 1549 006c A4010000 		.4byte	.LASF9
 1550 0070 02       		.byte	0x2
 1551 0071 C2       		.byte	0xc2
 1552 0072 2C000000 		.4byte	0x2c
 1553 0076 04       		.uleb128 0x4
 1554 0077 37010000 		.4byte	.LASF10
 1555 007b 02       		.byte	0x2
 1556 007c C3       		.byte	0xc3
 1557 007d 3A000000 		.4byte	0x3a
 1558 0081 04       		.uleb128 0x4
 1559 0082 BF050000 		.4byte	.LASF11
 1560 0086 02       		.byte	0x2
 1561 0087 C4       		.byte	0xc4
 1562 0088 48000000 		.4byte	0x48
 1563 008c 04       		.uleb128 0x4
 1564 008d F1010000 		.4byte	.LASF12
 1565 0091 02       		.byte	0x2
 1566 0092 C6       		.byte	0xc6
 1567 0093 33000000 		.4byte	0x33
 1568 0097 04       		.uleb128 0x4
 1569 0098 D8050000 		.4byte	.LASF13
 1570 009c 02       		.byte	0x2
 1571 009d C7       		.byte	0xc7
 1572 009e 41000000 		.4byte	0x41
 1573 00a2 02       		.uleb128 0x2
 1574 00a3 04       		.byte	0x4
 1575 00a4 04       		.byte	0x4
 1576 00a5 0C020000 		.4byte	.LASF14
 1577 00a9 02       		.uleb128 0x2
 1578 00aa 08       		.byte	0x8
 1579 00ab 04       		.byte	0x4
 1580 00ac 4A070000 		.4byte	.LASF15
 1581 00b0 02       		.uleb128 0x2
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 78


 1582 00b1 01       		.byte	0x1
 1583 00b2 08       		.byte	0x8
 1584 00b3 BB040000 		.4byte	.LASF16
 1585 00b7 02       		.uleb128 0x2
 1586 00b8 04       		.byte	0x4
 1587 00b9 07       		.byte	0x7
 1588 00ba C0040000 		.4byte	.LASF17
 1589 00be 05       		.uleb128 0x5
 1590 00bf 04       		.byte	0x4
 1591 00c0 6B000000 		.4byte	0x6b
 1592 00c4 05       		.uleb128 0x5
 1593 00c5 04       		.byte	0x4
 1594 00c6 CA000000 		.4byte	0xca
 1595 00ca 06       		.uleb128 0x6
 1596 00cb 6B000000 		.4byte	0x6b
 1597 00cf 05       		.uleb128 0x5
 1598 00d0 04       		.byte	0x4
 1599 00d1 76000000 		.4byte	0x76
 1600 00d5 07       		.uleb128 0x7
 1601 00d6 CE070000 		.4byte	.LASF18
 1602 00da 01       		.byte	0x1
 1603 00db 8A       		.byte	0x8a
 1604 00dc 00000000 		.4byte	.LFB35
 1605 00e0 20000000 		.4byte	.LFE35-.LFB35
 1606 00e4 01       		.uleb128 0x1
 1607 00e5 9C       		.byte	0x9c
 1608 00e6 FA000000 		.4byte	0xfa
 1609 00ea 08       		.uleb128 0x8
 1610 00eb BD060000 		.4byte	.LASF20
 1611 00ef 01       		.byte	0x1
 1612 00f0 8A       		.byte	0x8a
 1613 00f1 81000000 		.4byte	0x81
 1614 00f5 00000000 		.4byte	.LLST0
 1615 00f9 00       		.byte	0
 1616 00fa 07       		.uleb128 0x7
 1617 00fb F6070000 		.4byte	.LASF19
 1618 00ff 01       		.byte	0x1
 1619 0100 D5       		.byte	0xd5
 1620 0101 00000000 		.4byte	.LFB36
 1621 0105 18000000 		.4byte	.LFE36-.LFB36
 1622 0109 01       		.uleb128 0x1
 1623 010a 9C       		.byte	0x9c
 1624 010b 4C010000 		.4byte	0x14c
 1625 010f 08       		.uleb128 0x8
 1626 0110 BD060000 		.4byte	.LASF20
 1627 0114 01       		.byte	0x1
 1628 0115 D5       		.byte	0xd5
 1629 0116 81000000 		.4byte	0x81
 1630 011a 21000000 		.4byte	.LLST1
 1631 011e 09       		.uleb128 0x9
 1632 011f 08000000 		.4byte	.LVL3
 1633 0123 FA0B0000 		.4byte	0xbfa
 1634 0127 32010000 		.4byte	0x132
 1635 012b 0A       		.uleb128 0xa
 1636 012c 01       		.uleb128 0x1
 1637 012d 50       		.byte	0x50
 1638 012e 02       		.uleb128 0x2
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 79


 1639 012f 74       		.byte	0x74
 1640 0130 00       		.sleb128 0
 1641 0131 00       		.byte	0
 1642 0132 0B       		.uleb128 0xb
 1643 0133 0C000000 		.4byte	.LVL4
 1644 0137 0B0C0000 		.4byte	0xc0b
 1645 013b 0C       		.uleb128 0xc
 1646 013c 16000000 		.4byte	.LVL5
 1647 0140 D5000000 		.4byte	0xd5
 1648 0144 0A       		.uleb128 0xa
 1649 0145 01       		.uleb128 0x1
 1650 0146 50       		.byte	0x50
 1651 0147 02       		.uleb128 0x2
 1652 0148 74       		.byte	0x74
 1653 0149 00       		.sleb128 0
 1654 014a 00       		.byte	0
 1655 014b 00       		.byte	0
 1656 014c 07       		.uleb128 0x7
 1657 014d FC040000 		.4byte	.LASF21
 1658 0151 01       		.byte	0x1
 1659 0152 FA       		.byte	0xfa
 1660 0153 00000000 		.4byte	.LFB37
 1661 0157 14000000 		.4byte	.LFE37-.LFB37
 1662 015b 01       		.uleb128 0x1
 1663 015c 9C       		.byte	0x9c
 1664 015d 7F010000 		.4byte	0x17f
 1665 0161 0D       		.uleb128 0xd
 1666 0162 6900     		.ascii	"i\000"
 1667 0164 01       		.byte	0x1
 1668 0165 FC       		.byte	0xfc
 1669 0166 81000000 		.4byte	0x81
 1670 016a 4D000000 		.4byte	.LLST2
 1671 016e 0C       		.uleb128 0xc
 1672 016f 0C000000 		.4byte	.LVL9
 1673 0173 FA000000 		.4byte	0xfa
 1674 0177 0A       		.uleb128 0xa
 1675 0178 01       		.uleb128 0x1
 1676 0179 50       		.byte	0x50
 1677 017a 02       		.uleb128 0x2
 1678 017b 74       		.byte	0x74
 1679 017c 00       		.sleb128 0
 1680 017d 00       		.byte	0
 1681 017e 00       		.byte	0
 1682 017f 0E       		.uleb128 0xe
 1683 0180 EF030000 		.4byte	.LASF22
 1684 0184 01       		.byte	0x1
 1685 0185 1D01     		.2byte	0x11d
 1686 0187 00000000 		.4byte	.LFB38
 1687 018b 30000000 		.4byte	.LFE38-.LFB38
 1688 018f 01       		.uleb128 0x1
 1689 0190 9C       		.byte	0x9c
 1690 0191 EA010000 		.4byte	0x1ea
 1691 0195 0F       		.uleb128 0xf
 1692 0196 6900     		.ascii	"i\000"
 1693 0198 01       		.byte	0x1
 1694 0199 1F01     		.2byte	0x11f
 1695 019b 81000000 		.4byte	0x81
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 80


 1696 019f 6C000000 		.4byte	.LLST3
 1697 01a3 10       		.uleb128 0x10
 1698 01a4 7E040000 		.4byte	.LASF23
 1699 01a8 01       		.byte	0x1
 1700 01a9 2001     		.2byte	0x120
 1701 01ab 81000000 		.4byte	0x81
 1702 01af 7F000000 		.4byte	.LLST4
 1703 01b3 0B       		.uleb128 0xb
 1704 01b4 06000000 		.4byte	.LVL12
 1705 01b8 160C0000 		.4byte	0xc16
 1706 01bc 0B       		.uleb128 0xb
 1707 01bd 0A000000 		.4byte	.LVL13
 1708 01c1 0B0C0000 		.4byte	0xc0b
 1709 01c5 09       		.uleb128 0x9
 1710 01c6 1A000000 		.4byte	.LVL15
 1711 01ca 1D0C0000 		.4byte	0xc1d
 1712 01ce D9010000 		.4byte	0x1d9
 1713 01d2 0A       		.uleb128 0xa
 1714 01d3 01       		.uleb128 0x1
 1715 01d4 51       		.byte	0x51
 1716 01d5 02       		.uleb128 0x2
 1717 01d6 74       		.byte	0x74
 1718 01d7 00       		.sleb128 0
 1719 01d8 00       		.byte	0
 1720 01d9 0C       		.uleb128 0xc
 1721 01da 24000000 		.4byte	.LVL17
 1722 01de D5000000 		.4byte	0xd5
 1723 01e2 0A       		.uleb128 0xa
 1724 01e3 01       		.uleb128 0x1
 1725 01e4 50       		.byte	0x50
 1726 01e5 02       		.uleb128 0x2
 1727 01e6 74       		.byte	0x74
 1728 01e7 00       		.sleb128 0
 1729 01e8 00       		.byte	0
 1730 01e9 00       		.byte	0
 1731 01ea 0E       		.uleb128 0xe
 1732 01eb 9C050000 		.4byte	.LASF24
 1733 01ef 01       		.byte	0x1
 1734 01f0 5E01     		.2byte	0x15e
 1735 01f2 00000000 		.4byte	.LFB39
 1736 01f6 AC000000 		.4byte	.LFE39-.LFB39
 1737 01fa 01       		.uleb128 0x1
 1738 01fb 9C       		.byte	0x9c
 1739 01fc 7A020000 		.4byte	0x27a
 1740 0200 11       		.uleb128 0x11
 1741 0201 BD060000 		.4byte	.LASF20
 1742 0205 01       		.byte	0x1
 1743 0206 5E01     		.2byte	0x15e
 1744 0208 81000000 		.4byte	0x81
 1745 020c 92000000 		.4byte	.LLST5
 1746 0210 10       		.uleb128 0x10
 1747 0211 12020000 		.4byte	.LASF25
 1748 0215 01       		.byte	0x1
 1749 0216 6001     		.2byte	0x160
 1750 0218 81000000 		.4byte	0x81
 1751 021c D7000000 		.4byte	.LLST6
 1752 0220 10       		.uleb128 0x10
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 81


 1753 0221 79040000 		.4byte	.LASF26
 1754 0225 01       		.byte	0x1
 1755 0226 6101     		.2byte	0x161
 1756 0228 81000000 		.4byte	0x81
 1757 022c F5000000 		.4byte	.LLST7
 1758 0230 10       		.uleb128 0x10
 1759 0231 37020000 		.4byte	.LASF27
 1760 0235 01       		.byte	0x1
 1761 0236 6201     		.2byte	0x162
 1762 0238 76000000 		.4byte	0x76
 1763 023c 20010000 		.4byte	.LLST8
 1764 0240 10       		.uleb128 0x10
 1765 0241 93000000 		.4byte	.LASF28
 1766 0245 01       		.byte	0x1
 1767 0246 6301     		.2byte	0x163
 1768 0248 76000000 		.4byte	0x76
 1769 024c 3E010000 		.4byte	.LLST9
 1770 0250 12       		.uleb128 0x12
 1771 0251 BA000000 		.4byte	.LASF33
 1772 0255 01       		.byte	0x1
 1773 0256 6401     		.2byte	0x164
 1774 0258 6B000000 		.4byte	0x6b
 1775 025c 13       		.uleb128 0x13
 1776 025d 5C020000 		.4byte	.LASF29
 1777 0261 01       		.byte	0x1
 1778 0262 6501     		.2byte	0x165
 1779 0264 76000000 		.4byte	0x76
 1780 0268 1E       		.byte	0x1e
 1781 0269 0C       		.uleb128 0xc
 1782 026a 40000000 		.4byte	.LVL28
 1783 026e D5000000 		.4byte	0xd5
 1784 0272 0A       		.uleb128 0xa
 1785 0273 01       		.uleb128 0x1
 1786 0274 50       		.byte	0x50
 1787 0275 02       		.uleb128 0x2
 1788 0276 74       		.byte	0x74
 1789 0277 00       		.sleb128 0
 1790 0278 00       		.byte	0
 1791 0279 00       		.byte	0
 1792 027a 0E       		.uleb128 0xe
 1793 027b 3E010000 		.4byte	.LASF30
 1794 027f 01       		.byte	0x1
 1795 0280 1E02     		.2byte	0x21e
 1796 0282 00000000 		.4byte	.LFB40
 1797 0286 08000000 		.4byte	.LFE40-.LFB40
 1798 028a 01       		.uleb128 0x1
 1799 028b 9C       		.byte	0x9c
 1800 028c B2020000 		.4byte	0x2b2
 1801 0290 11       		.uleb128 0x11
 1802 0291 BD060000 		.4byte	.LASF20
 1803 0295 01       		.byte	0x1
 1804 0296 1E02     		.2byte	0x21e
 1805 0298 81000000 		.4byte	0x81
 1806 029c 5C010000 		.4byte	.LLST10
 1807 02a0 0C       		.uleb128 0xc
 1808 02a1 06000000 		.4byte	.LVL43
 1809 02a5 EA010000 		.4byte	0x1ea
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 82


 1810 02a9 0A       		.uleb128 0xa
 1811 02aa 01       		.uleb128 0x1
 1812 02ab 50       		.byte	0x50
 1813 02ac 03       		.uleb128 0x3
 1814 02ad F3       		.byte	0xf3
 1815 02ae 01       		.uleb128 0x1
 1816 02af 50       		.byte	0x50
 1817 02b0 00       		.byte	0
 1818 02b1 00       		.byte	0
 1819 02b2 0E       		.uleb128 0xe
 1820 02b3 F2000000 		.4byte	.LASF31
 1821 02b7 01       		.byte	0x1
 1822 02b8 5402     		.2byte	0x254
 1823 02ba 00000000 		.4byte	.LFB41
 1824 02be 24000000 		.4byte	.LFE41-.LFB41
 1825 02c2 01       		.uleb128 0x1
 1826 02c3 9C       		.byte	0x9c
 1827 02c4 0B030000 		.4byte	0x30b
 1828 02c8 0F       		.uleb128 0xf
 1829 02c9 6900     		.ascii	"i\000"
 1830 02cb 01       		.byte	0x1
 1831 02cc 5602     		.2byte	0x256
 1832 02ce 81000000 		.4byte	0x81
 1833 02d2 7D010000 		.4byte	.LLST11
 1834 02d6 10       		.uleb128 0x10
 1835 02d7 7E040000 		.4byte	.LASF23
 1836 02db 01       		.byte	0x1
 1837 02dc 5702     		.2byte	0x257
 1838 02de 81000000 		.4byte	0x81
 1839 02e2 9C010000 		.4byte	.LLST12
 1840 02e6 09       		.uleb128 0x9
 1841 02e7 0E000000 		.4byte	.LVL46
 1842 02eb 1D0C0000 		.4byte	0xc1d
 1843 02ef FA020000 		.4byte	0x2fa
 1844 02f3 0A       		.uleb128 0xa
 1845 02f4 01       		.uleb128 0x1
 1846 02f5 51       		.byte	0x51
 1847 02f6 02       		.uleb128 0x2
 1848 02f7 74       		.byte	0x74
 1849 02f8 00       		.sleb128 0
 1850 02f9 00       		.byte	0
 1851 02fa 0C       		.uleb128 0xc
 1852 02fb 18000000 		.4byte	.LVL48
 1853 02ff 7A020000 		.4byte	0x27a
 1854 0303 0A       		.uleb128 0xa
 1855 0304 01       		.uleb128 0x1
 1856 0305 50       		.byte	0x50
 1857 0306 02       		.uleb128 0x2
 1858 0307 74       		.byte	0x74
 1859 0308 00       		.sleb128 0
 1860 0309 00       		.byte	0
 1861 030a 00       		.byte	0
 1862 030b 0E       		.uleb128 0xe
 1863 030c 66000000 		.4byte	.LASF32
 1864 0310 01       		.byte	0x1
 1865 0311 8102     		.2byte	0x281
 1866 0313 00000000 		.4byte	.LFB42
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 83


 1867 0317 24000000 		.4byte	.LFE42-.LFB42
 1868 031b 01       		.uleb128 0x1
 1869 031c 9C       		.byte	0x9c
 1870 031d 9B030000 		.4byte	0x39b
 1871 0321 11       		.uleb128 0x11
 1872 0322 BA000000 		.4byte	.LASF33
 1873 0326 01       		.byte	0x1
 1874 0327 8102     		.2byte	0x281
 1875 0329 81000000 		.4byte	0x81
 1876 032d AF010000 		.4byte	.LLST13
 1877 0331 13       		.uleb128 0x13
 1878 0332 51070000 		.4byte	.LASF34
 1879 0336 01       		.byte	0x1
 1880 0337 8302     		.2byte	0x283
 1881 0339 81000000 		.4byte	0x81
 1882 033d 05       		.byte	0x5
 1883 033e 13       		.uleb128 0x13
 1884 033f C9040000 		.4byte	.LASF35
 1885 0343 01       		.byte	0x1
 1886 0344 8402     		.2byte	0x284
 1887 0346 81000000 		.4byte	0x81
 1888 034a 00       		.byte	0
 1889 034b 13       		.uleb128 0x13
 1890 034c 1C050000 		.4byte	.LASF36
 1891 0350 01       		.byte	0x1
 1892 0351 8502     		.2byte	0x285
 1893 0353 81000000 		.4byte	0x81
 1894 0357 05       		.byte	0x5
 1895 0358 0F       		.uleb128 0xf
 1896 0359 6900     		.ascii	"i\000"
 1897 035b 01       		.byte	0x1
 1898 035c 8602     		.2byte	0x286
 1899 035e 81000000 		.4byte	0x81
 1900 0362 D0010000 		.4byte	.LLST14
 1901 0366 10       		.uleb128 0x10
 1902 0367 7E040000 		.4byte	.LASF23
 1903 036b 01       		.byte	0x1
 1904 036c 8702     		.2byte	0x287
 1905 036e 81000000 		.4byte	0x81
 1906 0372 EF010000 		.4byte	.LLST15
 1907 0376 09       		.uleb128 0x9
 1908 0377 0E000000 		.4byte	.LVL54
 1909 037b 1D0C0000 		.4byte	0xc1d
 1910 037f 8A030000 		.4byte	0x38a
 1911 0383 0A       		.uleb128 0xa
 1912 0384 01       		.uleb128 0x1
 1913 0385 51       		.byte	0x51
 1914 0386 02       		.uleb128 0x2
 1915 0387 74       		.byte	0x74
 1916 0388 00       		.sleb128 0
 1917 0389 00       		.byte	0
 1918 038a 0C       		.uleb128 0xc
 1919 038b 18000000 		.4byte	.LVL56
 1920 038f 7A020000 		.4byte	0x27a
 1921 0393 0A       		.uleb128 0xa
 1922 0394 01       		.uleb128 0x1
 1923 0395 50       		.byte	0x50
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 84


 1924 0396 02       		.uleb128 0x2
 1925 0397 74       		.byte	0x74
 1926 0398 00       		.sleb128 0
 1927 0399 00       		.byte	0
 1928 039a 00       		.byte	0
 1929 039b 14       		.uleb128 0x14
 1930 039c 88070000 		.4byte	.LASF39
 1931 03a0 01       		.byte	0x1
 1932 03a1 B202     		.2byte	0x2b2
 1933 03a3 76000000 		.4byte	0x76
 1934 03a7 00000000 		.4byte	.LFB43
 1935 03ab 0C000000 		.4byte	.LFE43-.LFB43
 1936 03af 01       		.uleb128 0x1
 1937 03b0 9C       		.byte	0x9c
 1938 03b1 C6030000 		.4byte	0x3c6
 1939 03b5 11       		.uleb128 0x11
 1940 03b6 BD060000 		.4byte	.LASF20
 1941 03ba 01       		.byte	0x1
 1942 03bb B202     		.2byte	0x2b2
 1943 03bd 81000000 		.4byte	0x81
 1944 03c1 02020000 		.4byte	.LLST16
 1945 03c5 00       		.byte	0
 1946 03c6 0E       		.uleb128 0xe
 1947 03c7 A6030000 		.4byte	.LASF37
 1948 03cb 01       		.byte	0x1
 1949 03cc CD02     		.2byte	0x2cd
 1950 03ce 00000000 		.4byte	.LFB44
 1951 03d2 0C000000 		.4byte	.LFE44-.LFB44
 1952 03d6 01       		.uleb128 0x1
 1953 03d7 9C       		.byte	0x9c
 1954 03d8 FB030000 		.4byte	0x3fb
 1955 03dc 11       		.uleb128 0x11
 1956 03dd BD060000 		.4byte	.LASF20
 1957 03e1 01       		.byte	0x1
 1958 03e2 CD02     		.2byte	0x2cd
 1959 03e4 81000000 		.4byte	0x81
 1960 03e8 23020000 		.4byte	.LLST17
 1961 03ec 15       		.uleb128 0x15
 1962 03ed D5000000 		.4byte	.LASF38
 1963 03f1 01       		.byte	0x1
 1964 03f2 CD02     		.2byte	0x2cd
 1965 03f4 76000000 		.4byte	0x76
 1966 03f8 01       		.uleb128 0x1
 1967 03f9 51       		.byte	0x51
 1968 03fa 00       		.byte	0
 1969 03fb 14       		.uleb128 0x14
 1970 03fc 3C050000 		.4byte	.LASF40
 1971 0400 01       		.byte	0x1
 1972 0401 E802     		.2byte	0x2e8
 1973 0403 76000000 		.4byte	0x76
 1974 0407 00000000 		.4byte	.LFB45
 1975 040b 10000000 		.4byte	.LFE45-.LFB45
 1976 040f 01       		.uleb128 0x1
 1977 0410 9C       		.byte	0x9c
 1978 0411 26040000 		.4byte	0x426
 1979 0415 11       		.uleb128 0x11
 1980 0416 BD060000 		.4byte	.LASF20
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 85


 1981 041a 01       		.byte	0x1
 1982 041b E802     		.2byte	0x2e8
 1983 041d 81000000 		.4byte	0x81
 1984 0421 44020000 		.4byte	.LLST18
 1985 0425 00       		.byte	0
 1986 0426 0E       		.uleb128 0xe
 1987 0427 62070000 		.4byte	.LASF41
 1988 042b 01       		.byte	0x1
 1989 042c 0303     		.2byte	0x303
 1990 042e 00000000 		.4byte	.LFB46
 1991 0432 10000000 		.4byte	.LFE46-.LFB46
 1992 0436 01       		.uleb128 0x1
 1993 0437 9C       		.byte	0x9c
 1994 0438 5B040000 		.4byte	0x45b
 1995 043c 11       		.uleb128 0x11
 1996 043d BD060000 		.4byte	.LASF20
 1997 0441 01       		.byte	0x1
 1998 0442 0303     		.2byte	0x303
 1999 0444 81000000 		.4byte	0x81
 2000 0448 65020000 		.4byte	.LLST19
 2001 044c 15       		.uleb128 0x15
 2002 044d 31010000 		.4byte	.LASF42
 2003 0451 01       		.byte	0x1
 2004 0452 0303     		.2byte	0x303
 2005 0454 76000000 		.4byte	0x76
 2006 0458 01       		.uleb128 0x1
 2007 0459 51       		.byte	0x51
 2008 045a 00       		.byte	0
 2009 045b 14       		.uleb128 0x14
 2010 045c E0040000 		.4byte	.LASF43
 2011 0460 01       		.byte	0x1
 2012 0461 1E03     		.2byte	0x31e
 2013 0463 76000000 		.4byte	0x76
 2014 0467 00000000 		.4byte	.LFB47
 2015 046b 04000000 		.4byte	.LFE47-.LFB47
 2016 046f 01       		.uleb128 0x1
 2017 0470 9C       		.byte	0x9c
 2018 0471 86040000 		.4byte	0x486
 2019 0475 11       		.uleb128 0x11
 2020 0476 BA000000 		.4byte	.LASF33
 2021 047a 01       		.byte	0x1
 2022 047b 1E03     		.2byte	0x31e
 2023 047d 81000000 		.4byte	0x81
 2024 0481 86020000 		.4byte	.LLST20
 2025 0485 00       		.byte	0
 2026 0486 14       		.uleb128 0x14
 2027 0487 29040000 		.4byte	.LASF44
 2028 048b 01       		.byte	0x1
 2029 048c 3903     		.2byte	0x339
 2030 048e 76000000 		.4byte	0x76
 2031 0492 00000000 		.4byte	.LFB48
 2032 0496 04000000 		.4byte	.LFE48-.LFB48
 2033 049a 01       		.uleb128 0x1
 2034 049b 9C       		.byte	0x9c
 2035 049c B1040000 		.4byte	0x4b1
 2036 04a0 11       		.uleb128 0x11
 2037 04a1 BA000000 		.4byte	.LASF33
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 86


 2038 04a5 01       		.byte	0x1
 2039 04a6 3903     		.2byte	0x339
 2040 04a8 81000000 		.4byte	0x81
 2041 04ac A7020000 		.4byte	.LLST21
 2042 04b0 00       		.byte	0
 2043 04b1 14       		.uleb128 0x14
 2044 04b2 6B020000 		.4byte	.LASF45
 2045 04b6 01       		.byte	0x1
 2046 04b7 5503     		.2byte	0x355
 2047 04b9 76000000 		.4byte	0x76
 2048 04bd 00000000 		.4byte	.LFB49
 2049 04c1 04000000 		.4byte	.LFE49-.LFB49
 2050 04c5 01       		.uleb128 0x1
 2051 04c6 9C       		.byte	0x9c
 2052 04c7 DC040000 		.4byte	0x4dc
 2053 04cb 11       		.uleb128 0x11
 2054 04cc BA000000 		.4byte	.LASF33
 2055 04d0 01       		.byte	0x1
 2056 04d1 5503     		.2byte	0x355
 2057 04d3 81000000 		.4byte	0x81
 2058 04d7 C8020000 		.4byte	.LLST22
 2059 04db 00       		.byte	0
 2060 04dc 14       		.uleb128 0x14
 2061 04dd 0E070000 		.4byte	.LASF46
 2062 04e1 01       		.byte	0x1
 2063 04e2 7103     		.2byte	0x371
 2064 04e4 76000000 		.4byte	0x76
 2065 04e8 00000000 		.4byte	.LFB50
 2066 04ec 04000000 		.4byte	.LFE50-.LFB50
 2067 04f0 01       		.uleb128 0x1
 2068 04f1 9C       		.byte	0x9c
 2069 04f2 07050000 		.4byte	0x507
 2070 04f6 11       		.uleb128 0x11
 2071 04f7 BA000000 		.4byte	.LASF33
 2072 04fb 01       		.byte	0x1
 2073 04fc 7103     		.2byte	0x371
 2074 04fe 81000000 		.4byte	0x81
 2075 0502 E9020000 		.4byte	.LLST23
 2076 0506 00       		.byte	0
 2077 0507 14       		.uleb128 0x14
 2078 0508 0E000000 		.4byte	.LASF47
 2079 050c 01       		.byte	0x1
 2080 050d 4D04     		.2byte	0x44d
 2081 050f 81000000 		.4byte	0x81
 2082 0513 00000000 		.4byte	.LFB51
 2083 0517 84000000 		.4byte	.LFE51-.LFB51
 2084 051b 01       		.uleb128 0x1
 2085 051c 9C       		.byte	0x9c
 2086 051d FB050000 		.4byte	0x5fb
 2087 0521 11       		.uleb128 0x11
 2088 0522 BD060000 		.4byte	.LASF20
 2089 0526 01       		.byte	0x1
 2090 0527 4D04     		.2byte	0x44d
 2091 0529 81000000 		.4byte	0x81
 2092 052d 0A030000 		.4byte	.LLST24
 2093 0531 12       		.uleb128 0x12
 2094 0532 BA000000 		.4byte	.LASF33
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 87


 2095 0536 01       		.byte	0x1
 2096 0537 4F04     		.2byte	0x44f
 2097 0539 6B000000 		.4byte	0x6b
 2098 053d 13       		.uleb128 0x13
 2099 053e 2E020000 		.4byte	.LASF48
 2100 0542 01       		.byte	0x1
 2101 0543 5004     		.2byte	0x450
 2102 0545 6B000000 		.4byte	0x6b
 2103 0549 01       		.byte	0x1
 2104 054a 13       		.uleb128 0x13
 2105 054b A3000000 		.4byte	.LASF49
 2106 054f 01       		.byte	0x1
 2107 0550 5104     		.2byte	0x451
 2108 0552 6B000000 		.4byte	0x6b
 2109 0556 00       		.byte	0
 2110 0557 13       		.uleb128 0x13
 2111 0558 A1070000 		.4byte	.LASF50
 2112 055c 01       		.byte	0x1
 2113 055d 5304     		.2byte	0x453
 2114 055f 76000000 		.4byte	0x76
 2115 0563 64       		.byte	0x64
 2116 0564 13       		.uleb128 0x13
 2117 0565 4C030000 		.4byte	.LASF51
 2118 0569 01       		.byte	0x1
 2119 056a 5404     		.2byte	0x454
 2120 056c 76000000 		.4byte	0x76
 2121 0570 00       		.byte	0
 2122 0571 16       		.uleb128 0x16
 2123 0572 F5060000 		.4byte	.LASF52
 2124 0576 01       		.byte	0x1
 2125 0577 5504     		.2byte	0x455
 2126 0579 FB050000 		.4byte	0x5fb
 2127 057d 05       		.uleb128 0x5
 2128 057e 03       		.byte	0x3
 2129 057f 20000000 		.4byte	CapSense_debounceCounter.5304
 2130 0583 09       		.uleb128 0x9
 2131 0584 14000000 		.4byte	.LVL78
 2132 0588 1D0C0000 		.4byte	0xc1d
 2133 058c A0050000 		.4byte	0x5a0
 2134 0590 0A       		.uleb128 0xa
 2135 0591 01       		.uleb128 0x1
 2136 0592 51       		.byte	0x51
 2137 0593 02       		.uleb128 0x2
 2138 0594 74       		.byte	0x74
 2139 0595 00       		.sleb128 0
 2140 0596 0A       		.uleb128 0xa
 2141 0597 01       		.uleb128 0x1
 2142 0598 50       		.byte	0x50
 2143 0599 05       		.uleb128 0x5
 2144 059a 03       		.byte	0x3
 2145 059b 24000000 		.4byte	.LANCHOR0+36
 2146 059f 00       		.byte	0
 2147 05a0 09       		.uleb128 0x9
 2148 05a1 32000000 		.4byte	.LVL79
 2149 05a5 370C0000 		.4byte	0xc37
 2150 05a9 BF050000 		.4byte	0x5bf
 2151 05ad 0A       		.uleb128 0xa
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 88


 2152 05ae 01       		.uleb128 0x1
 2153 05af 52       		.byte	0x52
 2154 05b0 01       		.uleb128 0x1
 2155 05b1 30       		.byte	0x30
 2156 05b2 0A       		.uleb128 0xa
 2157 05b3 01       		.uleb128 0x1
 2158 05b4 51       		.byte	0x51
 2159 05b5 02       		.uleb128 0x2
 2160 05b6 74       		.byte	0x74
 2161 05b7 00       		.sleb128 0
 2162 05b8 0A       		.uleb128 0xa
 2163 05b9 01       		.uleb128 0x1
 2164 05ba 50       		.byte	0x50
 2165 05bb 02       		.uleb128 0x2
 2166 05bc 75       		.byte	0x75
 2167 05bd 24       		.sleb128 36
 2168 05be 00       		.byte	0
 2169 05bf 09       		.uleb128 0x9
 2170 05c0 62000000 		.4byte	.LVL80
 2171 05c4 370C0000 		.4byte	0xc37
 2172 05c8 E1050000 		.4byte	0x5e1
 2173 05cc 0A       		.uleb128 0xa
 2174 05cd 01       		.uleb128 0x1
 2175 05ce 52       		.byte	0x52
 2176 05cf 01       		.uleb128 0x1
 2177 05d0 31       		.byte	0x31
 2178 05d1 0A       		.uleb128 0xa
 2179 05d2 01       		.uleb128 0x1
 2180 05d3 51       		.byte	0x51
 2181 05d4 02       		.uleb128 0x2
 2182 05d5 74       		.byte	0x74
 2183 05d6 00       		.sleb128 0
 2184 05d7 0A       		.uleb128 0xa
 2185 05d8 01       		.uleb128 0x1
 2186 05d9 50       		.byte	0x50
 2187 05da 05       		.uleb128 0x5
 2188 05db 03       		.byte	0x3
 2189 05dc 24000000 		.4byte	.LANCHOR0+36
 2190 05e0 00       		.byte	0
 2191 05e1 0C       		.uleb128 0xc
 2192 05e2 76000000 		.4byte	.LVL81
 2193 05e6 1D0C0000 		.4byte	0xc1d
 2194 05ea 0A       		.uleb128 0xa
 2195 05eb 01       		.uleb128 0x1
 2196 05ec 51       		.byte	0x51
 2197 05ed 02       		.uleb128 0x2
 2198 05ee 74       		.byte	0x74
 2199 05ef 00       		.sleb128 0
 2200 05f0 0A       		.uleb128 0xa
 2201 05f1 01       		.uleb128 0x1
 2202 05f2 50       		.byte	0x50
 2203 05f3 05       		.uleb128 0x5
 2204 05f4 03       		.byte	0x3
 2205 05f5 24000000 		.4byte	.LANCHOR0+36
 2206 05f9 00       		.byte	0
 2207 05fa 00       		.byte	0
 2208 05fb 17       		.uleb128 0x17
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 89


 2209 05fc 6B000000 		.4byte	0x6b
 2210 0600 0B060000 		.4byte	0x60b
 2211 0604 18       		.uleb128 0x18
 2212 0605 B7000000 		.4byte	0xb7
 2213 0609 00       		.byte	0
 2214 060a 00       		.byte	0
 2215 060b 14       		.uleb128 0x14
 2216 060c B1070000 		.4byte	.LASF53
 2217 0610 01       		.byte	0x1
 2218 0611 A404     		.2byte	0x4a4
 2219 0613 81000000 		.4byte	0x81
 2220 0617 00000000 		.4byte	.LFB52
 2221 061b 1C000000 		.4byte	.LFE52-.LFB52
 2222 061f 01       		.uleb128 0x1
 2223 0620 9C       		.byte	0x9c
 2224 0621 73060000 		.4byte	0x673
 2225 0625 11       		.uleb128 0x11
 2226 0626 BA000000 		.4byte	.LASF33
 2227 062a 01       		.byte	0x1
 2228 062b A404     		.2byte	0x4a4
 2229 062d 81000000 		.4byte	0x81
 2230 0631 36030000 		.4byte	.LLST25
 2231 0635 10       		.uleb128 0x10
 2232 0636 B1000000 		.4byte	.LASF54
 2233 063a 01       		.byte	0x1
 2234 063b A604     		.2byte	0x4a6
 2235 063d 81000000 		.4byte	0x81
 2236 0641 57030000 		.4byte	.LLST26
 2237 0645 13       		.uleb128 0x13
 2238 0646 12010000 		.4byte	.LASF55
 2239 064a 01       		.byte	0x1
 2240 064b A704     		.2byte	0x4a7
 2241 064d 81000000 		.4byte	0x81
 2242 0651 05       		.byte	0x5
 2243 0652 10       		.uleb128 0x10
 2244 0653 B8020000 		.4byte	.LASF56
 2245 0657 01       		.byte	0x1
 2246 0658 A804     		.2byte	0x4a8
 2247 065a 81000000 		.4byte	0x81
 2248 065e 76030000 		.4byte	.LLST27
 2249 0662 0C       		.uleb128 0xc
 2250 0663 0C000000 		.4byte	.LVL86
 2251 0667 07050000 		.4byte	0x507
 2252 066b 0A       		.uleb128 0xa
 2253 066c 01       		.uleb128 0x1
 2254 066d 50       		.byte	0x50
 2255 066e 02       		.uleb128 0x2
 2256 066f 74       		.byte	0x74
 2257 0670 00       		.sleb128 0
 2258 0671 00       		.byte	0
 2259 0672 00       		.byte	0
 2260 0673 14       		.uleb128 0x14
 2261 0674 3E000000 		.4byte	.LASF57
 2262 0678 01       		.byte	0x1
 2263 0679 D204     		.2byte	0x4d2
 2264 067b 81000000 		.4byte	0x81
 2265 067f 00000000 		.4byte	.LFB53
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 90


 2266 0683 1E000000 		.4byte	.LFE53-.LFB53
 2267 0687 01       		.uleb128 0x1
 2268 0688 9C       		.byte	0x9c
 2269 0689 BC060000 		.4byte	0x6bc
 2270 068d 0F       		.uleb128 0xf
 2271 068e 6900     		.ascii	"i\000"
 2272 0690 01       		.byte	0x1
 2273 0691 D504     		.2byte	0x4d5
 2274 0693 81000000 		.4byte	0x81
 2275 0697 A0030000 		.4byte	.LLST28
 2276 069b 10       		.uleb128 0x10
 2277 069c B8020000 		.4byte	.LASF56
 2278 06a0 01       		.byte	0x1
 2279 06a1 D604     		.2byte	0x4d6
 2280 06a3 81000000 		.4byte	0x81
 2281 06a7 BF030000 		.4byte	.LLST29
 2282 06ab 0C       		.uleb128 0xc
 2283 06ac 0E000000 		.4byte	.LVL93
 2284 06b0 0B060000 		.4byte	0x60b
 2285 06b4 0A       		.uleb128 0xa
 2286 06b5 01       		.uleb128 0x1
 2287 06b6 50       		.byte	0x50
 2288 06b7 02       		.uleb128 0x2
 2289 06b8 74       		.byte	0x74
 2290 06b9 00       		.sleb128 0
 2291 06ba 00       		.byte	0
 2292 06bb 00       		.byte	0
 2293 06bc 0E       		.uleb128 0xe
 2294 06bd 97060000 		.4byte	.LASF58
 2295 06c1 01       		.byte	0x1
 2296 06c2 0105     		.2byte	0x501
 2297 06c4 00000000 		.4byte	.LFB54
 2298 06c8 1C000000 		.4byte	.LFE54-.LFB54
 2299 06cc 01       		.uleb128 0x1
 2300 06cd 9C       		.byte	0x9c
 2301 06ce 15070000 		.4byte	0x715
 2302 06d2 11       		.uleb128 0x11
 2303 06d3 BA000000 		.4byte	.LASF33
 2304 06d7 01       		.byte	0x1
 2305 06d8 0105     		.2byte	0x501
 2306 06da 81000000 		.4byte	0x81
 2307 06de E9030000 		.4byte	.LLST30
 2308 06e2 10       		.uleb128 0x10
 2309 06e3 B1000000 		.4byte	.LASF54
 2310 06e7 01       		.byte	0x1
 2311 06e8 0405     		.2byte	0x504
 2312 06ea 6B000000 		.4byte	0x6b
 2313 06ee 0A040000 		.4byte	.LLST31
 2314 06f2 13       		.uleb128 0x13
 2315 06f3 12010000 		.4byte	.LASF55
 2316 06f7 01       		.byte	0x1
 2317 06f8 0505     		.2byte	0x505
 2318 06fa 6B000000 		.4byte	0x6b
 2319 06fe 05       		.byte	0x5
 2320 06ff 0C       		.uleb128 0xc
 2321 0700 0E000000 		.4byte	.LVL101
 2322 0704 370C0000 		.4byte	0xc37
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 91


 2323 0708 0A       		.uleb128 0xa
 2324 0709 01       		.uleb128 0x1
 2325 070a 52       		.byte	0x52
 2326 070b 01       		.uleb128 0x1
 2327 070c 31       		.byte	0x31
 2328 070d 0A       		.uleb128 0xa
 2329 070e 01       		.uleb128 0x1
 2330 070f 51       		.byte	0x51
 2331 0710 02       		.uleb128 0x2
 2332 0711 74       		.byte	0x74
 2333 0712 00       		.sleb128 0
 2334 0713 00       		.byte	0
 2335 0714 00       		.byte	0
 2336 0715 0E       		.uleb128 0xe
 2337 0716 62040000 		.4byte	.LASF59
 2338 071a 01       		.byte	0x1
 2339 071b 2C05     		.2byte	0x52c
 2340 071d 00000000 		.4byte	.LFB55
 2341 0721 1C000000 		.4byte	.LFE55-.LFB55
 2342 0725 01       		.uleb128 0x1
 2343 0726 9C       		.byte	0x9c
 2344 0727 6E070000 		.4byte	0x76e
 2345 072b 11       		.uleb128 0x11
 2346 072c BA000000 		.4byte	.LASF33
 2347 0730 01       		.byte	0x1
 2348 0731 2C05     		.2byte	0x52c
 2349 0733 81000000 		.4byte	0x81
 2350 0737 34040000 		.4byte	.LLST32
 2351 073b 10       		.uleb128 0x10
 2352 073c B1000000 		.4byte	.LASF54
 2353 0740 01       		.byte	0x1
 2354 0741 2E05     		.2byte	0x52e
 2355 0743 6B000000 		.4byte	0x6b
 2356 0747 55040000 		.4byte	.LLST33
 2357 074b 13       		.uleb128 0x13
 2358 074c 12010000 		.4byte	.LASF55
 2359 0750 01       		.byte	0x1
 2360 0751 2F05     		.2byte	0x52f
 2361 0753 6B000000 		.4byte	0x6b
 2362 0757 05       		.byte	0x5
 2363 0758 0C       		.uleb128 0xc
 2364 0759 0E000000 		.4byte	.LVL108
 2365 075d 370C0000 		.4byte	0xc37
 2366 0761 0A       		.uleb128 0xa
 2367 0762 01       		.uleb128 0x1
 2368 0763 52       		.byte	0x52
 2369 0764 01       		.uleb128 0x1
 2370 0765 30       		.byte	0x30
 2371 0766 0A       		.uleb128 0xa
 2372 0767 01       		.uleb128 0x1
 2373 0768 51       		.byte	0x51
 2374 0769 02       		.uleb128 0x2
 2375 076a 74       		.byte	0x74
 2376 076b 00       		.sleb128 0
 2377 076c 00       		.byte	0
 2378 076d 00       		.byte	0
 2379 076e 14       		.uleb128 0x14
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 92


 2380 076f F7010000 		.4byte	.LASF60
 2381 0773 01       		.byte	0x1
 2382 0774 5E05     		.2byte	0x55e
 2383 0776 6B000000 		.4byte	0x6b
 2384 077a 00000000 		.4byte	.LFB56
 2385 077e 30000000 		.4byte	.LFE56-.LFB56
 2386 0782 01       		.uleb128 0x1
 2387 0783 9C       		.byte	0x9c
 2388 0784 F3070000 		.4byte	0x7f3
 2389 0788 11       		.uleb128 0x11
 2390 0789 3F020000 		.4byte	.LASF61
 2391 078d 01       		.byte	0x1
 2392 078e 5E05     		.2byte	0x55e
 2393 0790 6B000000 		.4byte	0x6b
 2394 0794 7F040000 		.4byte	.LLST34
 2395 0798 15       		.uleb128 0x15
 2396 0799 2A060000 		.4byte	.LASF62
 2397 079d 01       		.byte	0x1
 2398 079e 5E05     		.2byte	0x55e
 2399 07a0 6B000000 		.4byte	0x6b
 2400 07a4 01       		.uleb128 0x1
 2401 07a5 51       		.byte	0x51
 2402 07a6 15       		.uleb128 0x15
 2403 07a7 A1070000 		.4byte	.LASF50
 2404 07ab 01       		.byte	0x1
 2405 07ac 5E05     		.2byte	0x55e
 2406 07ae 76000000 		.4byte	0x76
 2407 07b2 01       		.uleb128 0x1
 2408 07b3 52       		.byte	0x52
 2409 07b4 0F       		.uleb128 0xf
 2410 07b5 6900     		.ascii	"i\000"
 2411 07b7 01       		.byte	0x1
 2412 07b8 6105     		.2byte	0x561
 2413 07ba 6B000000 		.4byte	0x6b
 2414 07be A0040000 		.4byte	.LLST35
 2415 07c2 10       		.uleb128 0x10
 2416 07c3 5E000000 		.4byte	.LASF63
 2417 07c7 01       		.byte	0x1
 2418 07c8 6B05     		.2byte	0x56b
 2419 07ca 6B000000 		.4byte	0x6b
 2420 07ce CA040000 		.4byte	.LLST36
 2421 07d2 10       		.uleb128 0x10
 2422 07d3 84000000 		.4byte	.LASF64
 2423 07d7 01       		.byte	0x1
 2424 07d8 6D05     		.2byte	0x56d
 2425 07da 76000000 		.4byte	0x76
 2426 07de EA040000 		.4byte	.LLST37
 2427 07e2 10       		.uleb128 0x10
 2428 07e3 00000000 		.4byte	.LASF65
 2429 07e7 01       		.byte	0x1
 2430 07e8 6E05     		.2byte	0x56e
 2431 07ea CF000000 		.4byte	0xcf
 2432 07ee 14050000 		.4byte	.LLST38
 2433 07f2 00       		.byte	0
 2434 07f3 19       		.uleb128 0x19
 2435 07f4 C6010000 		.4byte	.LASF66
 2436 07f8 01       		.byte	0x1
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 93


 2437 07f9 FD05     		.2byte	0x5fd
 2438 07fb 6B000000 		.4byte	0x6b
 2439 07ff 00000000 		.4byte	.LFB57
 2440 0803 D8000000 		.4byte	.LFE57-.LFB57
 2441 0807 01       		.uleb128 0x1
 2442 0808 9C       		.byte	0x9c
 2443 0809 CE080000 		.4byte	0x8ce
 2444 080d 11       		.uleb128 0x11
 2445 080e 5E000000 		.4byte	.LASF63
 2446 0812 01       		.byte	0x1
 2447 0813 FD05     		.2byte	0x5fd
 2448 0815 6B000000 		.4byte	0x6b
 2449 0819 27050000 		.4byte	.LLST39
 2450 081d 11       		.uleb128 0x11
 2451 081e 3F020000 		.4byte	.LASF61
 2452 0822 01       		.byte	0x1
 2453 0823 FD05     		.2byte	0x5fd
 2454 0825 6B000000 		.4byte	0x6b
 2455 0829 48050000 		.4byte	.LLST40
 2456 082d 11       		.uleb128 0x11
 2457 082e 2A060000 		.4byte	.LASF62
 2458 0832 01       		.byte	0x1
 2459 0833 FE05     		.2byte	0x5fe
 2460 0835 6B000000 		.4byte	0x6b
 2461 0839 69050000 		.4byte	.LLST41
 2462 083d 11       		.uleb128 0x11
 2463 083e D5040000 		.4byte	.LASF67
 2464 0842 01       		.byte	0x1
 2465 0843 FE05     		.2byte	0x5fe
 2466 0845 76000000 		.4byte	0x76
 2467 0849 8A050000 		.4byte	.LLST42
 2468 084d 11       		.uleb128 0x11
 2469 084e 5C020000 		.4byte	.LASF29
 2470 0852 01       		.byte	0x1
 2471 0853 FE05     		.2byte	0x5fe
 2472 0855 76000000 		.4byte	0x76
 2473 0859 AB050000 		.4byte	.LLST43
 2474 085d 10       		.uleb128 0x10
 2475 085e 8F060000 		.4byte	.LASF68
 2476 0862 01       		.byte	0x1
 2477 0863 0206     		.2byte	0x602
 2478 0865 6B000000 		.4byte	0x6b
 2479 0869 D7050000 		.4byte	.LLST44
 2480 086d 10       		.uleb128 0x10
 2481 086e ED060000 		.4byte	.LASF69
 2482 0872 01       		.byte	0x1
 2483 0873 0306     		.2byte	0x603
 2484 0875 6B000000 		.4byte	0x6b
 2485 0879 0D060000 		.4byte	.LLST45
 2486 087d 16       		.uleb128 0x16
 2487 087e 5C010000 		.4byte	.LASF70
 2488 0882 01       		.byte	0x1
 2489 0883 0806     		.2byte	0x608
 2490 0885 CE080000 		.4byte	0x8ce
 2491 0889 05       		.uleb128 0x5
 2492 088a 03       		.byte	0x3
 2493 088b 28000000 		.4byte	CapSense_centroid.5356
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 94


 2494 088f 16       		.uleb128 0x16
 2495 0890 57030000 		.4byte	.LASF71
 2496 0894 01       		.byte	0x1
 2497 0895 0F06     		.2byte	0x60f
 2498 0897 6B000000 		.4byte	0x6b
 2499 089b 01       		.uleb128 0x1
 2500 089c 50       		.byte	0x50
 2501 089d 10       		.uleb128 0x10
 2502 089e 9C030000 		.4byte	.LASF72
 2503 08a2 01       		.byte	0x1
 2504 08a3 1006     		.2byte	0x610
 2505 08a5 81000000 		.4byte	0x81
 2506 08a9 2B060000 		.4byte	.LLST46
 2507 08ad 10       		.uleb128 0x10
 2508 08ae 7C070000 		.4byte	.LASF73
 2509 08b2 01       		.byte	0x1
 2510 08b3 1106     		.2byte	0x611
 2511 08b5 97000000 		.4byte	0x97
 2512 08b9 57060000 		.4byte	.LLST47
 2513 08bd 10       		.uleb128 0x10
 2514 08be 00000000 		.4byte	.LASF65
 2515 08c2 01       		.byte	0x1
 2516 08c3 1306     		.2byte	0x613
 2517 08c5 CF000000 		.4byte	0xcf
 2518 08c9 BB060000 		.4byte	.LLST48
 2519 08cd 00       		.byte	0
 2520 08ce 17       		.uleb128 0x17
 2521 08cf 76000000 		.4byte	0x76
 2522 08d3 DE080000 		.4byte	0x8de
 2523 08d7 18       		.uleb128 0x18
 2524 08d8 B7000000 		.4byte	0xb7
 2525 08dc 02       		.byte	0x2
 2526 08dd 00       		.byte	0
 2527 08de 14       		.uleb128 0x14
 2528 08df A3040000 		.4byte	.LASF74
 2529 08e3 01       		.byte	0x1
 2530 08e4 D006     		.2byte	0x6d0
 2531 08e6 76000000 		.4byte	0x76
 2532 08ea 00000000 		.4byte	.LFB58
 2533 08ee 30000000 		.4byte	.LFE58-.LFB58
 2534 08f2 01       		.uleb128 0x1
 2535 08f3 9C       		.byte	0x9c
 2536 08f4 82090000 		.4byte	0x982
 2537 08f8 11       		.uleb128 0x11
 2538 08f9 BA000000 		.4byte	.LASF33
 2539 08fd 01       		.byte	0x1
 2540 08fe D006     		.2byte	0x6d0
 2541 0900 81000000 		.4byte	0x81
 2542 0904 CE060000 		.4byte	.LLST49
 2543 0908 10       		.uleb128 0x10
 2544 0909 5E000000 		.4byte	.LASF63
 2545 090d 01       		.byte	0x1
 2546 090e E306     		.2byte	0x6e3
 2547 0910 6B000000 		.4byte	0x6b
 2548 0914 EF060000 		.4byte	.LLST50
 2549 0918 10       		.uleb128 0x10
 2550 0919 57030000 		.4byte	.LASF71
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 95


 2551 091d 01       		.byte	0x1
 2552 091e E406     		.2byte	0x6e4
 2553 0920 76000000 		.4byte	0x76
 2554 0924 0D070000 		.4byte	.LLST51
 2555 0928 13       		.uleb128 0x13
 2556 0929 3F020000 		.4byte	.LASF61
 2557 092d 01       		.byte	0x1
 2558 092e E506     		.2byte	0x6e5
 2559 0930 6B000000 		.4byte	0x6b
 2560 0934 00       		.byte	0
 2561 0935 13       		.uleb128 0x13
 2562 0936 2A060000 		.4byte	.LASF62
 2563 093a 01       		.byte	0x1
 2564 093b E606     		.2byte	0x6e6
 2565 093d 6B000000 		.4byte	0x6b
 2566 0941 05       		.byte	0x5
 2567 0942 09       		.uleb128 0x9
 2568 0943 0E000000 		.4byte	.LVL152
 2569 0947 6E070000 		.4byte	0x76e
 2570 094b 60090000 		.4byte	0x960
 2571 094f 0A       		.uleb128 0xa
 2572 0950 01       		.uleb128 0x1
 2573 0951 52       		.byte	0x52
 2574 0952 02       		.uleb128 0x2
 2575 0953 08       		.byte	0x8
 2576 0954 64       		.byte	0x64
 2577 0955 0A       		.uleb128 0xa
 2578 0956 01       		.uleb128 0x1
 2579 0957 51       		.byte	0x51
 2580 0958 01       		.uleb128 0x1
 2581 0959 35       		.byte	0x35
 2582 095a 0A       		.uleb128 0xa
 2583 095b 01       		.uleb128 0x1
 2584 095c 50       		.byte	0x50
 2585 095d 01       		.uleb128 0x1
 2586 095e 30       		.byte	0x30
 2587 095f 00       		.byte	0
 2588 0960 0C       		.uleb128 0xc
 2589 0961 22000000 		.4byte	.LVL153
 2590 0965 F3070000 		.4byte	0x7f3
 2591 0969 0A       		.uleb128 0xa
 2592 096a 01       		.uleb128 0x1
 2593 096b 53       		.byte	0x53
 2594 096c 03       		.uleb128 0x3
 2595 096d 0A       		.byte	0xa
 2596 096e 0019     		.2byte	0x1900
 2597 0970 0A       		.uleb128 0xa
 2598 0971 01       		.uleb128 0x1
 2599 0972 52       		.byte	0x52
 2600 0973 01       		.uleb128 0x1
 2601 0974 35       		.byte	0x35
 2602 0975 0A       		.uleb128 0xa
 2603 0976 01       		.uleb128 0x1
 2604 0977 51       		.byte	0x51
 2605 0978 01       		.uleb128 0x1
 2606 0979 30       		.byte	0x30
 2607 097a 0A       		.uleb128 0xa
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 96


 2608 097b 02       		.uleb128 0x2
 2609 097c 7D       		.byte	0x7d
 2610 097d 00       		.sleb128 0
 2611 097e 01       		.uleb128 0x1
 2612 097f 4E       		.byte	0x4e
 2613 0980 00       		.byte	0
 2614 0981 00       		.byte	0
 2615 0982 14       		.uleb128 0x14
 2616 0983 44040000 		.4byte	.LASF75
 2617 0987 01       		.byte	0x1
 2618 0988 9B07     		.2byte	0x79b
 2619 098a 76000000 		.4byte	0x76
 2620 098e 00000000 		.4byte	.LFB59
 2621 0992 30000000 		.4byte	.LFE59-.LFB59
 2622 0996 01       		.uleb128 0x1
 2623 0997 9C       		.byte	0x9c
 2624 0998 260A0000 		.4byte	0xa26
 2625 099c 11       		.uleb128 0x11
 2626 099d BA000000 		.4byte	.LASF33
 2627 09a1 01       		.byte	0x1
 2628 09a2 9B07     		.2byte	0x79b
 2629 09a4 81000000 		.4byte	0x81
 2630 09a8 2B070000 		.4byte	.LLST52
 2631 09ac 10       		.uleb128 0x10
 2632 09ad 5E000000 		.4byte	.LASF63
 2633 09b1 01       		.byte	0x1
 2634 09b2 AA07     		.2byte	0x7aa
 2635 09b4 6B000000 		.4byte	0x6b
 2636 09b8 4C070000 		.4byte	.LLST53
 2637 09bc 10       		.uleb128 0x10
 2638 09bd 57030000 		.4byte	.LASF71
 2639 09c1 01       		.byte	0x1
 2640 09c2 AB07     		.2byte	0x7ab
 2641 09c4 76000000 		.4byte	0x76
 2642 09c8 6A070000 		.4byte	.LLST54
 2643 09cc 13       		.uleb128 0x13
 2644 09cd 3F020000 		.4byte	.LASF61
 2645 09d1 01       		.byte	0x1
 2646 09d2 AC07     		.2byte	0x7ac
 2647 09d4 6B000000 		.4byte	0x6b
 2648 09d8 00       		.byte	0
 2649 09d9 13       		.uleb128 0x13
 2650 09da 2A060000 		.4byte	.LASF62
 2651 09de 01       		.byte	0x1
 2652 09df AD07     		.2byte	0x7ad
 2653 09e1 6B000000 		.4byte	0x6b
 2654 09e5 05       		.byte	0x5
 2655 09e6 09       		.uleb128 0x9
 2656 09e7 0E000000 		.4byte	.LVL160
 2657 09eb 6E070000 		.4byte	0x76e
 2658 09ef 040A0000 		.4byte	0xa04
 2659 09f3 0A       		.uleb128 0xa
 2660 09f4 01       		.uleb128 0x1
 2661 09f5 52       		.byte	0x52
 2662 09f6 02       		.uleb128 0x2
 2663 09f7 08       		.byte	0x8
 2664 09f8 64       		.byte	0x64
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 97


 2665 09f9 0A       		.uleb128 0xa
 2666 09fa 01       		.uleb128 0x1
 2667 09fb 51       		.byte	0x51
 2668 09fc 01       		.uleb128 0x1
 2669 09fd 35       		.byte	0x35
 2670 09fe 0A       		.uleb128 0xa
 2671 09ff 01       		.uleb128 0x1
 2672 0a00 50       		.byte	0x50
 2673 0a01 01       		.uleb128 0x1
 2674 0a02 30       		.byte	0x30
 2675 0a03 00       		.byte	0
 2676 0a04 0C       		.uleb128 0xc
 2677 0a05 22000000 		.4byte	.LVL161
 2678 0a09 F3070000 		.4byte	0x7f3
 2679 0a0d 0A       		.uleb128 0xa
 2680 0a0e 01       		.uleb128 0x1
 2681 0a0f 53       		.byte	0x53
 2682 0a10 03       		.uleb128 0x3
 2683 0a11 0A       		.byte	0xa
 2684 0a12 0019     		.2byte	0x1900
 2685 0a14 0A       		.uleb128 0xa
 2686 0a15 01       		.uleb128 0x1
 2687 0a16 52       		.byte	0x52
 2688 0a17 01       		.uleb128 0x1
 2689 0a18 35       		.byte	0x35
 2690 0a19 0A       		.uleb128 0xa
 2691 0a1a 01       		.uleb128 0x1
 2692 0a1b 51       		.byte	0x51
 2693 0a1c 01       		.uleb128 0x1
 2694 0a1d 30       		.byte	0x30
 2695 0a1e 0A       		.uleb128 0xa
 2696 0a1f 02       		.uleb128 0x2
 2697 0a20 7D       		.byte	0x7d
 2698 0a21 00       		.sleb128 0
 2699 0a22 01       		.uleb128 0x1
 2700 0a23 4E       		.byte	0x4e
 2701 0a24 00       		.byte	0
 2702 0a25 00       		.byte	0
 2703 0a26 14       		.uleb128 0x14
 2704 0a27 31070000 		.4byte	.LASF76
 2705 0a2b 01       		.byte	0x1
 2706 0a2c A90A     		.2byte	0xaa9
 2707 0a2e 81000000 		.4byte	0x81
 2708 0a32 00000000 		.4byte	.LFB60
 2709 0a36 0C000000 		.4byte	.LFE60-.LFB60
 2710 0a3a 01       		.uleb128 0x1
 2711 0a3b 9C       		.byte	0x9c
 2712 0a3c 510A0000 		.4byte	0xa51
 2713 0a40 11       		.uleb128 0x11
 2714 0a41 BD060000 		.4byte	.LASF20
 2715 0a45 01       		.byte	0x1
 2716 0a46 A90A     		.2byte	0xaa9
 2717 0a48 81000000 		.4byte	0x81
 2718 0a4c 88070000 		.4byte	.LLST55
 2719 0a50 00       		.byte	0
 2720 0a51 14       		.uleb128 0x14
 2721 0a52 DE050000 		.4byte	.LASF77
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 98


 2722 0a56 01       		.byte	0x1
 2723 0a57 C30A     		.2byte	0xac3
 2724 0a59 6B000000 		.4byte	0x6b
 2725 0a5d 00000000 		.4byte	.LFB61
 2726 0a61 0C000000 		.4byte	.LFE61-.LFB61
 2727 0a65 01       		.uleb128 0x1
 2728 0a66 9C       		.byte	0x9c
 2729 0a67 7C0A0000 		.4byte	0xa7c
 2730 0a6b 11       		.uleb128 0x11
 2731 0a6c BD060000 		.4byte	.LASF20
 2732 0a70 01       		.byte	0x1
 2733 0a71 C30A     		.2byte	0xac3
 2734 0a73 81000000 		.4byte	0x81
 2735 0a77 A9070000 		.4byte	.LLST56
 2736 0a7b 00       		.byte	0
 2737 0a7c 14       		.uleb128 0x14
 2738 0a7d 27050000 		.4byte	.LASF78
 2739 0a81 01       		.byte	0x1
 2740 0a82 DD0A     		.2byte	0xadd
 2741 0a84 6B000000 		.4byte	0x6b
 2742 0a88 00000000 		.4byte	.LFB62
 2743 0a8c 04000000 		.4byte	.LFE62-.LFB62
 2744 0a90 01       		.uleb128 0x1
 2745 0a91 9C       		.byte	0x9c
 2746 0a92 A70A0000 		.4byte	0xaa7
 2747 0a96 11       		.uleb128 0x11
 2748 0a97 BA000000 		.4byte	.LASF33
 2749 0a9b 01       		.byte	0x1
 2750 0a9c DD0A     		.2byte	0xadd
 2751 0a9e 81000000 		.4byte	0x81
 2752 0aa2 CA070000 		.4byte	.LLST57
 2753 0aa6 00       		.byte	0
 2754 0aa7 17       		.uleb128 0x17
 2755 0aa8 76000000 		.4byte	0x76
 2756 0aac B70A0000 		.4byte	0xab7
 2757 0ab0 18       		.uleb128 0x18
 2758 0ab1 B7000000 		.4byte	0xb7
 2759 0ab5 00       		.byte	0
 2760 0ab6 00       		.byte	0
 2761 0ab7 1A       		.uleb128 0x1a
 2762 0ab8 E0070000 		.4byte	.LASF79
 2763 0abc 01       		.byte	0x1
 2764 0abd 61       		.byte	0x61
 2765 0abe C50A0000 		.4byte	0xac5
 2766 0ac2 02       		.byte	0x2
 2767 0ac3 00       		.byte	0
 2768 0ac4 19       		.byte	0x19
 2769 0ac5 06       		.uleb128 0x6
 2770 0ac6 A70A0000 		.4byte	0xaa7
 2771 0aca 17       		.uleb128 0x17
 2772 0acb 76000000 		.4byte	0x76
 2773 0acf DA0A0000 		.4byte	0xada
 2774 0ad3 18       		.uleb128 0x18
 2775 0ad4 B7000000 		.4byte	0xb7
 2776 0ad8 04       		.byte	0x4
 2777 0ad9 00       		.byte	0
 2778 0ada 1B       		.uleb128 0x1b
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 99


 2779 0adb 2B000000 		.4byte	.LASF80
 2780 0adf 01       		.byte	0x1
 2781 0ae0 2C       		.byte	0x2c
 2782 0ae1 CA0A0000 		.4byte	0xaca
 2783 0ae5 1B       		.uleb128 0x1b
 2784 0ae6 60030000 		.4byte	.LASF81
 2785 0aea 01       		.byte	0x1
 2786 0aeb 2D       		.byte	0x2d
 2787 0aec FB050000 		.4byte	0x5fb
 2788 0af0 17       		.uleb128 0x17
 2789 0af1 6B000000 		.4byte	0x6b
 2790 0af5 000B0000 		.4byte	0xb00
 2791 0af9 18       		.uleb128 0x18
 2792 0afa B7000000 		.4byte	0xb7
 2793 0afe 04       		.byte	0x4
 2794 0aff 00       		.byte	0
 2795 0b00 1B       		.uleb128 0x1b
 2796 0b01 14060000 		.4byte	.LASF82
 2797 0b05 01       		.byte	0x1
 2798 0b06 2E       		.byte	0x2e
 2799 0b07 0B0B0000 		.4byte	0xb0b
 2800 0b0b 06       		.uleb128 0x6
 2801 0b0c F00A0000 		.4byte	0xaf0
 2802 0b10 1C       		.uleb128 0x1c
 2803 0b11 DA000000 		.4byte	.LASF83
 2804 0b15 01       		.byte	0x1
 2805 0b16 34       		.byte	0x34
 2806 0b17 CA0A0000 		.4byte	0xaca
 2807 0b1b 05       		.uleb128 0x5
 2808 0b1c 03       		.byte	0x3
 2809 0b1d 00000000 		.4byte	CapSense_sensorBaseline
 2810 0b21 1C       		.uleb128 0x1c
 2811 0b22 56050000 		.4byte	.LASF84
 2812 0b26 01       		.byte	0x1
 2813 0b27 35       		.byte	0x35
 2814 0b28 F00A0000 		.4byte	0xaf0
 2815 0b2c 05       		.uleb128 0x5
 2816 0b2d 03       		.byte	0x3
 2817 0b2e 00000000 		.4byte	CapSense_sensorBaselineLow
 2818 0b32 1C       		.uleb128 0x1c
 2819 0b33 13040000 		.4byte	.LASF85
 2820 0b37 01       		.byte	0x1
 2821 0b38 36       		.byte	0x36
 2822 0b39 CA0A0000 		.4byte	0xaca
 2823 0b3d 05       		.uleb128 0x5
 2824 0b3e 03       		.byte	0x3
 2825 0b3f 00000000 		.4byte	CapSense_sensorSignal
 2826 0b43 1C       		.uleb128 0x1c
 2827 0b44 88020000 		.4byte	.LASF86
 2828 0b48 01       		.byte	0x1
 2829 0b49 37       		.byte	0x37
 2830 0b4a FB050000 		.4byte	0x5fb
 2831 0b4e 05       		.uleb128 0x5
 2832 0b4f 03       		.byte	0x3
 2833 0b50 00000000 		.4byte	CapSense_sensorOnMask
 2834 0b54 1C       		.uleb128 0x1c
 2835 0b55 87010000 		.4byte	.LASF87
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 100


 2836 0b59 01       		.byte	0x1
 2837 0b5a 39       		.byte	0x39
 2838 0b5b F00A0000 		.4byte	0xaf0
 2839 0b5f 05       		.uleb128 0x5
 2840 0b60 03       		.byte	0x3
 2841 0b61 00000000 		.4byte	CapSense_lowBaselineResetCnt
 2842 0b65 1C       		.uleb128 0x1c
 2843 0b66 9E020000 		.4byte	.LASF88
 2844 0b6a 01       		.byte	0x1
 2845 0b6b 3A       		.byte	0x3a
 2846 0b6c F00A0000 		.4byte	0xaf0
 2847 0b70 05       		.uleb128 0x5
 2848 0b71 03       		.byte	0x3
 2849 0b72 00000000 		.4byte	CapSense_lowBaselineReset
 2850 0b76 1C       		.uleb128 0x1c
 2851 0b77 FB050000 		.4byte	.LASF89
 2852 0b7b 01       		.byte	0x1
 2853 0b7c 49       		.byte	0x49
 2854 0b7d 870B0000 		.4byte	0xb87
 2855 0b81 05       		.uleb128 0x5
 2856 0b82 03       		.byte	0x3
 2857 0b83 00000000 		.4byte	CapSense_fingerThreshold
 2858 0b87 06       		.uleb128 0x6
 2859 0b88 A70A0000 		.4byte	0xaa7
 2860 0b8c 1C       		.uleb128 0x1c
 2861 0b8d 71050000 		.4byte	.LASF90
 2862 0b91 01       		.byte	0x1
 2863 0b92 4D       		.byte	0x4d
 2864 0b93 9D0B0000 		.4byte	0xb9d
 2865 0b97 05       		.uleb128 0x5
 2866 0b98 03       		.byte	0x3
 2867 0b99 00000000 		.4byte	CapSense_noiseThreshold
 2868 0b9d 06       		.uleb128 0x6
 2869 0b9e A70A0000 		.4byte	0xaa7
 2870 0ba2 1C       		.uleb128 0x1c
 2871 0ba3 C1000000 		.4byte	.LASF91
 2872 0ba7 01       		.byte	0x1
 2873 0ba8 51       		.byte	0x51
 2874 0ba9 B30B0000 		.4byte	0xbb3
 2875 0bad 05       		.uleb128 0x5
 2876 0bae 03       		.byte	0x3
 2877 0baf 00000000 		.4byte	CapSense_hysteresis
 2878 0bb3 06       		.uleb128 0x6
 2879 0bb4 A70A0000 		.4byte	0xaa7
 2880 0bb8 1C       		.uleb128 0x1c
 2881 0bb9 1F010000 		.4byte	.LASF92
 2882 0bbd 01       		.byte	0x1
 2883 0bbe 55       		.byte	0x55
 2884 0bbf C90B0000 		.4byte	0xbc9
 2885 0bc3 05       		.uleb128 0x5
 2886 0bc4 03       		.byte	0x3
 2887 0bc5 00000000 		.4byte	CapSense_debounce
 2888 0bc9 06       		.uleb128 0x6
 2889 0bca FB050000 		.4byte	0x5fb
 2890 0bce 1C       		.uleb128 0x1c
 2891 0bcf 46020000 		.4byte	.LASF93
 2892 0bd3 01       		.byte	0x1
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 101


 2893 0bd4 59       		.byte	0x59
 2894 0bd5 DF0B0000 		.4byte	0xbdf
 2895 0bd9 05       		.uleb128 0x5
 2896 0bda 03       		.byte	0x3
 2897 0bdb 00000000 		.4byte	CapSense_rawDataIndex
 2898 0bdf 06       		.uleb128 0x6
 2899 0be0 FB050000 		.4byte	0x5fb
 2900 0be4 1C       		.uleb128 0x1c
 2901 0be5 6E010000 		.4byte	.LASF94
 2902 0be9 01       		.byte	0x1
 2903 0bea 5D       		.byte	0x5d
 2904 0beb F50B0000 		.4byte	0xbf5
 2905 0bef 05       		.uleb128 0x5
 2906 0bf0 03       		.byte	0x3
 2907 0bf1 00000000 		.4byte	CapSense_numberOfSensors
 2908 0bf5 06       		.uleb128 0x6
 2909 0bf6 FB050000 		.4byte	0x5fb
 2910 0bfa 1D       		.uleb128 0x1d
 2911 0bfb 7A030000 		.4byte	.LASF98
 2912 0bff 03       		.byte	0x3
 2913 0c00 A0       		.byte	0xa0
 2914 0c01 0B0C0000 		.4byte	0xc0b
 2915 0c05 1E       		.uleb128 0x1e
 2916 0c06 81000000 		.4byte	0x81
 2917 0c0a 00       		.byte	0
 2918 0c0b 1F       		.uleb128 0x1f
 2919 0c0c AD060000 		.4byte	.LASF99
 2920 0c10 03       		.byte	0x3
 2921 0c11 9F       		.byte	0x9f
 2922 0c12 81000000 		.4byte	0x81
 2923 0c16 20       		.uleb128 0x20
 2924 0c17 AA010000 		.4byte	.LASF100
 2925 0c1b 03       		.byte	0x3
 2926 0c1c A2       		.byte	0xa2
 2927 0c1d 21       		.uleb128 0x21
 2928 0c1e DC010000 		.4byte	.LASF101
 2929 0c22 04       		.byte	0x4
 2930 0c23 6A       		.byte	0x6a
 2931 0c24 81000000 		.4byte	0x81
 2932 0c28 370C0000 		.4byte	0xc37
 2933 0c2c 1E       		.uleb128 0x1e
 2934 0c2d C4000000 		.4byte	0xc4
 2935 0c31 1E       		.uleb128 0x1e
 2936 0c32 81000000 		.4byte	0x81
 2937 0c36 00       		.byte	0
 2938 0c37 22       		.uleb128 0x22
 2939 0c38 8E040000 		.4byte	.LASF102
 2940 0c3c 04       		.byte	0x4
 2941 0c3d 6B       		.byte	0x6b
 2942 0c3e 1E       		.uleb128 0x1e
 2943 0c3f BE000000 		.4byte	0xbe
 2944 0c43 1E       		.uleb128 0x1e
 2945 0c44 81000000 		.4byte	0x81
 2946 0c48 1E       		.uleb128 0x1e
 2947 0c49 81000000 		.4byte	0x81
 2948 0c4d 00       		.byte	0
 2949 0c4e 00       		.byte	0
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 102


 2950              		.section	.debug_abbrev,"",%progbits
 2951              	.Ldebug_abbrev0:
 2952 0000 01       		.uleb128 0x1
 2953 0001 11       		.uleb128 0x11
 2954 0002 01       		.byte	0x1
 2955 0003 25       		.uleb128 0x25
 2956 0004 0E       		.uleb128 0xe
 2957 0005 13       		.uleb128 0x13
 2958 0006 0B       		.uleb128 0xb
 2959 0007 03       		.uleb128 0x3
 2960 0008 0E       		.uleb128 0xe
 2961 0009 1B       		.uleb128 0x1b
 2962 000a 0E       		.uleb128 0xe
 2963 000b 55       		.uleb128 0x55
 2964 000c 17       		.uleb128 0x17
 2965 000d 11       		.uleb128 0x11
 2966 000e 01       		.uleb128 0x1
 2967 000f 10       		.uleb128 0x10
 2968 0010 17       		.uleb128 0x17
 2969 0011 00       		.byte	0
 2970 0012 00       		.byte	0
 2971 0013 02       		.uleb128 0x2
 2972 0014 24       		.uleb128 0x24
 2973 0015 00       		.byte	0
 2974 0016 0B       		.uleb128 0xb
 2975 0017 0B       		.uleb128 0xb
 2976 0018 3E       		.uleb128 0x3e
 2977 0019 0B       		.uleb128 0xb
 2978 001a 03       		.uleb128 0x3
 2979 001b 0E       		.uleb128 0xe
 2980 001c 00       		.byte	0
 2981 001d 00       		.byte	0
 2982 001e 03       		.uleb128 0x3
 2983 001f 24       		.uleb128 0x24
 2984 0020 00       		.byte	0
 2985 0021 0B       		.uleb128 0xb
 2986 0022 0B       		.uleb128 0xb
 2987 0023 3E       		.uleb128 0x3e
 2988 0024 0B       		.uleb128 0xb
 2989 0025 03       		.uleb128 0x3
 2990 0026 08       		.uleb128 0x8
 2991 0027 00       		.byte	0
 2992 0028 00       		.byte	0
 2993 0029 04       		.uleb128 0x4
 2994 002a 16       		.uleb128 0x16
 2995 002b 00       		.byte	0
 2996 002c 03       		.uleb128 0x3
 2997 002d 0E       		.uleb128 0xe
 2998 002e 3A       		.uleb128 0x3a
 2999 002f 0B       		.uleb128 0xb
 3000 0030 3B       		.uleb128 0x3b
 3001 0031 0B       		.uleb128 0xb
 3002 0032 49       		.uleb128 0x49
 3003 0033 13       		.uleb128 0x13
 3004 0034 00       		.byte	0
 3005 0035 00       		.byte	0
 3006 0036 05       		.uleb128 0x5
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 103


 3007 0037 0F       		.uleb128 0xf
 3008 0038 00       		.byte	0
 3009 0039 0B       		.uleb128 0xb
 3010 003a 0B       		.uleb128 0xb
 3011 003b 49       		.uleb128 0x49
 3012 003c 13       		.uleb128 0x13
 3013 003d 00       		.byte	0
 3014 003e 00       		.byte	0
 3015 003f 06       		.uleb128 0x6
 3016 0040 26       		.uleb128 0x26
 3017 0041 00       		.byte	0
 3018 0042 49       		.uleb128 0x49
 3019 0043 13       		.uleb128 0x13
 3020 0044 00       		.byte	0
 3021 0045 00       		.byte	0
 3022 0046 07       		.uleb128 0x7
 3023 0047 2E       		.uleb128 0x2e
 3024 0048 01       		.byte	0x1
 3025 0049 3F       		.uleb128 0x3f
 3026 004a 19       		.uleb128 0x19
 3027 004b 03       		.uleb128 0x3
 3028 004c 0E       		.uleb128 0xe
 3029 004d 3A       		.uleb128 0x3a
 3030 004e 0B       		.uleb128 0xb
 3031 004f 3B       		.uleb128 0x3b
 3032 0050 0B       		.uleb128 0xb
 3033 0051 27       		.uleb128 0x27
 3034 0052 19       		.uleb128 0x19
 3035 0053 11       		.uleb128 0x11
 3036 0054 01       		.uleb128 0x1
 3037 0055 12       		.uleb128 0x12
 3038 0056 06       		.uleb128 0x6
 3039 0057 40       		.uleb128 0x40
 3040 0058 18       		.uleb128 0x18
 3041 0059 9742     		.uleb128 0x2117
 3042 005b 19       		.uleb128 0x19
 3043 005c 01       		.uleb128 0x1
 3044 005d 13       		.uleb128 0x13
 3045 005e 00       		.byte	0
 3046 005f 00       		.byte	0
 3047 0060 08       		.uleb128 0x8
 3048 0061 05       		.uleb128 0x5
 3049 0062 00       		.byte	0
 3050 0063 03       		.uleb128 0x3
 3051 0064 0E       		.uleb128 0xe
 3052 0065 3A       		.uleb128 0x3a
 3053 0066 0B       		.uleb128 0xb
 3054 0067 3B       		.uleb128 0x3b
 3055 0068 0B       		.uleb128 0xb
 3056 0069 49       		.uleb128 0x49
 3057 006a 13       		.uleb128 0x13
 3058 006b 02       		.uleb128 0x2
 3059 006c 17       		.uleb128 0x17
 3060 006d 00       		.byte	0
 3061 006e 00       		.byte	0
 3062 006f 09       		.uleb128 0x9
 3063 0070 898201   		.uleb128 0x4109
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 104


 3064 0073 01       		.byte	0x1
 3065 0074 11       		.uleb128 0x11
 3066 0075 01       		.uleb128 0x1
 3067 0076 31       		.uleb128 0x31
 3068 0077 13       		.uleb128 0x13
 3069 0078 01       		.uleb128 0x1
 3070 0079 13       		.uleb128 0x13
 3071 007a 00       		.byte	0
 3072 007b 00       		.byte	0
 3073 007c 0A       		.uleb128 0xa
 3074 007d 8A8201   		.uleb128 0x410a
 3075 0080 00       		.byte	0
 3076 0081 02       		.uleb128 0x2
 3077 0082 18       		.uleb128 0x18
 3078 0083 9142     		.uleb128 0x2111
 3079 0085 18       		.uleb128 0x18
 3080 0086 00       		.byte	0
 3081 0087 00       		.byte	0
 3082 0088 0B       		.uleb128 0xb
 3083 0089 898201   		.uleb128 0x4109
 3084 008c 00       		.byte	0
 3085 008d 11       		.uleb128 0x11
 3086 008e 01       		.uleb128 0x1
 3087 008f 31       		.uleb128 0x31
 3088 0090 13       		.uleb128 0x13
 3089 0091 00       		.byte	0
 3090 0092 00       		.byte	0
 3091 0093 0C       		.uleb128 0xc
 3092 0094 898201   		.uleb128 0x4109
 3093 0097 01       		.byte	0x1
 3094 0098 11       		.uleb128 0x11
 3095 0099 01       		.uleb128 0x1
 3096 009a 31       		.uleb128 0x31
 3097 009b 13       		.uleb128 0x13
 3098 009c 00       		.byte	0
 3099 009d 00       		.byte	0
 3100 009e 0D       		.uleb128 0xd
 3101 009f 34       		.uleb128 0x34
 3102 00a0 00       		.byte	0
 3103 00a1 03       		.uleb128 0x3
 3104 00a2 08       		.uleb128 0x8
 3105 00a3 3A       		.uleb128 0x3a
 3106 00a4 0B       		.uleb128 0xb
 3107 00a5 3B       		.uleb128 0x3b
 3108 00a6 0B       		.uleb128 0xb
 3109 00a7 49       		.uleb128 0x49
 3110 00a8 13       		.uleb128 0x13
 3111 00a9 02       		.uleb128 0x2
 3112 00aa 17       		.uleb128 0x17
 3113 00ab 00       		.byte	0
 3114 00ac 00       		.byte	0
 3115 00ad 0E       		.uleb128 0xe
 3116 00ae 2E       		.uleb128 0x2e
 3117 00af 01       		.byte	0x1
 3118 00b0 3F       		.uleb128 0x3f
 3119 00b1 19       		.uleb128 0x19
 3120 00b2 03       		.uleb128 0x3
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 105


 3121 00b3 0E       		.uleb128 0xe
 3122 00b4 3A       		.uleb128 0x3a
 3123 00b5 0B       		.uleb128 0xb
 3124 00b6 3B       		.uleb128 0x3b
 3125 00b7 05       		.uleb128 0x5
 3126 00b8 27       		.uleb128 0x27
 3127 00b9 19       		.uleb128 0x19
 3128 00ba 11       		.uleb128 0x11
 3129 00bb 01       		.uleb128 0x1
 3130 00bc 12       		.uleb128 0x12
 3131 00bd 06       		.uleb128 0x6
 3132 00be 40       		.uleb128 0x40
 3133 00bf 18       		.uleb128 0x18
 3134 00c0 9742     		.uleb128 0x2117
 3135 00c2 19       		.uleb128 0x19
 3136 00c3 01       		.uleb128 0x1
 3137 00c4 13       		.uleb128 0x13
 3138 00c5 00       		.byte	0
 3139 00c6 00       		.byte	0
 3140 00c7 0F       		.uleb128 0xf
 3141 00c8 34       		.uleb128 0x34
 3142 00c9 00       		.byte	0
 3143 00ca 03       		.uleb128 0x3
 3144 00cb 08       		.uleb128 0x8
 3145 00cc 3A       		.uleb128 0x3a
 3146 00cd 0B       		.uleb128 0xb
 3147 00ce 3B       		.uleb128 0x3b
 3148 00cf 05       		.uleb128 0x5
 3149 00d0 49       		.uleb128 0x49
 3150 00d1 13       		.uleb128 0x13
 3151 00d2 02       		.uleb128 0x2
 3152 00d3 17       		.uleb128 0x17
 3153 00d4 00       		.byte	0
 3154 00d5 00       		.byte	0
 3155 00d6 10       		.uleb128 0x10
 3156 00d7 34       		.uleb128 0x34
 3157 00d8 00       		.byte	0
 3158 00d9 03       		.uleb128 0x3
 3159 00da 0E       		.uleb128 0xe
 3160 00db 3A       		.uleb128 0x3a
 3161 00dc 0B       		.uleb128 0xb
 3162 00dd 3B       		.uleb128 0x3b
 3163 00de 05       		.uleb128 0x5
 3164 00df 49       		.uleb128 0x49
 3165 00e0 13       		.uleb128 0x13
 3166 00e1 02       		.uleb128 0x2
 3167 00e2 17       		.uleb128 0x17
 3168 00e3 00       		.byte	0
 3169 00e4 00       		.byte	0
 3170 00e5 11       		.uleb128 0x11
 3171 00e6 05       		.uleb128 0x5
 3172 00e7 00       		.byte	0
 3173 00e8 03       		.uleb128 0x3
 3174 00e9 0E       		.uleb128 0xe
 3175 00ea 3A       		.uleb128 0x3a
 3176 00eb 0B       		.uleb128 0xb
 3177 00ec 3B       		.uleb128 0x3b
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 106


 3178 00ed 05       		.uleb128 0x5
 3179 00ee 49       		.uleb128 0x49
 3180 00ef 13       		.uleb128 0x13
 3181 00f0 02       		.uleb128 0x2
 3182 00f1 17       		.uleb128 0x17
 3183 00f2 00       		.byte	0
 3184 00f3 00       		.byte	0
 3185 00f4 12       		.uleb128 0x12
 3186 00f5 34       		.uleb128 0x34
 3187 00f6 00       		.byte	0
 3188 00f7 03       		.uleb128 0x3
 3189 00f8 0E       		.uleb128 0xe
 3190 00f9 3A       		.uleb128 0x3a
 3191 00fa 0B       		.uleb128 0xb
 3192 00fb 3B       		.uleb128 0x3b
 3193 00fc 05       		.uleb128 0x5
 3194 00fd 49       		.uleb128 0x49
 3195 00fe 13       		.uleb128 0x13
 3196 00ff 00       		.byte	0
 3197 0100 00       		.byte	0
 3198 0101 13       		.uleb128 0x13
 3199 0102 34       		.uleb128 0x34
 3200 0103 00       		.byte	0
 3201 0104 03       		.uleb128 0x3
 3202 0105 0E       		.uleb128 0xe
 3203 0106 3A       		.uleb128 0x3a
 3204 0107 0B       		.uleb128 0xb
 3205 0108 3B       		.uleb128 0x3b
 3206 0109 05       		.uleb128 0x5
 3207 010a 49       		.uleb128 0x49
 3208 010b 13       		.uleb128 0x13
 3209 010c 1C       		.uleb128 0x1c
 3210 010d 0B       		.uleb128 0xb
 3211 010e 00       		.byte	0
 3212 010f 00       		.byte	0
 3213 0110 14       		.uleb128 0x14
 3214 0111 2E       		.uleb128 0x2e
 3215 0112 01       		.byte	0x1
 3216 0113 3F       		.uleb128 0x3f
 3217 0114 19       		.uleb128 0x19
 3218 0115 03       		.uleb128 0x3
 3219 0116 0E       		.uleb128 0xe
 3220 0117 3A       		.uleb128 0x3a
 3221 0118 0B       		.uleb128 0xb
 3222 0119 3B       		.uleb128 0x3b
 3223 011a 05       		.uleb128 0x5
 3224 011b 27       		.uleb128 0x27
 3225 011c 19       		.uleb128 0x19
 3226 011d 49       		.uleb128 0x49
 3227 011e 13       		.uleb128 0x13
 3228 011f 11       		.uleb128 0x11
 3229 0120 01       		.uleb128 0x1
 3230 0121 12       		.uleb128 0x12
 3231 0122 06       		.uleb128 0x6
 3232 0123 40       		.uleb128 0x40
 3233 0124 18       		.uleb128 0x18
 3234 0125 9742     		.uleb128 0x2117
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 107


 3235 0127 19       		.uleb128 0x19
 3236 0128 01       		.uleb128 0x1
 3237 0129 13       		.uleb128 0x13
 3238 012a 00       		.byte	0
 3239 012b 00       		.byte	0
 3240 012c 15       		.uleb128 0x15
 3241 012d 05       		.uleb128 0x5
 3242 012e 00       		.byte	0
 3243 012f 03       		.uleb128 0x3
 3244 0130 0E       		.uleb128 0xe
 3245 0131 3A       		.uleb128 0x3a
 3246 0132 0B       		.uleb128 0xb
 3247 0133 3B       		.uleb128 0x3b
 3248 0134 05       		.uleb128 0x5
 3249 0135 49       		.uleb128 0x49
 3250 0136 13       		.uleb128 0x13
 3251 0137 02       		.uleb128 0x2
 3252 0138 18       		.uleb128 0x18
 3253 0139 00       		.byte	0
 3254 013a 00       		.byte	0
 3255 013b 16       		.uleb128 0x16
 3256 013c 34       		.uleb128 0x34
 3257 013d 00       		.byte	0
 3258 013e 03       		.uleb128 0x3
 3259 013f 0E       		.uleb128 0xe
 3260 0140 3A       		.uleb128 0x3a
 3261 0141 0B       		.uleb128 0xb
 3262 0142 3B       		.uleb128 0x3b
 3263 0143 05       		.uleb128 0x5
 3264 0144 49       		.uleb128 0x49
 3265 0145 13       		.uleb128 0x13
 3266 0146 02       		.uleb128 0x2
 3267 0147 18       		.uleb128 0x18
 3268 0148 00       		.byte	0
 3269 0149 00       		.byte	0
 3270 014a 17       		.uleb128 0x17
 3271 014b 01       		.uleb128 0x1
 3272 014c 01       		.byte	0x1
 3273 014d 49       		.uleb128 0x49
 3274 014e 13       		.uleb128 0x13
 3275 014f 01       		.uleb128 0x1
 3276 0150 13       		.uleb128 0x13
 3277 0151 00       		.byte	0
 3278 0152 00       		.byte	0
 3279 0153 18       		.uleb128 0x18
 3280 0154 21       		.uleb128 0x21
 3281 0155 00       		.byte	0
 3282 0156 49       		.uleb128 0x49
 3283 0157 13       		.uleb128 0x13
 3284 0158 2F       		.uleb128 0x2f
 3285 0159 0B       		.uleb128 0xb
 3286 015a 00       		.byte	0
 3287 015b 00       		.byte	0
 3288 015c 19       		.uleb128 0x19
 3289 015d 2E       		.uleb128 0x2e
 3290 015e 01       		.byte	0x1
 3291 015f 3F       		.uleb128 0x3f
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 108


 3292 0160 19       		.uleb128 0x19
 3293 0161 03       		.uleb128 0x3
 3294 0162 0E       		.uleb128 0xe
 3295 0163 3A       		.uleb128 0x3a
 3296 0164 0B       		.uleb128 0xb
 3297 0165 3B       		.uleb128 0x3b
 3298 0166 05       		.uleb128 0x5
 3299 0167 27       		.uleb128 0x27
 3300 0168 19       		.uleb128 0x19
 3301 0169 49       		.uleb128 0x49
 3302 016a 13       		.uleb128 0x13
 3303 016b 11       		.uleb128 0x11
 3304 016c 01       		.uleb128 0x1
 3305 016d 12       		.uleb128 0x12
 3306 016e 06       		.uleb128 0x6
 3307 016f 40       		.uleb128 0x40
 3308 0170 18       		.uleb128 0x18
 3309 0171 9642     		.uleb128 0x2116
 3310 0173 19       		.uleb128 0x19
 3311 0174 01       		.uleb128 0x1
 3312 0175 13       		.uleb128 0x13
 3313 0176 00       		.byte	0
 3314 0177 00       		.byte	0
 3315 0178 1A       		.uleb128 0x1a
 3316 0179 34       		.uleb128 0x34
 3317 017a 00       		.byte	0
 3318 017b 03       		.uleb128 0x3
 3319 017c 0E       		.uleb128 0xe
 3320 017d 3A       		.uleb128 0x3a
 3321 017e 0B       		.uleb128 0xb
 3322 017f 3B       		.uleb128 0x3b
 3323 0180 0B       		.uleb128 0xb
 3324 0181 49       		.uleb128 0x49
 3325 0182 13       		.uleb128 0x13
 3326 0183 1C       		.uleb128 0x1c
 3327 0184 0A       		.uleb128 0xa
 3328 0185 00       		.byte	0
 3329 0186 00       		.byte	0
 3330 0187 1B       		.uleb128 0x1b
 3331 0188 34       		.uleb128 0x34
 3332 0189 00       		.byte	0
 3333 018a 03       		.uleb128 0x3
 3334 018b 0E       		.uleb128 0xe
 3335 018c 3A       		.uleb128 0x3a
 3336 018d 0B       		.uleb128 0xb
 3337 018e 3B       		.uleb128 0x3b
 3338 018f 0B       		.uleb128 0xb
 3339 0190 49       		.uleb128 0x49
 3340 0191 13       		.uleb128 0x13
 3341 0192 3F       		.uleb128 0x3f
 3342 0193 19       		.uleb128 0x19
 3343 0194 3C       		.uleb128 0x3c
 3344 0195 19       		.uleb128 0x19
 3345 0196 00       		.byte	0
 3346 0197 00       		.byte	0
 3347 0198 1C       		.uleb128 0x1c
 3348 0199 34       		.uleb128 0x34
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 109


 3349 019a 00       		.byte	0
 3350 019b 03       		.uleb128 0x3
 3351 019c 0E       		.uleb128 0xe
 3352 019d 3A       		.uleb128 0x3a
 3353 019e 0B       		.uleb128 0xb
 3354 019f 3B       		.uleb128 0x3b
 3355 01a0 0B       		.uleb128 0xb
 3356 01a1 49       		.uleb128 0x49
 3357 01a2 13       		.uleb128 0x13
 3358 01a3 3F       		.uleb128 0x3f
 3359 01a4 19       		.uleb128 0x19
 3360 01a5 02       		.uleb128 0x2
 3361 01a6 18       		.uleb128 0x18
 3362 01a7 00       		.byte	0
 3363 01a8 00       		.byte	0
 3364 01a9 1D       		.uleb128 0x1d
 3365 01aa 2E       		.uleb128 0x2e
 3366 01ab 01       		.byte	0x1
 3367 01ac 3F       		.uleb128 0x3f
 3368 01ad 19       		.uleb128 0x19
 3369 01ae 03       		.uleb128 0x3
 3370 01af 0E       		.uleb128 0xe
 3371 01b0 3A       		.uleb128 0x3a
 3372 01b1 0B       		.uleb128 0xb
 3373 01b2 3B       		.uleb128 0x3b
 3374 01b3 0B       		.uleb128 0xb
 3375 01b4 27       		.uleb128 0x27
 3376 01b5 19       		.uleb128 0x19
 3377 01b6 3C       		.uleb128 0x3c
 3378 01b7 19       		.uleb128 0x19
 3379 01b8 01       		.uleb128 0x1
 3380 01b9 13       		.uleb128 0x13
 3381 01ba 00       		.byte	0
 3382 01bb 00       		.byte	0
 3383 01bc 1E       		.uleb128 0x1e
 3384 01bd 05       		.uleb128 0x5
 3385 01be 00       		.byte	0
 3386 01bf 49       		.uleb128 0x49
 3387 01c0 13       		.uleb128 0x13
 3388 01c1 00       		.byte	0
 3389 01c2 00       		.byte	0
 3390 01c3 1F       		.uleb128 0x1f
 3391 01c4 2E       		.uleb128 0x2e
 3392 01c5 00       		.byte	0
 3393 01c6 3F       		.uleb128 0x3f
 3394 01c7 19       		.uleb128 0x19
 3395 01c8 03       		.uleb128 0x3
 3396 01c9 0E       		.uleb128 0xe
 3397 01ca 3A       		.uleb128 0x3a
 3398 01cb 0B       		.uleb128 0xb
 3399 01cc 3B       		.uleb128 0x3b
 3400 01cd 0B       		.uleb128 0xb
 3401 01ce 27       		.uleb128 0x27
 3402 01cf 19       		.uleb128 0x19
 3403 01d0 49       		.uleb128 0x49
 3404 01d1 13       		.uleb128 0x13
 3405 01d2 3C       		.uleb128 0x3c
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 110


 3406 01d3 19       		.uleb128 0x19
 3407 01d4 00       		.byte	0
 3408 01d5 00       		.byte	0
 3409 01d6 20       		.uleb128 0x20
 3410 01d7 2E       		.uleb128 0x2e
 3411 01d8 00       		.byte	0
 3412 01d9 3F       		.uleb128 0x3f
 3413 01da 19       		.uleb128 0x19
 3414 01db 03       		.uleb128 0x3
 3415 01dc 0E       		.uleb128 0xe
 3416 01dd 3A       		.uleb128 0x3a
 3417 01de 0B       		.uleb128 0xb
 3418 01df 3B       		.uleb128 0x3b
 3419 01e0 0B       		.uleb128 0xb
 3420 01e1 27       		.uleb128 0x27
 3421 01e2 19       		.uleb128 0x19
 3422 01e3 3C       		.uleb128 0x3c
 3423 01e4 19       		.uleb128 0x19
 3424 01e5 00       		.byte	0
 3425 01e6 00       		.byte	0
 3426 01e7 21       		.uleb128 0x21
 3427 01e8 2E       		.uleb128 0x2e
 3428 01e9 01       		.byte	0x1
 3429 01ea 3F       		.uleb128 0x3f
 3430 01eb 19       		.uleb128 0x19
 3431 01ec 03       		.uleb128 0x3
 3432 01ed 0E       		.uleb128 0xe
 3433 01ee 3A       		.uleb128 0x3a
 3434 01ef 0B       		.uleb128 0xb
 3435 01f0 3B       		.uleb128 0x3b
 3436 01f1 0B       		.uleb128 0xb
 3437 01f2 27       		.uleb128 0x27
 3438 01f3 19       		.uleb128 0x19
 3439 01f4 49       		.uleb128 0x49
 3440 01f5 13       		.uleb128 0x13
 3441 01f6 3C       		.uleb128 0x3c
 3442 01f7 19       		.uleb128 0x19
 3443 01f8 01       		.uleb128 0x1
 3444 01f9 13       		.uleb128 0x13
 3445 01fa 00       		.byte	0
 3446 01fb 00       		.byte	0
 3447 01fc 22       		.uleb128 0x22
 3448 01fd 2E       		.uleb128 0x2e
 3449 01fe 01       		.byte	0x1
 3450 01ff 3F       		.uleb128 0x3f
 3451 0200 19       		.uleb128 0x19
 3452 0201 03       		.uleb128 0x3
 3453 0202 0E       		.uleb128 0xe
 3454 0203 3A       		.uleb128 0x3a
 3455 0204 0B       		.uleb128 0xb
 3456 0205 3B       		.uleb128 0x3b
 3457 0206 0B       		.uleb128 0xb
 3458 0207 27       		.uleb128 0x27
 3459 0208 19       		.uleb128 0x19
 3460 0209 3C       		.uleb128 0x3c
 3461 020a 19       		.uleb128 0x19
 3462 020b 00       		.byte	0
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 111


 3463 020c 00       		.byte	0
 3464 020d 00       		.byte	0
 3465              		.section	.debug_loc,"",%progbits
 3466              	.Ldebug_loc0:
 3467              	.LLST0:
 3468 0000 00000000 		.4byte	.LVL0
 3469 0004 0C000000 		.4byte	.LVL1
 3470 0008 0100     		.2byte	0x1
 3471 000a 50       		.byte	0x50
 3472 000b 0C000000 		.4byte	.LVL1
 3473 000f 20000000 		.4byte	.LFE35
 3474 0013 0400     		.2byte	0x4
 3475 0015 F3       		.byte	0xf3
 3476 0016 01       		.uleb128 0x1
 3477 0017 50       		.byte	0x50
 3478 0018 9F       		.byte	0x9f
 3479 0019 00000000 		.4byte	0
 3480 001d 00000000 		.4byte	0
 3481              	.LLST1:
 3482 0021 00000000 		.4byte	.LVL2
 3483 0025 07000000 		.4byte	.LVL3-1
 3484 0029 0100     		.2byte	0x1
 3485 002b 50       		.byte	0x50
 3486 002c 07000000 		.4byte	.LVL3-1
 3487 0030 16000000 		.4byte	.LVL6
 3488 0034 0100     		.2byte	0x1
 3489 0036 54       		.byte	0x54
 3490 0037 16000000 		.4byte	.LVL6
 3491 003b 18000000 		.4byte	.LFE36
 3492 003f 0400     		.2byte	0x4
 3493 0041 F3       		.byte	0xf3
 3494 0042 01       		.uleb128 0x1
 3495 0043 50       		.byte	0x50
 3496 0044 9F       		.byte	0x9f
 3497 0045 00000000 		.4byte	0
 3498 0049 00000000 		.4byte	0
 3499              	.LLST2:
 3500 004d 02000000 		.4byte	.LVL7
 3501 0051 06000000 		.4byte	.LVL8
 3502 0055 0200     		.2byte	0x2
 3503 0057 30       		.byte	0x30
 3504 0058 9F       		.byte	0x9f
 3505 0059 06000000 		.4byte	.LVL8
 3506 005d 12000000 		.4byte	.LVL11
 3507 0061 0100     		.2byte	0x1
 3508 0063 54       		.byte	0x54
 3509 0064 00000000 		.4byte	0
 3510 0068 00000000 		.4byte	0
 3511              	.LLST3:
 3512 006c 12000000 		.4byte	.LVL14
 3513 0070 2A000000 		.4byte	.LVL19
 3514 0074 0100     		.2byte	0x1
 3515 0076 54       		.byte	0x54
 3516 0077 00000000 		.4byte	0
 3517 007b 00000000 		.4byte	0
 3518              	.LLST4:
 3519 007f 1A000000 		.4byte	.LVL15
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 112


 3520 0083 20000000 		.4byte	.LVL16
 3521 0087 0100     		.2byte	0x1
 3522 0089 50       		.byte	0x50
 3523 008a 00000000 		.4byte	0
 3524 008e 00000000 		.4byte	0
 3525              	.LLST5:
 3526 0092 00000000 		.4byte	.LVL20
 3527 0096 0A000000 		.4byte	.LVL22
 3528 009a 0100     		.2byte	0x1
 3529 009c 50       		.byte	0x50
 3530 009d 0A000000 		.4byte	.LVL22
 3531 00a1 86000000 		.4byte	.LVL37
 3532 00a5 0100     		.2byte	0x1
 3533 00a7 54       		.byte	0x54
 3534 00a8 86000000 		.4byte	.LVL37
 3535 00ac 8E000000 		.4byte	.LVL38
 3536 00b0 0400     		.2byte	0x4
 3537 00b2 F3       		.byte	0xf3
 3538 00b3 01       		.uleb128 0x1
 3539 00b4 50       		.byte	0x50
 3540 00b5 9F       		.byte	0x9f
 3541 00b6 8E000000 		.4byte	.LVL38
 3542 00ba 90000000 		.4byte	.LVL39
 3543 00be 0100     		.2byte	0x1
 3544 00c0 54       		.byte	0x54
 3545 00c1 90000000 		.4byte	.LVL39
 3546 00c5 AC000000 		.4byte	.LFE39
 3547 00c9 0400     		.2byte	0x4
 3548 00cb F3       		.byte	0xf3
 3549 00cc 01       		.uleb128 0x1
 3550 00cd 50       		.byte	0x50
 3551 00ce 9F       		.byte	0x9f
 3552 00cf 00000000 		.4byte	0
 3553 00d3 00000000 		.4byte	0
 3554              	.LLST6:
 3555 00d7 5E000000 		.4byte	.LVL30
 3556 00db 68000000 		.4byte	.LVL31
 3557 00df 0100     		.2byte	0x1
 3558 00e1 52       		.byte	0x52
 3559 00e2 68000000 		.4byte	.LVL31
 3560 00e6 7A000000 		.4byte	.LVL35
 3561 00ea 0100     		.2byte	0x1
 3562 00ec 53       		.byte	0x53
 3563 00ed 00000000 		.4byte	0
 3564 00f1 00000000 		.4byte	0
 3565              	.LLST7:
 3566 00f5 1C000000 		.4byte	.LVL23
 3567 00f9 20000000 		.4byte	.LVL24
 3568 00fd 0200     		.2byte	0x2
 3569 00ff 31       		.byte	0x31
 3570 0100 9F       		.byte	0x9f
 3571 0101 24000000 		.4byte	.LVL25
 3572 0105 26000000 		.4byte	.LVL26
 3573 0109 0200     		.2byte	0x2
 3574 010b 30       		.byte	0x30
 3575 010c 9F       		.byte	0x9f
 3576 010d 26000000 		.4byte	.LVL26
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 113


 3577 0111 98000000 		.4byte	.LVL41
 3578 0115 0100     		.2byte	0x1
 3579 0117 56       		.byte	0x56
 3580 0118 00000000 		.4byte	0
 3581 011c 00000000 		.4byte	0
 3582              	.LLST8:
 3583 0120 1C000000 		.4byte	.LVL23
 3584 0124 20000000 		.4byte	.LVL24
 3585 0128 0100     		.2byte	0x1
 3586 012a 55       		.byte	0x55
 3587 012b 24000000 		.4byte	.LVL25
 3588 012f 98000000 		.4byte	.LVL40
 3589 0133 0100     		.2byte	0x1
 3590 0135 55       		.byte	0x55
 3591 0136 00000000 		.4byte	0
 3592 013a 00000000 		.4byte	0
 3593              	.LLST9:
 3594 013e 0A000000 		.4byte	.LVL22
 3595 0142 3C000000 		.4byte	.LVL27
 3596 0146 0100     		.2byte	0x1
 3597 0148 50       		.byte	0x50
 3598 0149 48000000 		.4byte	.LVL29
 3599 014d 72000000 		.4byte	.LVL34
 3600 0151 0100     		.2byte	0x1
 3601 0153 50       		.byte	0x50
 3602 0154 00000000 		.4byte	0
 3603 0158 00000000 		.4byte	0
 3604              	.LLST10:
 3605 015c 00000000 		.4byte	.LVL42
 3606 0160 05000000 		.4byte	.LVL43-1
 3607 0164 0100     		.2byte	0x1
 3608 0166 50       		.byte	0x50
 3609 0167 05000000 		.4byte	.LVL43-1
 3610 016b 08000000 		.4byte	.LFE40
 3611 016f 0400     		.2byte	0x4
 3612 0171 F3       		.byte	0xf3
 3613 0172 01       		.uleb128 0x1
 3614 0173 50       		.byte	0x50
 3615 0174 9F       		.byte	0x9f
 3616 0175 00000000 		.4byte	0
 3617 0179 00000000 		.4byte	0
 3618              	.LLST11:
 3619 017d 02000000 		.4byte	.LVL44
 3620 0181 06000000 		.4byte	.LVL45
 3621 0185 0200     		.2byte	0x2
 3622 0187 30       		.byte	0x30
 3623 0188 9F       		.byte	0x9f
 3624 0189 06000000 		.4byte	.LVL45
 3625 018d 1E000000 		.4byte	.LVL50
 3626 0191 0100     		.2byte	0x1
 3627 0193 54       		.byte	0x54
 3628 0194 00000000 		.4byte	0
 3629 0198 00000000 		.4byte	0
 3630              	.LLST12:
 3631 019c 0E000000 		.4byte	.LVL46
 3632 01a0 14000000 		.4byte	.LVL47
 3633 01a4 0100     		.2byte	0x1
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 114


 3634 01a6 50       		.byte	0x50
 3635 01a7 00000000 		.4byte	0
 3636 01ab 00000000 		.4byte	0
 3637              	.LLST13:
 3638 01af 00000000 		.4byte	.LVL51
 3639 01b3 06000000 		.4byte	.LVL53
 3640 01b7 0100     		.2byte	0x1
 3641 01b9 50       		.byte	0x50
 3642 01ba 06000000 		.4byte	.LVL53
 3643 01be 24000000 		.4byte	.LFE42
 3644 01c2 0400     		.2byte	0x4
 3645 01c4 F3       		.byte	0xf3
 3646 01c5 01       		.uleb128 0x1
 3647 01c6 50       		.byte	0x50
 3648 01c7 9F       		.byte	0x9f
 3649 01c8 00000000 		.4byte	0
 3650 01cc 00000000 		.4byte	0
 3651              	.LLST14:
 3652 01d0 02000000 		.4byte	.LVL52
 3653 01d4 06000000 		.4byte	.LVL53
 3654 01d8 0200     		.2byte	0x2
 3655 01da 30       		.byte	0x30
 3656 01db 9F       		.byte	0x9f
 3657 01dc 06000000 		.4byte	.LVL53
 3658 01e0 1E000000 		.4byte	.LVL58
 3659 01e4 0100     		.2byte	0x1
 3660 01e6 54       		.byte	0x54
 3661 01e7 00000000 		.4byte	0
 3662 01eb 00000000 		.4byte	0
 3663              	.LLST15:
 3664 01ef 0E000000 		.4byte	.LVL54
 3665 01f3 14000000 		.4byte	.LVL55
 3666 01f7 0100     		.2byte	0x1
 3667 01f9 50       		.byte	0x50
 3668 01fa 00000000 		.4byte	0
 3669 01fe 00000000 		.4byte	0
 3670              	.LLST16:
 3671 0202 00000000 		.4byte	.LVL59
 3672 0206 02000000 		.4byte	.LVL60
 3673 020a 0100     		.2byte	0x1
 3674 020c 50       		.byte	0x50
 3675 020d 02000000 		.4byte	.LVL60
 3676 0211 0C000000 		.4byte	.LFE43
 3677 0215 0400     		.2byte	0x4
 3678 0217 F3       		.byte	0xf3
 3679 0218 01       		.uleb128 0x1
 3680 0219 50       		.byte	0x50
 3681 021a 9F       		.byte	0x9f
 3682 021b 00000000 		.4byte	0
 3683 021f 00000000 		.4byte	0
 3684              	.LLST17:
 3685 0223 00000000 		.4byte	.LVL61
 3686 0227 02000000 		.4byte	.LVL62
 3687 022b 0100     		.2byte	0x1
 3688 022d 50       		.byte	0x50
 3689 022e 02000000 		.4byte	.LVL62
 3690 0232 0C000000 		.4byte	.LFE44
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 115


 3691 0236 0400     		.2byte	0x4
 3692 0238 F3       		.byte	0xf3
 3693 0239 01       		.uleb128 0x1
 3694 023a 50       		.byte	0x50
 3695 023b 9F       		.byte	0x9f
 3696 023c 00000000 		.4byte	0
 3697 0240 00000000 		.4byte	0
 3698              	.LLST18:
 3699 0244 00000000 		.4byte	.LVL63
 3700 0248 02000000 		.4byte	.LVL64
 3701 024c 0100     		.2byte	0x1
 3702 024e 50       		.byte	0x50
 3703 024f 02000000 		.4byte	.LVL64
 3704 0253 10000000 		.4byte	.LFE45
 3705 0257 0400     		.2byte	0x4
 3706 0259 F3       		.byte	0xf3
 3707 025a 01       		.uleb128 0x1
 3708 025b 50       		.byte	0x50
 3709 025c 9F       		.byte	0x9f
 3710 025d 00000000 		.4byte	0
 3711 0261 00000000 		.4byte	0
 3712              	.LLST19:
 3713 0265 00000000 		.4byte	.LVL65
 3714 0269 02000000 		.4byte	.LVL66
 3715 026d 0100     		.2byte	0x1
 3716 026f 50       		.byte	0x50
 3717 0270 02000000 		.4byte	.LVL66
 3718 0274 10000000 		.4byte	.LFE46
 3719 0278 0400     		.2byte	0x4
 3720 027a F3       		.byte	0xf3
 3721 027b 01       		.uleb128 0x1
 3722 027c 50       		.byte	0x50
 3723 027d 9F       		.byte	0x9f
 3724 027e 00000000 		.4byte	0
 3725 0282 00000000 		.4byte	0
 3726              	.LLST20:
 3727 0286 00000000 		.4byte	.LVL67
 3728 028a 02000000 		.4byte	.LVL68
 3729 028e 0100     		.2byte	0x1
 3730 0290 50       		.byte	0x50
 3731 0291 02000000 		.4byte	.LVL68
 3732 0295 04000000 		.4byte	.LFE47
 3733 0299 0400     		.2byte	0x4
 3734 029b F3       		.byte	0xf3
 3735 029c 01       		.uleb128 0x1
 3736 029d 50       		.byte	0x50
 3737 029e 9F       		.byte	0x9f
 3738 029f 00000000 		.4byte	0
 3739 02a3 00000000 		.4byte	0
 3740              	.LLST21:
 3741 02a7 00000000 		.4byte	.LVL69
 3742 02ab 02000000 		.4byte	.LVL70
 3743 02af 0100     		.2byte	0x1
 3744 02b1 50       		.byte	0x50
 3745 02b2 02000000 		.4byte	.LVL70
 3746 02b6 04000000 		.4byte	.LFE48
 3747 02ba 0400     		.2byte	0x4
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 116


 3748 02bc F3       		.byte	0xf3
 3749 02bd 01       		.uleb128 0x1
 3750 02be 50       		.byte	0x50
 3751 02bf 9F       		.byte	0x9f
 3752 02c0 00000000 		.4byte	0
 3753 02c4 00000000 		.4byte	0
 3754              	.LLST22:
 3755 02c8 00000000 		.4byte	.LVL71
 3756 02cc 02000000 		.4byte	.LVL72
 3757 02d0 0100     		.2byte	0x1
 3758 02d2 50       		.byte	0x50
 3759 02d3 02000000 		.4byte	.LVL72
 3760 02d7 04000000 		.4byte	.LFE49
 3761 02db 0400     		.2byte	0x4
 3762 02dd F3       		.byte	0xf3
 3763 02de 01       		.uleb128 0x1
 3764 02df 50       		.byte	0x50
 3765 02e0 9F       		.byte	0x9f
 3766 02e1 00000000 		.4byte	0
 3767 02e5 00000000 		.4byte	0
 3768              	.LLST23:
 3769 02e9 00000000 		.4byte	.LVL73
 3770 02ed 02000000 		.4byte	.LVL74
 3771 02f1 0100     		.2byte	0x1
 3772 02f3 50       		.byte	0x50
 3773 02f4 02000000 		.4byte	.LVL74
 3774 02f8 04000000 		.4byte	.LFE50
 3775 02fc 0400     		.2byte	0x4
 3776 02fe F3       		.byte	0xf3
 3777 02ff 01       		.uleb128 0x1
 3778 0300 50       		.byte	0x50
 3779 0301 9F       		.byte	0x9f
 3780 0302 00000000 		.4byte	0
 3781 0306 00000000 		.4byte	0
 3782              	.LLST24:
 3783 030a 00000000 		.4byte	.LVL75
 3784 030e 06000000 		.4byte	.LVL77
 3785 0312 0100     		.2byte	0x1
 3786 0314 50       		.byte	0x50
 3787 0315 06000000 		.4byte	.LVL77
 3788 0319 7C000000 		.4byte	.LVL82
 3789 031d 0100     		.2byte	0x1
 3790 031f 54       		.byte	0x54
 3791 0320 7C000000 		.4byte	.LVL82
 3792 0324 84000000 		.4byte	.LFE51
 3793 0328 0400     		.2byte	0x4
 3794 032a F3       		.byte	0xf3
 3795 032b 01       		.uleb128 0x1
 3796 032c 50       		.byte	0x50
 3797 032d 9F       		.byte	0x9f
 3798 032e 00000000 		.4byte	0
 3799 0332 00000000 		.4byte	0
 3800              	.LLST25:
 3801 0336 00000000 		.4byte	.LVL83
 3802 033a 06000000 		.4byte	.LVL85
 3803 033e 0100     		.2byte	0x1
 3804 0340 50       		.byte	0x50
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 117


 3805 0341 06000000 		.4byte	.LVL85
 3806 0345 1C000000 		.4byte	.LFE52
 3807 0349 0400     		.2byte	0x4
 3808 034b F3       		.byte	0xf3
 3809 034c 01       		.uleb128 0x1
 3810 034d 50       		.byte	0x50
 3811 034e 9F       		.byte	0x9f
 3812 034f 00000000 		.4byte	0
 3813 0353 00000000 		.4byte	0
 3814              	.LLST26:
 3815 0357 02000000 		.4byte	.LVL84
 3816 035b 06000000 		.4byte	.LVL85
 3817 035f 0200     		.2byte	0x2
 3818 0361 30       		.byte	0x30
 3819 0362 9F       		.byte	0x9f
 3820 0363 06000000 		.4byte	.LVL85
 3821 0367 1A000000 		.4byte	.LVL89
 3822 036b 0100     		.2byte	0x1
 3823 036d 54       		.byte	0x54
 3824 036e 00000000 		.4byte	0
 3825 0372 00000000 		.4byte	0
 3826              	.LLST27:
 3827 0376 02000000 		.4byte	.LVL84
 3828 037a 06000000 		.4byte	.LVL85
 3829 037e 0200     		.2byte	0x2
 3830 0380 30       		.byte	0x30
 3831 0381 9F       		.byte	0x9f
 3832 0382 06000000 		.4byte	.LVL85
 3833 0386 1A000000 		.4byte	.LVL90
 3834 038a 0100     		.2byte	0x1
 3835 038c 55       		.byte	0x55
 3836 038d 1A000000 		.4byte	.LVL90
 3837 0391 1C000000 		.4byte	.LFE52
 3838 0395 0100     		.2byte	0x1
 3839 0397 50       		.byte	0x50
 3840 0398 00000000 		.4byte	0
 3841 039c 00000000 		.4byte	0
 3842              	.LLST28:
 3843 03a0 02000000 		.4byte	.LVL91
 3844 03a4 08000000 		.4byte	.LVL92
 3845 03a8 0200     		.2byte	0x2
 3846 03aa 30       		.byte	0x30
 3847 03ab 9F       		.byte	0x9f
 3848 03ac 08000000 		.4byte	.LVL92
 3849 03b0 1C000000 		.4byte	.LVL96
 3850 03b4 0100     		.2byte	0x1
 3851 03b6 54       		.byte	0x54
 3852 03b7 00000000 		.4byte	0
 3853 03bb 00000000 		.4byte	0
 3854              	.LLST29:
 3855 03bf 02000000 		.4byte	.LVL91
 3856 03c3 08000000 		.4byte	.LVL92
 3857 03c7 0200     		.2byte	0x2
 3858 03c9 30       		.byte	0x30
 3859 03ca 9F       		.byte	0x9f
 3860 03cb 08000000 		.4byte	.LVL92
 3861 03cf 1C000000 		.4byte	.LVL97
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 118


 3862 03d3 0100     		.2byte	0x1
 3863 03d5 55       		.byte	0x55
 3864 03d6 1C000000 		.4byte	.LVL97
 3865 03da 1E000000 		.4byte	.LFE53
 3866 03de 0100     		.2byte	0x1
 3867 03e0 50       		.byte	0x50
 3868 03e1 00000000 		.4byte	0
 3869 03e5 00000000 		.4byte	0
 3870              	.LLST30:
 3871 03e9 00000000 		.4byte	.LVL98
 3872 03ed 04000000 		.4byte	.LVL100
 3873 03f1 0100     		.2byte	0x1
 3874 03f3 50       		.byte	0x50
 3875 03f4 04000000 		.4byte	.LVL100
 3876 03f8 1C000000 		.4byte	.LFE54
 3877 03fc 0400     		.2byte	0x4
 3878 03fe F3       		.byte	0xf3
 3879 03ff 01       		.uleb128 0x1
 3880 0400 50       		.byte	0x50
 3881 0401 9F       		.byte	0x9f
 3882 0402 00000000 		.4byte	0
 3883 0406 00000000 		.4byte	0
 3884              	.LLST31:
 3885 040a 02000000 		.4byte	.LVL99
 3886 040e 04000000 		.4byte	.LVL100
 3887 0412 0200     		.2byte	0x2
 3888 0414 30       		.byte	0x30
 3889 0415 9F       		.byte	0x9f
 3890 0416 04000000 		.4byte	.LVL100
 3891 041a 10000000 		.4byte	.LVL102
 3892 041e 0100     		.2byte	0x1
 3893 0420 54       		.byte	0x54
 3894 0421 12000000 		.4byte	.LVL103
 3895 0425 16000000 		.4byte	.LVL104
 3896 0429 0100     		.2byte	0x1
 3897 042b 54       		.byte	0x54
 3898 042c 00000000 		.4byte	0
 3899 0430 00000000 		.4byte	0
 3900              	.LLST32:
 3901 0434 00000000 		.4byte	.LVL105
 3902 0438 04000000 		.4byte	.LVL107
 3903 043c 0100     		.2byte	0x1
 3904 043e 50       		.byte	0x50
 3905 043f 04000000 		.4byte	.LVL107
 3906 0443 1C000000 		.4byte	.LFE55
 3907 0447 0400     		.2byte	0x4
 3908 0449 F3       		.byte	0xf3
 3909 044a 01       		.uleb128 0x1
 3910 044b 50       		.byte	0x50
 3911 044c 9F       		.byte	0x9f
 3912 044d 00000000 		.4byte	0
 3913 0451 00000000 		.4byte	0
 3914              	.LLST33:
 3915 0455 02000000 		.4byte	.LVL106
 3916 0459 04000000 		.4byte	.LVL107
 3917 045d 0200     		.2byte	0x2
 3918 045f 30       		.byte	0x30
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 119


 3919 0460 9F       		.byte	0x9f
 3920 0461 04000000 		.4byte	.LVL107
 3921 0465 10000000 		.4byte	.LVL109
 3922 0469 0100     		.2byte	0x1
 3923 046b 54       		.byte	0x54
 3924 046c 12000000 		.4byte	.LVL110
 3925 0470 16000000 		.4byte	.LVL111
 3926 0474 0100     		.2byte	0x1
 3927 0476 54       		.byte	0x54
 3928 0477 00000000 		.4byte	0
 3929 047b 00000000 		.4byte	0
 3930              	.LLST34:
 3931 047f 00000000 		.4byte	.LVL112
 3932 0483 04000000 		.4byte	.LVL114
 3933 0487 0100     		.2byte	0x1
 3934 0489 50       		.byte	0x50
 3935 048a 04000000 		.4byte	.LVL114
 3936 048e 30000000 		.4byte	.LFE56
 3937 0492 0400     		.2byte	0x4
 3938 0494 F3       		.byte	0xf3
 3939 0495 01       		.uleb128 0x1
 3940 0496 50       		.byte	0x50
 3941 0497 9F       		.byte	0x9f
 3942 0498 00000000 		.4byte	0
 3943 049c 00000000 		.4byte	0
 3944              	.LLST35:
 3945 04a0 0A000000 		.4byte	.LVL115
 3946 04a4 12000000 		.4byte	.LVL116
 3947 04a8 0200     		.2byte	0x2
 3948 04aa 30       		.byte	0x30
 3949 04ab 9F       		.byte	0x9f
 3950 04ac 12000000 		.4byte	.LVL116
 3951 04b0 24000000 		.4byte	.LVL119
 3952 04b4 0100     		.2byte	0x1
 3953 04b6 53       		.byte	0x53
 3954 04b7 26000000 		.4byte	.LVL120
 3955 04bb 30000000 		.4byte	.LFE56
 3956 04bf 0100     		.2byte	0x1
 3957 04c1 53       		.byte	0x53
 3958 04c2 00000000 		.4byte	0
 3959 04c6 00000000 		.4byte	0
 3960              	.LLST36:
 3961 04ca 02000000 		.4byte	.LVL113
 3962 04ce 12000000 		.4byte	.LVL116
 3963 04d2 0300     		.2byte	0x3
 3964 04d4 09       		.byte	0x9
 3965 04d5 FF       		.byte	0xff
 3966 04d6 9F       		.byte	0x9f
 3967 04d7 12000000 		.4byte	.LVL116
 3968 04db 30000000 		.4byte	.LFE56
 3969 04df 0100     		.2byte	0x1
 3970 04e1 50       		.byte	0x50
 3971 04e2 00000000 		.4byte	0
 3972 04e6 00000000 		.4byte	0
 3973              	.LLST37:
 3974 04ea 02000000 		.4byte	.LVL113
 3975 04ee 12000000 		.4byte	.LVL116
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 120


 3976 04f2 0200     		.2byte	0x2
 3977 04f4 30       		.byte	0x30
 3978 04f5 9F       		.byte	0x9f
 3979 04f6 12000000 		.4byte	.LVL116
 3980 04fa 20000000 		.4byte	.LVL117
 3981 04fe 0100     		.2byte	0x1
 3982 0500 56       		.byte	0x56
 3983 0501 22000000 		.4byte	.LVL118
 3984 0505 2A000000 		.4byte	.LVL122
 3985 0509 0100     		.2byte	0x1
 3986 050b 56       		.byte	0x56
 3987 050c 00000000 		.4byte	0
 3988 0510 00000000 		.4byte	0
 3989              	.LLST38:
 3990 0514 0A000000 		.4byte	.LVL115
 3991 0518 2A000000 		.4byte	.LVL121
 3992 051c 0100     		.2byte	0x1
 3993 051e 55       		.byte	0x55
 3994 051f 00000000 		.4byte	0
 3995 0523 00000000 		.4byte	0
 3996              	.LLST39:
 3997 0527 00000000 		.4byte	.LVL123
 3998 052b 10000000 		.4byte	.LVL125
 3999 052f 0100     		.2byte	0x1
 4000 0531 50       		.byte	0x50
 4001 0532 10000000 		.4byte	.LVL125
 4002 0536 D8000000 		.4byte	.LFE57
 4003 053a 0400     		.2byte	0x4
 4004 053c F3       		.byte	0xf3
 4005 053d 01       		.uleb128 0x1
 4006 053e 50       		.byte	0x50
 4007 053f 9F       		.byte	0x9f
 4008 0540 00000000 		.4byte	0
 4009 0544 00000000 		.4byte	0
 4010              	.LLST40:
 4011 0548 00000000 		.4byte	.LVL123
 4012 054c 12000000 		.4byte	.LVL126
 4013 0550 0100     		.2byte	0x1
 4014 0552 51       		.byte	0x51
 4015 0553 12000000 		.4byte	.LVL126
 4016 0557 D8000000 		.4byte	.LFE57
 4017 055b 0400     		.2byte	0x4
 4018 055d F3       		.byte	0xf3
 4019 055e 01       		.uleb128 0x1
 4020 055f 51       		.byte	0x51
 4021 0560 9F       		.byte	0x9f
 4022 0561 00000000 		.4byte	0
 4023 0565 00000000 		.4byte	0
 4024              	.LLST41:
 4025 0569 00000000 		.4byte	.LVL123
 4026 056d 4A000000 		.4byte	.LVL133
 4027 0571 0100     		.2byte	0x1
 4028 0573 52       		.byte	0x52
 4029 0574 4A000000 		.4byte	.LVL133
 4030 0578 D8000000 		.4byte	.LFE57
 4031 057c 0400     		.2byte	0x4
 4032 057e F3       		.byte	0xf3
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 121


 4033 057f 01       		.uleb128 0x1
 4034 0580 52       		.byte	0x52
 4035 0581 9F       		.byte	0x9f
 4036 0582 00000000 		.4byte	0
 4037 0586 00000000 		.4byte	0
 4038              	.LLST42:
 4039 058a 00000000 		.4byte	.LVL123
 4040 058e 0E000000 		.4byte	.LVL124
 4041 0592 0100     		.2byte	0x1
 4042 0594 53       		.byte	0x53
 4043 0595 0E000000 		.4byte	.LVL124
 4044 0599 D8000000 		.4byte	.LFE57
 4045 059d 0400     		.2byte	0x4
 4046 059f F3       		.byte	0xf3
 4047 05a0 01       		.uleb128 0x1
 4048 05a1 53       		.byte	0x53
 4049 05a2 9F       		.byte	0x9f
 4050 05a3 00000000 		.4byte	0
 4051 05a7 00000000 		.4byte	0
 4052              	.LLST43:
 4053 05ab 00000000 		.4byte	.LVL123
 4054 05af 0E000000 		.4byte	.LVL124
 4055 05b3 0200     		.2byte	0x2
 4056 05b5 91       		.byte	0x91
 4057 05b6 00       		.sleb128 0
 4058 05b7 0E000000 		.4byte	.LVL124
 4059 05bb 14000000 		.4byte	.LVL127
 4060 05bf 0200     		.2byte	0x2
 4061 05c1 73       		.byte	0x73
 4062 05c2 00       		.sleb128 0
 4063 05c3 14000000 		.4byte	.LVL127
 4064 05c7 D8000000 		.4byte	.LFE57
 4065 05cb 0200     		.2byte	0x2
 4066 05cd 91       		.byte	0x91
 4067 05ce 00       		.sleb128 0
 4068 05cf 00000000 		.4byte	0
 4069 05d3 00000000 		.4byte	0
 4070              	.LLST44:
 4071 05d7 18000000 		.4byte	.LVL128
 4072 05db 22000000 		.4byte	.LVL129
 4073 05df 0200     		.2byte	0x2
 4074 05e1 30       		.byte	0x30
 4075 05e2 9F       		.byte	0x9f
 4076 05e3 22000000 		.4byte	.LVL129
 4077 05e7 24000000 		.4byte	.LVL130
 4078 05eb 0100     		.2byte	0x1
 4079 05ed 58       		.byte	0x58
 4080 05ee 24000000 		.4byte	.LVL130
 4081 05f2 28000000 		.4byte	.LVL131
 4082 05f6 0200     		.2byte	0x2
 4083 05f8 30       		.byte	0x30
 4084 05f9 9F       		.byte	0x9f
 4085 05fa 28000000 		.4byte	.LVL131
 4086 05fe CE000000 		.4byte	.LVL148
 4087 0602 0100     		.2byte	0x1
 4088 0604 58       		.byte	0x58
 4089 0605 00000000 		.4byte	0
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 122


 4090 0609 00000000 		.4byte	0
 4091              	.LLST45:
 4092 060d 2C000000 		.4byte	.LVL132
 4093 0611 CE000000 		.4byte	.LVL146
 4094 0615 0100     		.2byte	0x1
 4095 0617 55       		.byte	0x55
 4096 0618 CE000000 		.4byte	.LVL146
 4097 061c CE000000 		.4byte	.LVL147
 4098 0620 0100     		.2byte	0x1
 4099 0622 56       		.byte	0x56
 4100 0623 00000000 		.4byte	0
 4101 0627 00000000 		.4byte	0
 4102              	.LLST46:
 4103 062b AA000000 		.4byte	.LVL135
 4104 062f B0000000 		.4byte	.LVL137
 4105 0633 0100     		.2byte	0x1
 4106 0635 50       		.byte	0x50
 4107 0636 B0000000 		.4byte	.LVL137
 4108 063a B3000000 		.4byte	.LVL138-1
 4109 063e 0F00     		.2byte	0xf
 4110 0640 72       		.byte	0x72
 4111 0641 00       		.sleb128 0
 4112 0642 03       		.byte	0x3
 4113 0643 28000000 		.4byte	CapSense_centroid.5356
 4114 0647 94       		.byte	0x94
 4115 0648 02       		.byte	0x2
 4116 0649 0A       		.byte	0xa
 4117 064a FFFF     		.2byte	0xffff
 4118 064c 1A       		.byte	0x1a
 4119 064d 1C       		.byte	0x1c
 4120 064e 9F       		.byte	0x9f
 4121 064f 00000000 		.4byte	0
 4122 0653 00000000 		.4byte	0
 4123              	.LLST47:
 4124 0657 AE000000 		.4byte	.LVL136
 4125 065b B3000000 		.4byte	.LVL138-1
 4126 065f 0100     		.2byte	0x1
 4127 0661 51       		.byte	0x51
 4128 0662 B8000000 		.4byte	.LVL139
 4129 0666 C0000000 		.4byte	.LVL140
 4130 066a 0100     		.2byte	0x1
 4131 066c 54       		.byte	0x54
 4132 066d C0000000 		.4byte	.LVL140
 4133 0671 C8000000 		.4byte	.LVL141
 4134 0675 0100     		.2byte	0x1
 4135 0677 50       		.byte	0x50
 4136 0678 C8000000 		.4byte	.LVL141
 4137 067c CA000000 		.4byte	.LVL142
 4138 0680 0500     		.2byte	0x5
 4139 0682 70       		.byte	0x70
 4140 0683 80827E   		.sleb128 -32512
 4141 0686 9F       		.byte	0x9f
 4142 0687 CA000000 		.4byte	.LVL142
 4143 068b CE000000 		.4byte	.LVL144
 4144 068f 0C00     		.2byte	0xc
 4145 0691 7D       		.byte	0x7d
 4146 0692 04       		.sleb128 4
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 123


 4147 0693 94       		.byte	0x94
 4148 0694 02       		.byte	0x2
 4149 0695 40       		.byte	0x40
 4150 0696 24       		.byte	0x24
 4151 0697 40       		.byte	0x40
 4152 0698 26       		.byte	0x26
 4153 0699 74       		.byte	0x74
 4154 069a 00       		.sleb128 0
 4155 069b 1E       		.byte	0x1e
 4156 069c 9F       		.byte	0x9f
 4157 069d CE000000 		.4byte	.LVL144
 4158 06a1 CE000000 		.4byte	.LVL145
 4159 06a5 0C00     		.2byte	0xc
 4160 06a7 91       		.byte	0x91
 4161 06a8 64       		.sleb128 -28
 4162 06a9 94       		.byte	0x94
 4163 06aa 02       		.byte	0x2
 4164 06ab 40       		.byte	0x40
 4165 06ac 24       		.byte	0x24
 4166 06ad 40       		.byte	0x40
 4167 06ae 26       		.byte	0x26
 4168 06af 74       		.byte	0x74
 4169 06b0 00       		.sleb128 0
 4170 06b1 1E       		.byte	0x1e
 4171 06b2 9F       		.byte	0x9f
 4172 06b3 00000000 		.4byte	0
 4173 06b7 00000000 		.4byte	0
 4174              	.LLST48:
 4175 06bb 18000000 		.4byte	.LVL128
 4176 06bf 9E000000 		.4byte	.LVL134
 4177 06c3 0100     		.2byte	0x1
 4178 06c5 51       		.byte	0x51
 4179 06c6 00000000 		.4byte	0
 4180 06ca 00000000 		.4byte	0
 4181              	.LLST49:
 4182 06ce 00000000 		.4byte	.LVL149
 4183 06d2 06000000 		.4byte	.LVL151
 4184 06d6 0100     		.2byte	0x1
 4185 06d8 50       		.byte	0x50
 4186 06d9 06000000 		.4byte	.LVL151
 4187 06dd 30000000 		.4byte	.LFE58
 4188 06e1 0400     		.2byte	0x4
 4189 06e3 F3       		.byte	0xf3
 4190 06e4 01       		.uleb128 0x1
 4191 06e5 50       		.byte	0x50
 4192 06e6 9F       		.byte	0x9f
 4193 06e7 00000000 		.4byte	0
 4194 06eb 00000000 		.4byte	0
 4195              	.LLST50:
 4196 06ef 0E000000 		.4byte	.LVL152
 4197 06f3 21000000 		.4byte	.LVL153-1
 4198 06f7 0100     		.2byte	0x1
 4199 06f9 50       		.byte	0x50
 4200 06fa 26000000 		.4byte	.LVL155
 4201 06fe 28000000 		.4byte	.LVL156
 4202 0702 0100     		.2byte	0x1
 4203 0704 50       		.byte	0x50
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 124


 4204 0705 00000000 		.4byte	0
 4205 0709 00000000 		.4byte	0
 4206              	.LLST51:
 4207 070d 24000000 		.4byte	.LVL154
 4208 0711 26000000 		.4byte	.LVL155
 4209 0715 0100     		.2byte	0x1
 4210 0717 50       		.byte	0x50
 4211 0718 28000000 		.4byte	.LVL156
 4212 071c 30000000 		.4byte	.LFE58
 4213 0720 0100     		.2byte	0x1
 4214 0722 50       		.byte	0x50
 4215 0723 00000000 		.4byte	0
 4216 0727 00000000 		.4byte	0
 4217              	.LLST52:
 4218 072b 00000000 		.4byte	.LVL157
 4219 072f 06000000 		.4byte	.LVL159
 4220 0733 0100     		.2byte	0x1
 4221 0735 50       		.byte	0x50
 4222 0736 06000000 		.4byte	.LVL159
 4223 073a 30000000 		.4byte	.LFE59
 4224 073e 0400     		.2byte	0x4
 4225 0740 F3       		.byte	0xf3
 4226 0741 01       		.uleb128 0x1
 4227 0742 50       		.byte	0x50
 4228 0743 9F       		.byte	0x9f
 4229 0744 00000000 		.4byte	0
 4230 0748 00000000 		.4byte	0
 4231              	.LLST53:
 4232 074c 0E000000 		.4byte	.LVL160
 4233 0750 21000000 		.4byte	.LVL161-1
 4234 0754 0100     		.2byte	0x1
 4235 0756 50       		.byte	0x50
 4236 0757 26000000 		.4byte	.LVL163
 4237 075b 28000000 		.4byte	.LVL164
 4238 075f 0100     		.2byte	0x1
 4239 0761 50       		.byte	0x50
 4240 0762 00000000 		.4byte	0
 4241 0766 00000000 		.4byte	0
 4242              	.LLST54:
 4243 076a 24000000 		.4byte	.LVL162
 4244 076e 26000000 		.4byte	.LVL163
 4245 0772 0100     		.2byte	0x1
 4246 0774 50       		.byte	0x50
 4247 0775 28000000 		.4byte	.LVL164
 4248 0779 30000000 		.4byte	.LFE59
 4249 077d 0100     		.2byte	0x1
 4250 077f 50       		.byte	0x50
 4251 0780 00000000 		.4byte	0
 4252 0784 00000000 		.4byte	0
 4253              	.LLST55:
 4254 0788 00000000 		.4byte	.LVL165
 4255 078c 04000000 		.4byte	.LVL166
 4256 0790 0100     		.2byte	0x1
 4257 0792 50       		.byte	0x50
 4258 0793 04000000 		.4byte	.LVL166
 4259 0797 0C000000 		.4byte	.LFE60
 4260 079b 0400     		.2byte	0x4
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 125


 4261 079d F3       		.byte	0xf3
 4262 079e 01       		.uleb128 0x1
 4263 079f 50       		.byte	0x50
 4264 07a0 9F       		.byte	0x9f
 4265 07a1 00000000 		.4byte	0
 4266 07a5 00000000 		.4byte	0
 4267              	.LLST56:
 4268 07a9 00000000 		.4byte	.LVL167
 4269 07ad 04000000 		.4byte	.LVL168
 4270 07b1 0100     		.2byte	0x1
 4271 07b3 50       		.byte	0x50
 4272 07b4 04000000 		.4byte	.LVL168
 4273 07b8 0C000000 		.4byte	.LFE61
 4274 07bc 0400     		.2byte	0x4
 4275 07be F3       		.byte	0xf3
 4276 07bf 01       		.uleb128 0x1
 4277 07c0 50       		.byte	0x50
 4278 07c1 9F       		.byte	0x9f
 4279 07c2 00000000 		.4byte	0
 4280 07c6 00000000 		.4byte	0
 4281              	.LLST57:
 4282 07ca 00000000 		.4byte	.LVL169
 4283 07ce 02000000 		.4byte	.LVL170
 4284 07d2 0100     		.2byte	0x1
 4285 07d4 50       		.byte	0x50
 4286 07d5 02000000 		.4byte	.LVL170
 4287 07d9 04000000 		.4byte	.LFE62
 4288 07dd 0400     		.2byte	0x4
 4289 07df F3       		.byte	0xf3
 4290 07e0 01       		.uleb128 0x1
 4291 07e1 50       		.byte	0x50
 4292 07e2 9F       		.byte	0x9f
 4293 07e3 00000000 		.4byte	0
 4294 07e7 00000000 		.4byte	0
 4295              		.section	.debug_aranges,"",%progbits
 4296 0000 F4000000 		.4byte	0xf4
 4297 0004 0200     		.2byte	0x2
 4298 0006 00000000 		.4byte	.Ldebug_info0
 4299 000a 04       		.byte	0x4
 4300 000b 00       		.byte	0
 4301 000c 0000     		.2byte	0
 4302 000e 0000     		.2byte	0
 4303 0010 00000000 		.4byte	.LFB35
 4304 0014 20000000 		.4byte	.LFE35-.LFB35
 4305 0018 00000000 		.4byte	.LFB36
 4306 001c 18000000 		.4byte	.LFE36-.LFB36
 4307 0020 00000000 		.4byte	.LFB37
 4308 0024 14000000 		.4byte	.LFE37-.LFB37
 4309 0028 00000000 		.4byte	.LFB38
 4310 002c 30000000 		.4byte	.LFE38-.LFB38
 4311 0030 00000000 		.4byte	.LFB39
 4312 0034 AC000000 		.4byte	.LFE39-.LFB39
 4313 0038 00000000 		.4byte	.LFB40
 4314 003c 08000000 		.4byte	.LFE40-.LFB40
 4315 0040 00000000 		.4byte	.LFB41
 4316 0044 24000000 		.4byte	.LFE41-.LFB41
 4317 0048 00000000 		.4byte	.LFB42
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 126


 4318 004c 24000000 		.4byte	.LFE42-.LFB42
 4319 0050 00000000 		.4byte	.LFB43
 4320 0054 0C000000 		.4byte	.LFE43-.LFB43
 4321 0058 00000000 		.4byte	.LFB44
 4322 005c 0C000000 		.4byte	.LFE44-.LFB44
 4323 0060 00000000 		.4byte	.LFB45
 4324 0064 10000000 		.4byte	.LFE45-.LFB45
 4325 0068 00000000 		.4byte	.LFB46
 4326 006c 10000000 		.4byte	.LFE46-.LFB46
 4327 0070 00000000 		.4byte	.LFB47
 4328 0074 04000000 		.4byte	.LFE47-.LFB47
 4329 0078 00000000 		.4byte	.LFB48
 4330 007c 04000000 		.4byte	.LFE48-.LFB48
 4331 0080 00000000 		.4byte	.LFB49
 4332 0084 04000000 		.4byte	.LFE49-.LFB49
 4333 0088 00000000 		.4byte	.LFB50
 4334 008c 04000000 		.4byte	.LFE50-.LFB50
 4335 0090 00000000 		.4byte	.LFB51
 4336 0094 84000000 		.4byte	.LFE51-.LFB51
 4337 0098 00000000 		.4byte	.LFB52
 4338 009c 1C000000 		.4byte	.LFE52-.LFB52
 4339 00a0 00000000 		.4byte	.LFB53
 4340 00a4 1E000000 		.4byte	.LFE53-.LFB53
 4341 00a8 00000000 		.4byte	.LFB54
 4342 00ac 1C000000 		.4byte	.LFE54-.LFB54
 4343 00b0 00000000 		.4byte	.LFB55
 4344 00b4 1C000000 		.4byte	.LFE55-.LFB55
 4345 00b8 00000000 		.4byte	.LFB56
 4346 00bc 30000000 		.4byte	.LFE56-.LFB56
 4347 00c0 00000000 		.4byte	.LFB57
 4348 00c4 D8000000 		.4byte	.LFE57-.LFB57
 4349 00c8 00000000 		.4byte	.LFB58
 4350 00cc 30000000 		.4byte	.LFE58-.LFB58
 4351 00d0 00000000 		.4byte	.LFB59
 4352 00d4 30000000 		.4byte	.LFE59-.LFB59
 4353 00d8 00000000 		.4byte	.LFB60
 4354 00dc 0C000000 		.4byte	.LFE60-.LFB60
 4355 00e0 00000000 		.4byte	.LFB61
 4356 00e4 0C000000 		.4byte	.LFE61-.LFB61
 4357 00e8 00000000 		.4byte	.LFB62
 4358 00ec 04000000 		.4byte	.LFE62-.LFB62
 4359 00f0 00000000 		.4byte	0
 4360 00f4 00000000 		.4byte	0
 4361              		.section	.debug_ranges,"",%progbits
 4362              	.Ldebug_ranges0:
 4363 0000 00000000 		.4byte	.LFB35
 4364 0004 20000000 		.4byte	.LFE35
 4365 0008 00000000 		.4byte	.LFB36
 4366 000c 18000000 		.4byte	.LFE36
 4367 0010 00000000 		.4byte	.LFB37
 4368 0014 14000000 		.4byte	.LFE37
 4369 0018 00000000 		.4byte	.LFB38
 4370 001c 30000000 		.4byte	.LFE38
 4371 0020 00000000 		.4byte	.LFB39
 4372 0024 AC000000 		.4byte	.LFE39
 4373 0028 00000000 		.4byte	.LFB40
 4374 002c 08000000 		.4byte	.LFE40
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 127


 4375 0030 00000000 		.4byte	.LFB41
 4376 0034 24000000 		.4byte	.LFE41
 4377 0038 00000000 		.4byte	.LFB42
 4378 003c 24000000 		.4byte	.LFE42
 4379 0040 00000000 		.4byte	.LFB43
 4380 0044 0C000000 		.4byte	.LFE43
 4381 0048 00000000 		.4byte	.LFB44
 4382 004c 0C000000 		.4byte	.LFE44
 4383 0050 00000000 		.4byte	.LFB45
 4384 0054 10000000 		.4byte	.LFE45
 4385 0058 00000000 		.4byte	.LFB46
 4386 005c 10000000 		.4byte	.LFE46
 4387 0060 00000000 		.4byte	.LFB47
 4388 0064 04000000 		.4byte	.LFE47
 4389 0068 00000000 		.4byte	.LFB48
 4390 006c 04000000 		.4byte	.LFE48
 4391 0070 00000000 		.4byte	.LFB49
 4392 0074 04000000 		.4byte	.LFE49
 4393 0078 00000000 		.4byte	.LFB50
 4394 007c 04000000 		.4byte	.LFE50
 4395 0080 00000000 		.4byte	.LFB51
 4396 0084 84000000 		.4byte	.LFE51
 4397 0088 00000000 		.4byte	.LFB52
 4398 008c 1C000000 		.4byte	.LFE52
 4399 0090 00000000 		.4byte	.LFB53
 4400 0094 1E000000 		.4byte	.LFE53
 4401 0098 00000000 		.4byte	.LFB54
 4402 009c 1C000000 		.4byte	.LFE54
 4403 00a0 00000000 		.4byte	.LFB55
 4404 00a4 1C000000 		.4byte	.LFE55
 4405 00a8 00000000 		.4byte	.LFB56
 4406 00ac 30000000 		.4byte	.LFE56
 4407 00b0 00000000 		.4byte	.LFB57
 4408 00b4 D8000000 		.4byte	.LFE57
 4409 00b8 00000000 		.4byte	.LFB58
 4410 00bc 30000000 		.4byte	.LFE58
 4411 00c0 00000000 		.4byte	.LFB59
 4412 00c4 30000000 		.4byte	.LFE59
 4413 00c8 00000000 		.4byte	.LFB60
 4414 00cc 0C000000 		.4byte	.LFE60
 4415 00d0 00000000 		.4byte	.LFB61
 4416 00d4 0C000000 		.4byte	.LFE61
 4417 00d8 00000000 		.4byte	.LFB62
 4418 00dc 04000000 		.4byte	.LFE62
 4419 00e0 00000000 		.4byte	0
 4420 00e4 00000000 		.4byte	0
 4421              		.section	.debug_line,"",%progbits
 4422              	.Ldebug_line0:
 4423 0000 94030000 		.section	.debug_str,"MS",%progbits,1
 4423      02006C00 
 4423      00000201 
 4423      FB0E0D00 
 4423      01010101 
 4424              	.LASF65:
 4425 0000 73746172 		.ascii	"startOfSlider\000"
 4425      744F6653 
 4425      6C696465 
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 128


 4425      7200
 4426              	.LASF47:
 4427 000e 43617053 		.ascii	"CapSense_CheckIsSensorActive\000"
 4427      656E7365 
 4427      5F436865 
 4427      636B4973 
 4427      53656E73 
 4428              	.LASF80:
 4429 002b 43617053 		.ascii	"CapSense_sensorRaw\000"
 4429      656E7365 
 4429      5F73656E 
 4429      736F7252 
 4429      617700
 4430              	.LASF57:
 4431 003e 43617053 		.ascii	"CapSense_CheckIsAnyWidgetActive\000"
 4431      656E7365 
 4431      5F436865 
 4431      636B4973 
 4431      416E7957 
 4432              	.LASF63:
 4433 005e 6D617869 		.ascii	"maximum\000"
 4433      6D756D00 
 4434              	.LASF32:
 4435 0066 43617053 		.ascii	"CapSense_UpdateWidgetBaseline\000"
 4435      656E7365 
 4435      5F557064 
 4435      61746557 
 4435      69646765 
 4436              	.LASF64:
 4437 0084 74656D70 		.ascii	"temp\000"
 4437      00
 4438              	.LASF2:
 4439 0089 73686F72 		.ascii	"short int\000"
 4439      7420696E 
 4439      7400
 4440              	.LASF28:
 4441 0093 66696C74 		.ascii	"filteredRawData\000"
 4441      65726564 
 4441      52617744 
 4441      61746100 
 4442              	.LASF49:
 4443 00a3 6465626F 		.ascii	"debounceIndex\000"
 4443      756E6365 
 4443      496E6465 
 4443      7800
 4444              	.LASF54:
 4445 00b1 72617749 		.ascii	"rawIndex\000"
 4445      6E646578 
 4445      00
 4446              	.LASF33:
 4447 00ba 77696467 		.ascii	"widget\000"
 4447      657400
 4448              	.LASF91:
 4449 00c1 43617053 		.ascii	"CapSense_hysteresis\000"
 4449      656E7365 
 4449      5F687973 
 4449      74657265 
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 129


 4449      73697300 
 4450              	.LASF38:
 4451 00d5 64617461 		.ascii	"data\000"
 4451      00
 4452              	.LASF83:
 4453 00da 43617053 		.ascii	"CapSense_sensorBaseline\000"
 4453      656E7365 
 4453      5F73656E 
 4453      736F7242 
 4453      6173656C 
 4454              	.LASF31:
 4455 00f2 43617053 		.ascii	"CapSense_UpdateEnabledBaselines\000"
 4455      656E7365 
 4455      5F557064 
 4455      61746545 
 4455      6E61626C 
 4456              	.LASF55:
 4457 0112 6E756D4F 		.ascii	"numOfSensors\000"
 4457      6653656E 
 4457      736F7273 
 4457      00
 4458              	.LASF92:
 4459 011f 43617053 		.ascii	"CapSense_debounce\000"
 4459      656E7365 
 4459      5F646562 
 4459      6F756E63 
 4459      6500
 4460              	.LASF42:
 4461 0131 76616C75 		.ascii	"value\000"
 4461      6500
 4462              	.LASF10:
 4463 0137 75696E74 		.ascii	"uint16\000"
 4463      313600
 4464              	.LASF30:
 4465 013e 43617053 		.ascii	"CapSense_UpdateSensorBaseline\000"
 4465      656E7365 
 4465      5F557064 
 4465      61746553 
 4465      656E736F 
 4466              	.LASF70:
 4467 015c 43617053 		.ascii	"CapSense_centroid\000"
 4467      656E7365 
 4467      5F63656E 
 4467      74726F69 
 4467      6400
 4468              	.LASF94:
 4469 016e 43617053 		.ascii	"CapSense_numberOfSensors\000"
 4469      656E7365 
 4469      5F6E756D 
 4469      6265724F 
 4469      6653656E 
 4470              	.LASF87:
 4471 0187 43617053 		.ascii	"CapSense_lowBaselineResetCnt\000"
 4471      656E7365 
 4471      5F6C6F77 
 4471      42617365 
 4471      6C696E65 
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 130


 4472              	.LASF9:
 4473 01a4 75696E74 		.ascii	"uint8\000"
 4473      3800
 4474              	.LASF100:
 4475 01aa 43617053 		.ascii	"CapSense_ScanEnabledWidgets\000"
 4475      656E7365 
 4475      5F536361 
 4475      6E456E61 
 4475      626C6564 
 4476              	.LASF66:
 4477 01c6 43617053 		.ascii	"CapSense_CalcCentroid\000"
 4477      656E7365 
 4477      5F43616C 
 4477      6343656E 
 4477      74726F69 
 4478              	.LASF101:
 4479 01dc 43617053 		.ascii	"CapSense_GetBitValue\000"
 4479      656E7365 
 4479      5F476574 
 4479      42697456 
 4479      616C7565 
 4480              	.LASF12:
 4481 01f1 696E7431 		.ascii	"int16\000"
 4481      3600
 4482              	.LASF60:
 4483 01f7 43617053 		.ascii	"CapSense_FindMaximum\000"
 4483      656E7365 
 4483      5F46696E 
 4483      644D6178 
 4483      696D756D 
 4484              	.LASF14:
 4485 020c 666C6F61 		.ascii	"float\000"
 4485      7400
 4486              	.LASF25:
 4487 0212 63616C63 		.ascii	"calc\000"
 4487      00
 4488              	.LASF6:
 4489 0217 6C6F6E67 		.ascii	"long long int\000"
 4489      206C6F6E 
 4489      6720696E 
 4489      7400
 4490              	.LASF4:
 4491 0225 6C6F6E67 		.ascii	"long int\000"
 4491      20696E74 
 4491      00
 4492              	.LASF48:
 4493 022e 6465626F 		.ascii	"debounce\000"
 4493      756E6365 
 4493      00
 4494              	.LASF27:
 4495 0237 74656D70 		.ascii	"tempRaw\000"
 4495      52617700 
 4496              	.LASF61:
 4497 023f 6F666673 		.ascii	"offset\000"
 4497      657400
 4498              	.LASF93:
 4499 0246 43617053 		.ascii	"CapSense_rawDataIndex\000"
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 131


 4499      656E7365 
 4499      5F726177 
 4499      44617461 
 4499      496E6465 
 4500              	.LASF29:
 4501 025c 6E6F6973 		.ascii	"noiseThreshold\000"
 4501      65546872 
 4501      6573686F 
 4501      6C6400
 4502              	.LASF45:
 4503 026b 43617053 		.ascii	"CapSense_GetFingerHysteresis\000"
 4503      656E7365 
 4503      5F476574 
 4503      46696E67 
 4503      65724879 
 4504              	.LASF86:
 4505 0288 43617053 		.ascii	"CapSense_sensorOnMask\000"
 4505      656E7365 
 4505      5F73656E 
 4505      736F724F 
 4505      6E4D6173 
 4506              	.LASF88:
 4507 029e 43617053 		.ascii	"CapSense_lowBaselineReset\000"
 4507      656E7365 
 4507      5F6C6F77 
 4507      42617365 
 4507      6C696E65 
 4508              	.LASF56:
 4509 02b8 73746174 		.ascii	"state\000"
 4509      6500
 4510              	.LASF95:
 4511 02be 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 4511      4320342E 
 4511      392E3320 
 4511      32303135 
 4511      30333033 
 4512 02f1 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 4512      20726576 
 4512      6973696F 
 4512      6E203232 
 4512      31323230 
 4513 0324 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 4513      66756E63 
 4513      74696F6E 
 4513      2D736563 
 4513      74696F6E 
 4514              	.LASF51:
 4515 034c 68797374 		.ascii	"hysteresis\000"
 4515      65726573 
 4515      697300
 4516              	.LASF71:
 4517 0357 706F7369 		.ascii	"position\000"
 4517      74696F6E 
 4517      00
 4518              	.LASF81:
 4519 0360 43617053 		.ascii	"CapSense_sensorEnableMask\000"
 4519      656E7365 
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 132


 4519      5F73656E 
 4519      736F7245 
 4519      6E61626C 
 4520              	.LASF98:
 4521 037a 43617053 		.ascii	"CapSense_ScanSensor\000"
 4521      656E7365 
 4521      5F536361 
 4521      6E53656E 
 4521      736F7200 
 4522              	.LASF1:
 4523 038e 756E7369 		.ascii	"unsigned char\000"
 4523      676E6564 
 4523      20636861 
 4523      7200
 4524              	.LASF72:
 4525 039c 6E756D65 		.ascii	"numerator\000"
 4525      7261746F 
 4525      7200
 4526              	.LASF37:
 4527 03a6 43617053 		.ascii	"CapSense_SetBaselineData\000"
 4527      656E7365 
 4527      5F536574 
 4527      42617365 
 4527      6C696E65 
 4528              	.LASF0:
 4529 03bf 7369676E 		.ascii	"signed char\000"
 4529      65642063 
 4529      68617200 
 4530              	.LASF7:
 4531 03cb 6C6F6E67 		.ascii	"long long unsigned int\000"
 4531      206C6F6E 
 4531      6720756E 
 4531      7369676E 
 4531      65642069 
 4532              	.LASF8:
 4533 03e2 756E7369 		.ascii	"unsigned int\000"
 4533      676E6564 
 4533      20696E74 
 4533      00
 4534              	.LASF22:
 4535 03ef 43617053 		.ascii	"CapSense_InitializeEnabledBaselines\000"
 4535      656E7365 
 4535      5F496E69 
 4535      7469616C 
 4535      697A6545 
 4536              	.LASF85:
 4537 0413 43617053 		.ascii	"CapSense_sensorSignal\000"
 4537      656E7365 
 4537      5F73656E 
 4537      736F7253 
 4537      69676E61 
 4538              	.LASF44:
 4539 0429 43617053 		.ascii	"CapSense_GetNoiseThreshold\000"
 4539      656E7365 
 4539      5F476574 
 4539      4E6F6973 
 4539      65546872 
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 133


 4540              	.LASF75:
 4541 0444 43617053 		.ascii	"CapSense_GetRadialCentroidPos\000"
 4541      656E7365 
 4541      5F476574 
 4541      52616469 
 4541      616C4365 
 4542              	.LASF59:
 4543 0462 43617053 		.ascii	"CapSense_DisableWidget\000"
 4543      656E7365 
 4543      5F446973 
 4543      61626C65 
 4543      57696467 
 4544              	.LASF26:
 4545 0479 7369676E 		.ascii	"sign\000"
 4545      00
 4546              	.LASF23:
 4547 047e 69735365 		.ascii	"isSensorEnabled\000"
 4547      6E736F72 
 4547      456E6162 
 4547      6C656400 
 4548              	.LASF102:
 4549 048e 43617053 		.ascii	"CapSense_SetBitValue\000"
 4549      656E7365 
 4549      5F536574 
 4549      42697456 
 4549      616C7565 
 4550              	.LASF74:
 4551 04a3 43617053 		.ascii	"CapSense_GetCentroidPos\000"
 4551      656E7365 
 4551      5F476574 
 4551      43656E74 
 4551      726F6964 
 4552              	.LASF16:
 4553 04bb 63686172 		.ascii	"char\000"
 4553      00
 4554              	.LASF17:
 4555 04c0 73697A65 		.ascii	"sizetype\000"
 4555      74797065 
 4555      00
 4556              	.LASF35:
 4557 04c9 66697273 		.ascii	"firstSensor\000"
 4557      7453656E 
 4557      736F7200 
 4558              	.LASF67:
 4559 04d5 7265736F 		.ascii	"resolution\000"
 4559      6C757469 
 4559      6F6E00
 4560              	.LASF43:
 4561 04e0 43617053 		.ascii	"CapSense_GetFingerThreshold\000"
 4561      656E7365 
 4561      5F476574 
 4561      46696E67 
 4561      65725468 
 4562              	.LASF21:
 4563 04fc 43617053 		.ascii	"CapSense_InitializeAllBaselines\000"
 4563      656E7365 
 4563      5F496E69 
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 134


 4563      7469616C 
 4563      697A6541 
 4564              	.LASF36:
 4565 051c 6C617374 		.ascii	"lastSensor\000"
 4565      53656E73 
 4565      6F7200
 4566              	.LASF78:
 4567 0527 43617053 		.ascii	"CapSense_GetDebounce\000"
 4567      656E7365 
 4567      5F476574 
 4567      4465626F 
 4567      756E6365 
 4568              	.LASF40:
 4569 053c 43617053 		.ascii	"CapSense_GetDiffCountData\000"
 4569      656E7365 
 4569      5F476574 
 4569      44696666 
 4569      436F756E 
 4570              	.LASF84:
 4571 0556 43617053 		.ascii	"CapSense_sensorBaselineLow\000"
 4571      656E7365 
 4571      5F73656E 
 4571      736F7242 
 4571      6173656C 
 4572              	.LASF90:
 4573 0571 43617053 		.ascii	"CapSense_noiseThreshold\000"
 4573      656E7365 
 4573      5F6E6F69 
 4573      73655468 
 4573      72657368 
 4574              	.LASF3:
 4575 0589 73686F72 		.ascii	"short unsigned int\000"
 4575      7420756E 
 4575      7369676E 
 4575      65642069 
 4575      6E7400
 4576              	.LASF24:
 4577 059c 43617053 		.ascii	"CapSense_UpdateBaselineNoThreshold\000"
 4577      656E7365 
 4577      5F557064 
 4577      61746542 
 4577      6173656C 
 4578              	.LASF11:
 4579 05bf 75696E74 		.ascii	"uint32\000"
 4579      333200
 4580              	.LASF5:
 4581 05c6 6C6F6E67 		.ascii	"long unsigned int\000"
 4581      20756E73 
 4581      69676E65 
 4581      6420696E 
 4581      7400
 4582              	.LASF13:
 4583 05d8 696E7433 		.ascii	"int32\000"
 4583      3200
 4584              	.LASF77:
 4585 05de 43617053 		.ascii	"CapSense_GetLowBaselineReset\000"
 4585      656E7365 
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 135


 4585      5F476574 
 4585      4C6F7742 
 4585      6173656C 
 4586              	.LASF89:
 4587 05fb 43617053 		.ascii	"CapSense_fingerThreshold\000"
 4587      656E7365 
 4587      5F66696E 
 4587      67657254 
 4587      68726573 
 4588              	.LASF82:
 4589 0614 43617053 		.ascii	"CapSense_widgetNumber\000"
 4589      656E7365 
 4589      5F776964 
 4589      6765744E 
 4589      756D6265 
 4590              	.LASF62:
 4591 062a 636F756E 		.ascii	"count\000"
 4591      7400
 4592              	.LASF97:
 4593 0630 433A5C55 		.ascii	"C:\\Users\\Alexandre\\Documents\\GitHub\\CoRo_PW_PS"
 4593      73657273 
 4593      5C416C65 
 4593      78616E64 
 4593      72655C44 
 4594 065e 4F435C50 		.ascii	"OC\\PSOC_CapSense_2_BLE\\PSOC_CapSense_2_BLE.cydsn\000"
 4594      534F435F 
 4594      43617053 
 4594      656E7365 
 4594      5F325F42 
 4595              	.LASF68:
 4596 068f 706F7350 		.ascii	"posPrev\000"
 4596      72657600 
 4597              	.LASF58:
 4598 0697 43617053 		.ascii	"CapSense_EnableWidget\000"
 4598      656E7365 
 4598      5F456E61 
 4598      626C6557 
 4598      69646765 
 4599              	.LASF99:
 4600 06ad 43617053 		.ascii	"CapSense_IsBusy\000"
 4600      656E7365 
 4600      5F497342 
 4600      75737900 
 4601              	.LASF20:
 4602 06bd 73656E73 		.ascii	"sensor\000"
 4602      6F7200
 4603              	.LASF96:
 4604 06c4 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\CapSense_CSHL.c\000"
 4604      6E657261 
 4604      7465645F 
 4604      536F7572 
 4604      63655C50 
 4605              	.LASF69:
 4606 06ed 706F734E 		.ascii	"posNext\000"
 4606      65787400 
 4607              	.LASF52:
 4608 06f5 43617053 		.ascii	"CapSense_debounceCounter\000"
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 136


 4608      656E7365 
 4608      5F646562 
 4608      6F756E63 
 4608      65436F75 
 4609              	.LASF46:
 4610 070e 43617053 		.ascii	"CapSense_GetNegativeNoiseThreshold\000"
 4610      656E7365 
 4610      5F476574 
 4610      4E656761 
 4610      74697665 
 4611              	.LASF76:
 4612 0731 43617053 		.ascii	"CapSense_GetWidgetNumber\000"
 4612      656E7365 
 4612      5F476574 
 4612      57696467 
 4612      65744E75 
 4613              	.LASF15:
 4614 074a 646F7562 		.ascii	"double\000"
 4614      6C6500
 4615              	.LASF34:
 4616 0751 73656E73 		.ascii	"sensorsPerWidget\000"
 4616      6F727350 
 4616      65725769 
 4616      64676574 
 4616      00
 4617              	.LASF41:
 4618 0762 43617053 		.ascii	"CapSense_SetDiffCountData\000"
 4618      656E7365 
 4618      5F536574 
 4618      44696666 
 4618      436F756E 
 4619              	.LASF73:
 4620 077c 64656E6F 		.ascii	"denominator\000"
 4620      6D696E61 
 4620      746F7200 
 4621              	.LASF39:
 4622 0788 43617053 		.ascii	"CapSense_GetBaselineData\000"
 4622      656E7365 
 4622      5F476574 
 4622      42617365 
 4622      6C696E65 
 4623              	.LASF50:
 4624 07a1 66696E67 		.ascii	"fingerThreshold\000"
 4624      65725468 
 4624      72657368 
 4624      6F6C6400 
 4625              	.LASF53:
 4626 07b1 43617053 		.ascii	"CapSense_CheckIsWidgetActive\000"
 4626      656E7365 
 4626      5F436865 
 4626      636B4973 
 4626      57696467 
 4627              	.LASF18:
 4628 07ce 43617053 		.ascii	"CapSense_BaseInit\000"
 4628      656E7365 
 4628      5F426173 
 4628      65496E69 
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccdrWyDV.s 			page 137


 4628      7400
 4629              	.LASF79:
 4630 07e0 43617053 		.ascii	"CapSense_centroidMult\000"
 4630      656E7365 
 4630      5F63656E 
 4630      74726F69 
 4630      644D756C 
 4631              	.LASF19:
 4632 07f6 43617053 		.ascii	"CapSense_InitializeSensorBaseline\000"
 4632      656E7365 
 4632      5F496E69 
 4632      7469616C 
 4632      697A6553 
 4633              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
