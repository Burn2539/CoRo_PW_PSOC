ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccUFJMnK.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"UART_1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.UART_1_Init,"ax",%progbits
  18              		.align	2
  19              		.global	UART_1_Init
  20              		.code	16
  21              		.thumb_func
  22              		.type	UART_1_Init, %function
  23              	UART_1_Init:
  24              	.LFB3:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\UART_1.c"
   1:.\Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/UART_1.c **** * File Name: UART_1.c
   3:.\Generated_Source\PSoC4/UART_1.c **** * Version 2.50
   4:.\Generated_Source\PSoC4/UART_1.c **** *
   5:.\Generated_Source\PSoC4/UART_1.c **** * Description:
   6:.\Generated_Source\PSoC4/UART_1.c **** *  This file provides all API functionality of the UART component
   7:.\Generated_Source\PSoC4/UART_1.c **** *
   8:.\Generated_Source\PSoC4/UART_1.c **** * Note:
   9:.\Generated_Source\PSoC4/UART_1.c **** *
  10:.\Generated_Source\PSoC4/UART_1.c **** ********************************************************************************
  11:.\Generated_Source\PSoC4/UART_1.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC4/UART_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:.\Generated_Source\PSoC4/UART_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:.\Generated_Source\PSoC4/UART_1.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
  16:.\Generated_Source\PSoC4/UART_1.c **** 
  17:.\Generated_Source\PSoC4/UART_1.c **** #include "UART_1.h"
  18:.\Generated_Source\PSoC4/UART_1.c **** #if (UART_1_INTERNAL_CLOCK_USED)
  19:.\Generated_Source\PSoC4/UART_1.c ****     #include "UART_1_IntClock.h"
  20:.\Generated_Source\PSoC4/UART_1.c **** #endif /* End UART_1_INTERNAL_CLOCK_USED */
  21:.\Generated_Source\PSoC4/UART_1.c **** 
  22:.\Generated_Source\PSoC4/UART_1.c **** 
  23:.\Generated_Source\PSoC4/UART_1.c **** /***************************************
  24:.\Generated_Source\PSoC4/UART_1.c **** * Global data allocation
  25:.\Generated_Source\PSoC4/UART_1.c **** ***************************************/
  26:.\Generated_Source\PSoC4/UART_1.c **** 
  27:.\Generated_Source\PSoC4/UART_1.c **** uint8 UART_1_initVar = 0u;
  28:.\Generated_Source\PSoC4/UART_1.c **** 
  29:.\Generated_Source\PSoC4/UART_1.c **** #if (UART_1_TX_INTERRUPT_ENABLED && UART_1_TX_ENABLED)
  30:.\Generated_Source\PSoC4/UART_1.c ****     volatile uint8 UART_1_txBuffer[UART_1_TX_BUFFER_SIZE];
  31:.\Generated_Source\PSoC4/UART_1.c ****     volatile uint8 UART_1_txBufferRead = 0u;
  32:.\Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_txBufferWrite = 0u;
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccUFJMnK.s 			page 2


  33:.\Generated_Source\PSoC4/UART_1.c **** #endif /* (UART_1_TX_INTERRUPT_ENABLED && UART_1_TX_ENABLED) */
  34:.\Generated_Source\PSoC4/UART_1.c **** 
  35:.\Generated_Source\PSoC4/UART_1.c **** #if (UART_1_RX_INTERRUPT_ENABLED && (UART_1_RX_ENABLED || UART_1_HD_ENABLED))
  36:.\Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_errorStatus = 0u;
  37:.\Generated_Source\PSoC4/UART_1.c ****     volatile uint8 UART_1_rxBuffer[UART_1_RX_BUFFER_SIZE];
  38:.\Generated_Source\PSoC4/UART_1.c ****     volatile uint8 UART_1_rxBufferRead  = 0u;
  39:.\Generated_Source\PSoC4/UART_1.c ****     volatile uint8 UART_1_rxBufferWrite = 0u;
  40:.\Generated_Source\PSoC4/UART_1.c ****     volatile uint8 UART_1_rxBufferLoopDetect = 0u;
  41:.\Generated_Source\PSoC4/UART_1.c ****     volatile uint8 UART_1_rxBufferOverflow   = 0u;
  42:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_RXHW_ADDRESS_ENABLED)
  43:.\Generated_Source\PSoC4/UART_1.c ****         volatile uint8 UART_1_rxAddressMode = UART_1_RX_ADDRESS_MODE;
  44:.\Generated_Source\PSoC4/UART_1.c ****         volatile uint8 UART_1_rxAddressDetected = 0u;
  45:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_RXHW_ADDRESS_ENABLED) */
  46:.\Generated_Source\PSoC4/UART_1.c **** #endif /* (UART_1_RX_INTERRUPT_ENABLED && (UART_1_RX_ENABLED || UART_1_HD_ENABLED)) */
  47:.\Generated_Source\PSoC4/UART_1.c **** 
  48:.\Generated_Source\PSoC4/UART_1.c **** 
  49:.\Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
  50:.\Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_Start
  51:.\Generated_Source\PSoC4/UART_1.c **** ********************************************************************************
  52:.\Generated_Source\PSoC4/UART_1.c **** *
  53:.\Generated_Source\PSoC4/UART_1.c **** * Summary:
  54:.\Generated_Source\PSoC4/UART_1.c **** *  This is the preferred method to begin component operation.
  55:.\Generated_Source\PSoC4/UART_1.c **** *  UART_1_Start() sets the initVar variable, calls the
  56:.\Generated_Source\PSoC4/UART_1.c **** *  UART_1_Init() function, and then calls the
  57:.\Generated_Source\PSoC4/UART_1.c **** *  UART_1_Enable() function.
  58:.\Generated_Source\PSoC4/UART_1.c **** *
  59:.\Generated_Source\PSoC4/UART_1.c **** * Parameters:
  60:.\Generated_Source\PSoC4/UART_1.c **** *  None.
  61:.\Generated_Source\PSoC4/UART_1.c **** *
  62:.\Generated_Source\PSoC4/UART_1.c **** * Return:
  63:.\Generated_Source\PSoC4/UART_1.c **** *  None.
  64:.\Generated_Source\PSoC4/UART_1.c **** *
  65:.\Generated_Source\PSoC4/UART_1.c **** * Global variables:
  66:.\Generated_Source\PSoC4/UART_1.c **** *  The UART_1_intiVar variable is used to indicate initial
  67:.\Generated_Source\PSoC4/UART_1.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:.\Generated_Source\PSoC4/UART_1.c **** *  and set to one (1u) the first time UART_1_Start() is called. This
  69:.\Generated_Source\PSoC4/UART_1.c **** *  allows for component initialization without re-initialization in all
  70:.\Generated_Source\PSoC4/UART_1.c **** *  subsequent calls to the UART_1_Start() routine.
  71:.\Generated_Source\PSoC4/UART_1.c **** *
  72:.\Generated_Source\PSoC4/UART_1.c **** * Reentrant:
  73:.\Generated_Source\PSoC4/UART_1.c **** *  No.
  74:.\Generated_Source\PSoC4/UART_1.c **** *
  75:.\Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
  76:.\Generated_Source\PSoC4/UART_1.c **** void UART_1_Start(void) 
  77:.\Generated_Source\PSoC4/UART_1.c **** {
  78:.\Generated_Source\PSoC4/UART_1.c ****     /* If not initialized then initialize all required hardware and software */
  79:.\Generated_Source\PSoC4/UART_1.c ****     if(UART_1_initVar == 0u)
  80:.\Generated_Source\PSoC4/UART_1.c ****     {
  81:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_Init();
  82:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_initVar = 1u;
  83:.\Generated_Source\PSoC4/UART_1.c ****     }
  84:.\Generated_Source\PSoC4/UART_1.c **** 
  85:.\Generated_Source\PSoC4/UART_1.c ****     UART_1_Enable();
  86:.\Generated_Source\PSoC4/UART_1.c **** }
  87:.\Generated_Source\PSoC4/UART_1.c **** 
  88:.\Generated_Source\PSoC4/UART_1.c **** 
  89:.\Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccUFJMnK.s 			page 3


  90:.\Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_Init
  91:.\Generated_Source\PSoC4/UART_1.c **** ********************************************************************************
  92:.\Generated_Source\PSoC4/UART_1.c **** *
  93:.\Generated_Source\PSoC4/UART_1.c **** * Summary:
  94:.\Generated_Source\PSoC4/UART_1.c **** *  Initializes or restores the component according to the customizer Configure
  95:.\Generated_Source\PSoC4/UART_1.c **** *  dialog settings. It is not necessary to call UART_1_Init() because
  96:.\Generated_Source\PSoC4/UART_1.c **** *  the UART_1_Start() API calls this function and is the preferred
  97:.\Generated_Source\PSoC4/UART_1.c **** *  method to begin component operation.
  98:.\Generated_Source\PSoC4/UART_1.c **** *
  99:.\Generated_Source\PSoC4/UART_1.c **** * Parameters:
 100:.\Generated_Source\PSoC4/UART_1.c **** *  None.
 101:.\Generated_Source\PSoC4/UART_1.c **** *
 102:.\Generated_Source\PSoC4/UART_1.c **** * Return:
 103:.\Generated_Source\PSoC4/UART_1.c **** *  None.
 104:.\Generated_Source\PSoC4/UART_1.c **** *
 105:.\Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
 106:.\Generated_Source\PSoC4/UART_1.c **** void UART_1_Init(void) 
 107:.\Generated_Source\PSoC4/UART_1.c **** {
  26              		.loc 1 107 0
  27              		.cfi_startproc
 108:.\Generated_Source\PSoC4/UART_1.c ****     #if(UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 109:.\Generated_Source\PSoC4/UART_1.c **** 
 110:.\Generated_Source\PSoC4/UART_1.c ****         #if (UART_1_RX_INTERRUPT_ENABLED)
 111:.\Generated_Source\PSoC4/UART_1.c ****             /* Set RX interrupt vector and priority */
 112:.\Generated_Source\PSoC4/UART_1.c ****             (void) CyIntSetVector(UART_1_RX_VECT_NUM, &UART_1_RXISR);
 113:.\Generated_Source\PSoC4/UART_1.c ****             CyIntSetPriority(UART_1_RX_VECT_NUM, UART_1_RX_PRIOR_NUM);
 114:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_errorStatus = 0u;
 115:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 116:.\Generated_Source\PSoC4/UART_1.c **** 
 117:.\Generated_Source\PSoC4/UART_1.c ****         #if (UART_1_RXHW_ADDRESS_ENABLED)
 118:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_SetRxAddressMode(UART_1_RX_ADDRESS_MODE);
 119:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_SetRxAddress1(UART_1_RX_HW_ADDRESS1);
 120:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_SetRxAddress2(UART_1_RX_HW_ADDRESS2);
 121:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* End UART_1_RXHW_ADDRESS_ENABLED */
 122:.\Generated_Source\PSoC4/UART_1.c **** 
 123:.\Generated_Source\PSoC4/UART_1.c ****         /* Init Count7 period */
 124:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_RXBITCTR_PERIOD_REG = UART_1_RXBITCTR_INIT;
 125:.\Generated_Source\PSoC4/UART_1.c ****         /* Configure the Initial RX interrupt mask */
 126:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_RXSTATUS_MASK_REG  = UART_1_INIT_RX_INTERRUPTS_MASK;
 127:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* End UART_1_RX_ENABLED || UART_1_HD_ENABLED*/
 128:.\Generated_Source\PSoC4/UART_1.c **** 
 129:.\Generated_Source\PSoC4/UART_1.c ****     #if(UART_1_TX_ENABLED)
 130:.\Generated_Source\PSoC4/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 131:.\Generated_Source\PSoC4/UART_1.c ****             /* Set TX interrupt vector and priority */
 132:.\Generated_Source\PSoC4/UART_1.c ****             (void) CyIntSetVector(UART_1_TX_VECT_NUM, &UART_1_TXISR);
 133:.\Generated_Source\PSoC4/UART_1.c ****             CyIntSetPriority(UART_1_TX_VECT_NUM, UART_1_TX_PRIOR_NUM);
 134:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
 135:.\Generated_Source\PSoC4/UART_1.c **** 
 136:.\Generated_Source\PSoC4/UART_1.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:.\Generated_Source\PSoC4/UART_1.c ****         #if (UART_1_TXCLKGEN_DP)
 138:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_TXBITCLKGEN_CTR_REG = UART_1_BIT_CENTER;
  28              		.loc 1 138 0
  29 0000 0622     		mov	r2, #6
  30 0002 044B     		ldr	r3, .L2
  31 0004 1A70     		strb	r2, [r3]
 139:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_TXBITCLKTX_COMPLETE_REG = ((UART_1_NUMBER_OF_DATA_BITS +
  32              		.loc 1 139 0
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccUFJMnK.s 			page 4


  33 0006 4132     		add	r2, r2, #65
  34 0008 034B     		ldr	r3, .L2+4
  35 000a 1A70     		strb	r2, [r3]
 140:.\Generated_Source\PSoC4/UART_1.c ****                         UART_1_NUMBER_OF_START_BIT) * UART_1_OVER_SAMPLE_COUNT) - 1u;
 141:.\Generated_Source\PSoC4/UART_1.c ****         #else
 142:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_TXBITCTR_PERIOD_REG = ((UART_1_NUMBER_OF_DATA_BITS +
 143:.\Generated_Source\PSoC4/UART_1.c ****                         UART_1_NUMBER_OF_START_BIT) * UART_1_OVER_SAMPLE_8) - 1u;
 144:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* End UART_1_TXCLKGEN_DP */
 145:.\Generated_Source\PSoC4/UART_1.c **** 
 146:.\Generated_Source\PSoC4/UART_1.c ****         /* Configure the Initial TX interrupt mask */
 147:.\Generated_Source\PSoC4/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 148:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_TXSTATUS_MASK_REG = UART_1_TX_STS_FIFO_EMPTY;
 149:.\Generated_Source\PSoC4/UART_1.c ****         #else
 150:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_TXSTATUS_MASK_REG = UART_1_INIT_TX_INTERRUPTS_MASK;
  36              		.loc 1 150 0
  37 000c 0022     		mov	r2, #0
  38 000e 034B     		ldr	r3, .L2+8
  39 0010 1A70     		strb	r2, [r3]
 151:.\Generated_Source\PSoC4/UART_1.c ****         #endif /*End UART_1_TX_INTERRUPT_ENABLED*/
 152:.\Generated_Source\PSoC4/UART_1.c **** 
 153:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* End UART_1_TX_ENABLED */
 154:.\Generated_Source\PSoC4/UART_1.c **** 
 155:.\Generated_Source\PSoC4/UART_1.c ****     #if(UART_1_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 156:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_WriteControlRegister( \
 157:.\Generated_Source\PSoC4/UART_1.c ****             (UART_1_ReadControlRegister() & (uint8)~UART_1_CTRL_PARITY_TYPE_MASK) | \
 158:.\Generated_Source\PSoC4/UART_1.c ****             (uint8)(UART_1_PARITY_TYPE << UART_1_CTRL_PARITY_TYPE0_SHIFT) );
 159:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* End UART_1_PARITY_TYPE_SW */
 160:.\Generated_Source\PSoC4/UART_1.c **** }
  40              		.loc 1 160 0
  41              		@ sp needed
  42 0012 7047     		bx	lr
  43              	.L3:
  44              		.align	2
  45              	.L2:
  46 0014 21000F40 		.word	1074724897
  47 0018 31000F40 		.word	1074724913
  48 001c 82000F40 		.word	1074724994
  49              		.cfi_endproc
  50              	.LFE3:
  51              		.size	UART_1_Init, .-UART_1_Init
  52              		.section	.text.UART_1_Enable,"ax",%progbits
  53              		.align	2
  54              		.global	UART_1_Enable
  55              		.code	16
  56              		.thumb_func
  57              		.type	UART_1_Enable, %function
  58              	UART_1_Enable:
  59              	.LFB4:
 161:.\Generated_Source\PSoC4/UART_1.c **** 
 162:.\Generated_Source\PSoC4/UART_1.c **** 
 163:.\Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
 164:.\Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_Enable
 165:.\Generated_Source\PSoC4/UART_1.c **** ********************************************************************************
 166:.\Generated_Source\PSoC4/UART_1.c **** *
 167:.\Generated_Source\PSoC4/UART_1.c **** * Summary:
 168:.\Generated_Source\PSoC4/UART_1.c **** *  Activates the hardware and begins component operation. It is not necessary
 169:.\Generated_Source\PSoC4/UART_1.c **** *  to call UART_1_Enable() because the UART_1_Start() API
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccUFJMnK.s 			page 5


 170:.\Generated_Source\PSoC4/UART_1.c **** *  calls this function, which is the preferred method to begin component
 171:.\Generated_Source\PSoC4/UART_1.c **** *  operation.
 172:.\Generated_Source\PSoC4/UART_1.c **** 
 173:.\Generated_Source\PSoC4/UART_1.c **** * Parameters:
 174:.\Generated_Source\PSoC4/UART_1.c **** *  None.
 175:.\Generated_Source\PSoC4/UART_1.c **** *
 176:.\Generated_Source\PSoC4/UART_1.c **** * Return:
 177:.\Generated_Source\PSoC4/UART_1.c **** *  None.
 178:.\Generated_Source\PSoC4/UART_1.c **** *
 179:.\Generated_Source\PSoC4/UART_1.c **** * Global Variables:
 180:.\Generated_Source\PSoC4/UART_1.c **** *  UART_1_rxAddressDetected - set to initial state (0).
 181:.\Generated_Source\PSoC4/UART_1.c **** *
 182:.\Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
 183:.\Generated_Source\PSoC4/UART_1.c **** void UART_1_Enable(void) 
 184:.\Generated_Source\PSoC4/UART_1.c **** {
  60              		.loc 1 184 0
  61              		.cfi_startproc
  62 0000 10B5     		push	{r4, lr}
  63              		.cfi_def_cfa_offset 8
  64              		.cfi_offset 4, -8
  65              		.cfi_offset 14, -4
 185:.\Generated_Source\PSoC4/UART_1.c ****     uint8 enableInterrupts;
 186:.\Generated_Source\PSoC4/UART_1.c ****     enableInterrupts = CyEnterCriticalSection();
  66              		.loc 1 186 0
  67 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  68              	.LVL0:
  69 0006 041C     		mov	r4, r0
  70              	.LVL1:
 187:.\Generated_Source\PSoC4/UART_1.c **** 
 188:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 189:.\Generated_Source\PSoC4/UART_1.c ****         /* RX Counter (Count7) Enable */
 190:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_RXBITCTR_CONTROL_REG |= UART_1_CNTR_ENABLE;
 191:.\Generated_Source\PSoC4/UART_1.c **** 
 192:.\Generated_Source\PSoC4/UART_1.c ****         /* Enable the RX Interrupt */
 193:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_RXSTATUS_ACTL_REG  |= UART_1_INT_ENABLE;
 194:.\Generated_Source\PSoC4/UART_1.c **** 
 195:.\Generated_Source\PSoC4/UART_1.c ****         #if (UART_1_RX_INTERRUPT_ENABLED)
 196:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_EnableRxInt();
 197:.\Generated_Source\PSoC4/UART_1.c **** 
 198:.\Generated_Source\PSoC4/UART_1.c ****             #if (UART_1_RXHW_ADDRESS_ENABLED)
 199:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_rxAddressDetected = 0u;
 200:.\Generated_Source\PSoC4/UART_1.c ****             #endif /* (UART_1_RXHW_ADDRESS_ENABLED) */
 201:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 202:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_RX_ENABLED || UART_1_HD_ENABLED) */
 203:.\Generated_Source\PSoC4/UART_1.c **** 
 204:.\Generated_Source\PSoC4/UART_1.c ****     #if(UART_1_TX_ENABLED)
 205:.\Generated_Source\PSoC4/UART_1.c ****         /* TX Counter (DP/Count7) Enable */
 206:.\Generated_Source\PSoC4/UART_1.c ****         #if(!UART_1_TXCLKGEN_DP)
 207:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_TXBITCTR_CONTROL_REG |= UART_1_CNTR_ENABLE;
 208:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* End UART_1_TXCLKGEN_DP */
 209:.\Generated_Source\PSoC4/UART_1.c **** 
 210:.\Generated_Source\PSoC4/UART_1.c ****         /* Enable the TX Interrupt */
 211:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_TXSTATUS_ACTL_REG |= UART_1_INT_ENABLE;
  71              		.loc 1 211 0
  72 0008 054A     		ldr	r2, .L5
  73 000a 1178     		ldrb	r1, [r2]
  74 000c 1023     		mov	r3, #16
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccUFJMnK.s 			page 6


  75 000e 0B43     		orr	r3, r1
  76 0010 1370     		strb	r3, [r2]
 212:.\Generated_Source\PSoC4/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 213:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
 214:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_EnableTxInt();
 215:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
 216:.\Generated_Source\PSoC4/UART_1.c ****      #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
 217:.\Generated_Source\PSoC4/UART_1.c **** 
 218:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_INTERNAL_CLOCK_USED)
 219:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_IntClock_Start();  /* Enable the clock */
  77              		.loc 1 219 0
  78 0012 FF20     		mov	r0, #255
  79 0014 FFF7FEFF 		bl	UART_1_IntClock_StartEx
  80              	.LVL2:
 220:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_INTERNAL_CLOCK_USED) */
 221:.\Generated_Source\PSoC4/UART_1.c **** 
 222:.\Generated_Source\PSoC4/UART_1.c ****     CyExitCriticalSection(enableInterrupts);
  81              		.loc 1 222 0
  82 0018 201C     		mov	r0, r4
  83 001a FFF7FEFF 		bl	CyExitCriticalSection
  84              	.LVL3:
 223:.\Generated_Source\PSoC4/UART_1.c **** }
  85              		.loc 1 223 0
  86              		@ sp needed
  87              	.LVL4:
  88 001e 10BD     		pop	{r4, pc}
  89              	.L6:
  90              		.align	2
  91              	.L5:
  92 0020 92000F40 		.word	1074725010
  93              		.cfi_endproc
  94              	.LFE4:
  95              		.size	UART_1_Enable, .-UART_1_Enable
  96              		.section	.text.UART_1_Start,"ax",%progbits
  97              		.align	2
  98              		.global	UART_1_Start
  99              		.code	16
 100              		.thumb_func
 101              		.type	UART_1_Start, %function
 102              	UART_1_Start:
 103              	.LFB2:
  77:.\Generated_Source\PSoC4/UART_1.c ****     /* If not initialized then initialize all required hardware and software */
 104              		.loc 1 77 0
 105              		.cfi_startproc
 106 0000 08B5     		push	{r3, lr}
 107              		.cfi_def_cfa_offset 8
 108              		.cfi_offset 3, -8
 109              		.cfi_offset 14, -4
  79:.\Generated_Source\PSoC4/UART_1.c ****     {
 110              		.loc 1 79 0
 111 0002 064B     		ldr	r3, .L9
 112 0004 1B78     		ldrb	r3, [r3]
 113 0006 002B     		cmp	r3, #0
 114 0008 04D1     		bne	.L8
  81:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_initVar = 1u;
 115              		.loc 1 81 0
 116 000a FFF7FEFF 		bl	UART_1_Init
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccUFJMnK.s 			page 7


 117              	.LVL5:
  82:.\Generated_Source\PSoC4/UART_1.c ****     }
 118              		.loc 1 82 0
 119 000e 0122     		mov	r2, #1
 120 0010 024B     		ldr	r3, .L9
 121 0012 1A70     		strb	r2, [r3]
 122              	.L8:
  85:.\Generated_Source\PSoC4/UART_1.c **** }
 123              		.loc 1 85 0
 124 0014 FFF7FEFF 		bl	UART_1_Enable
 125              	.LVL6:
  86:.\Generated_Source\PSoC4/UART_1.c **** 
 126              		.loc 1 86 0
 127              		@ sp needed
 128 0018 08BD     		pop	{r3, pc}
 129              	.L10:
 130 001a C046     		.align	2
 131              	.L9:
 132 001c 00000000 		.word	.LANCHOR0
 133              		.cfi_endproc
 134              	.LFE2:
 135              		.size	UART_1_Start, .-UART_1_Start
 136              		.section	.text.UART_1_Stop,"ax",%progbits
 137              		.align	2
 138              		.global	UART_1_Stop
 139              		.code	16
 140              		.thumb_func
 141              		.type	UART_1_Stop, %function
 142              	UART_1_Stop:
 143              	.LFB5:
 224:.\Generated_Source\PSoC4/UART_1.c **** 
 225:.\Generated_Source\PSoC4/UART_1.c **** 
 226:.\Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
 227:.\Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_Stop
 228:.\Generated_Source\PSoC4/UART_1.c **** ********************************************************************************
 229:.\Generated_Source\PSoC4/UART_1.c **** *
 230:.\Generated_Source\PSoC4/UART_1.c **** * Summary:
 231:.\Generated_Source\PSoC4/UART_1.c **** *  Disables the UART operation.
 232:.\Generated_Source\PSoC4/UART_1.c **** *
 233:.\Generated_Source\PSoC4/UART_1.c **** * Parameters:
 234:.\Generated_Source\PSoC4/UART_1.c **** *  None.
 235:.\Generated_Source\PSoC4/UART_1.c **** *
 236:.\Generated_Source\PSoC4/UART_1.c **** * Return:
 237:.\Generated_Source\PSoC4/UART_1.c **** *  None.
 238:.\Generated_Source\PSoC4/UART_1.c **** *
 239:.\Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
 240:.\Generated_Source\PSoC4/UART_1.c **** void UART_1_Stop(void) 
 241:.\Generated_Source\PSoC4/UART_1.c **** {
 144              		.loc 1 241 0
 145              		.cfi_startproc
 146 0000 10B5     		push	{r4, lr}
 147              		.cfi_def_cfa_offset 8
 148              		.cfi_offset 4, -8
 149              		.cfi_offset 14, -4
 242:.\Generated_Source\PSoC4/UART_1.c ****     uint8 enableInterrupts;
 243:.\Generated_Source\PSoC4/UART_1.c ****     enableInterrupts = CyEnterCriticalSection();
 150              		.loc 1 243 0
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccUFJMnK.s 			page 8


 151 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 152              	.LVL7:
 153 0006 041C     		mov	r4, r0
 154              	.LVL8:
 244:.\Generated_Source\PSoC4/UART_1.c **** 
 245:.\Generated_Source\PSoC4/UART_1.c ****     /* Write Bit Counter Disable */
 246:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 247:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_RXBITCTR_CONTROL_REG &= (uint8) ~UART_1_CNTR_ENABLE;
 248:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_RX_ENABLED || UART_1_HD_ENABLED) */
 249:.\Generated_Source\PSoC4/UART_1.c **** 
 250:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_TX_ENABLED)
 251:.\Generated_Source\PSoC4/UART_1.c ****         #if(!UART_1_TXCLKGEN_DP)
 252:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_TXBITCTR_CONTROL_REG &= (uint8) ~UART_1_CNTR_ENABLE;
 253:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* (!UART_1_TXCLKGEN_DP) */
 254:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_TX_ENABLED) */
 255:.\Generated_Source\PSoC4/UART_1.c **** 
 256:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_INTERNAL_CLOCK_USED)
 257:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_IntClock_Stop();   /* Disable the clock */
 155              		.loc 1 257 0
 156 0008 FFF7FEFF 		bl	UART_1_IntClock_Stop
 157              	.LVL9:
 258:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_INTERNAL_CLOCK_USED) */
 259:.\Generated_Source\PSoC4/UART_1.c **** 
 260:.\Generated_Source\PSoC4/UART_1.c ****     /* Disable internal interrupt component */
 261:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 262:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_RXSTATUS_ACTL_REG  &= (uint8) ~UART_1_INT_ENABLE;
 263:.\Generated_Source\PSoC4/UART_1.c **** 
 264:.\Generated_Source\PSoC4/UART_1.c ****         #if (UART_1_RX_INTERRUPT_ENABLED)
 265:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_DisableRxInt();
 266:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 267:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_RX_ENABLED || UART_1_HD_ENABLED) */
 268:.\Generated_Source\PSoC4/UART_1.c **** 
 269:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_TX_ENABLED)
 270:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_TXSTATUS_ACTL_REG &= (uint8) ~UART_1_INT_ENABLE;
 158              		.loc 1 270 0
 159 000c 044A     		ldr	r2, .L12
 160 000e 1378     		ldrb	r3, [r2]
 161 0010 1021     		mov	r1, #16
 162 0012 8B43     		bic	r3, r1
 163 0014 1370     		strb	r3, [r2]
 271:.\Generated_Source\PSoC4/UART_1.c **** 
 272:.\Generated_Source\PSoC4/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 273:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_DisableTxInt();
 274:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
 275:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_TX_ENABLED) */
 276:.\Generated_Source\PSoC4/UART_1.c **** 
 277:.\Generated_Source\PSoC4/UART_1.c ****     CyExitCriticalSection(enableInterrupts);
 164              		.loc 1 277 0
 165 0016 201C     		mov	r0, r4
 166 0018 FFF7FEFF 		bl	CyExitCriticalSection
 167              	.LVL10:
 278:.\Generated_Source\PSoC4/UART_1.c **** }
 168              		.loc 1 278 0
 169              		@ sp needed
 170              	.LVL11:
 171 001c 10BD     		pop	{r4, pc}
 172              	.L13:
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccUFJMnK.s 			page 9


 173 001e C046     		.align	2
 174              	.L12:
 175 0020 92000F40 		.word	1074725010
 176              		.cfi_endproc
 177              	.LFE5:
 178              		.size	UART_1_Stop, .-UART_1_Stop
 179              		.section	.text.UART_1_ReadControlRegister,"ax",%progbits
 180              		.align	2
 181              		.global	UART_1_ReadControlRegister
 182              		.code	16
 183              		.thumb_func
 184              		.type	UART_1_ReadControlRegister, %function
 185              	UART_1_ReadControlRegister:
 186              	.LFB6:
 279:.\Generated_Source\PSoC4/UART_1.c **** 
 280:.\Generated_Source\PSoC4/UART_1.c **** 
 281:.\Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
 282:.\Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_ReadControlRegister
 283:.\Generated_Source\PSoC4/UART_1.c **** ********************************************************************************
 284:.\Generated_Source\PSoC4/UART_1.c **** *
 285:.\Generated_Source\PSoC4/UART_1.c **** * Summary:
 286:.\Generated_Source\PSoC4/UART_1.c **** *  Returns the current value of the control register.
 287:.\Generated_Source\PSoC4/UART_1.c **** *
 288:.\Generated_Source\PSoC4/UART_1.c **** * Parameters:
 289:.\Generated_Source\PSoC4/UART_1.c **** *  None.
 290:.\Generated_Source\PSoC4/UART_1.c **** *
 291:.\Generated_Source\PSoC4/UART_1.c **** * Return:
 292:.\Generated_Source\PSoC4/UART_1.c **** *  Contents of the control register.
 293:.\Generated_Source\PSoC4/UART_1.c **** *
 294:.\Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
 295:.\Generated_Source\PSoC4/UART_1.c **** uint8 UART_1_ReadControlRegister(void) 
 296:.\Generated_Source\PSoC4/UART_1.c **** {
 187              		.loc 1 296 0
 188              		.cfi_startproc
 297:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_CONTROL_REG_REMOVED)
 298:.\Generated_Source\PSoC4/UART_1.c ****         return(0u);
 299:.\Generated_Source\PSoC4/UART_1.c ****     #else
 300:.\Generated_Source\PSoC4/UART_1.c ****         return(UART_1_CONTROL_REG);
 301:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_CONTROL_REG_REMOVED) */
 302:.\Generated_Source\PSoC4/UART_1.c **** }
 189              		.loc 1 302 0
 190 0000 0020     		mov	r0, #0
 191              		@ sp needed
 192 0002 7047     		bx	lr
 193              		.cfi_endproc
 194              	.LFE6:
 195              		.size	UART_1_ReadControlRegister, .-UART_1_ReadControlRegister
 196              		.section	.text.UART_1_WriteControlRegister,"ax",%progbits
 197              		.align	2
 198              		.global	UART_1_WriteControlRegister
 199              		.code	16
 200              		.thumb_func
 201              		.type	UART_1_WriteControlRegister, %function
 202              	UART_1_WriteControlRegister:
 203              	.LFB7:
 303:.\Generated_Source\PSoC4/UART_1.c **** 
 304:.\Generated_Source\PSoC4/UART_1.c **** 
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccUFJMnK.s 			page 10


 305:.\Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
 306:.\Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_WriteControlRegister
 307:.\Generated_Source\PSoC4/UART_1.c **** ********************************************************************************
 308:.\Generated_Source\PSoC4/UART_1.c **** *
 309:.\Generated_Source\PSoC4/UART_1.c **** * Summary:
 310:.\Generated_Source\PSoC4/UART_1.c **** *  Writes an 8-bit value into the control register
 311:.\Generated_Source\PSoC4/UART_1.c **** *
 312:.\Generated_Source\PSoC4/UART_1.c **** * Parameters:
 313:.\Generated_Source\PSoC4/UART_1.c **** *  control:  control register value
 314:.\Generated_Source\PSoC4/UART_1.c **** *
 315:.\Generated_Source\PSoC4/UART_1.c **** * Return:
 316:.\Generated_Source\PSoC4/UART_1.c **** *  None.
 317:.\Generated_Source\PSoC4/UART_1.c **** *
 318:.\Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
 319:.\Generated_Source\PSoC4/UART_1.c **** void  UART_1_WriteControlRegister(uint8 control) 
 320:.\Generated_Source\PSoC4/UART_1.c **** {
 204              		.loc 1 320 0
 205              		.cfi_startproc
 206              	.LVL12:
 321:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_CONTROL_REG_REMOVED)
 322:.\Generated_Source\PSoC4/UART_1.c ****         if(0u != control)
 323:.\Generated_Source\PSoC4/UART_1.c ****         {
 324:.\Generated_Source\PSoC4/UART_1.c ****             /* Suppress compiler warning */
 325:.\Generated_Source\PSoC4/UART_1.c ****         }
 326:.\Generated_Source\PSoC4/UART_1.c ****     #else
 327:.\Generated_Source\PSoC4/UART_1.c ****        UART_1_CONTROL_REG = control;
 328:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_CONTROL_REG_REMOVED) */
 329:.\Generated_Source\PSoC4/UART_1.c **** }
 207              		.loc 1 329 0
 208              		@ sp needed
 209 0000 7047     		bx	lr
 210              		.cfi_endproc
 211              	.LFE7:
 212              		.size	UART_1_WriteControlRegister, .-UART_1_WriteControlRegister
 213 0002 C046     		.section	.text.UART_1_SetTxInterruptMode,"ax",%progbits
 214              		.align	2
 215              		.global	UART_1_SetTxInterruptMode
 216              		.code	16
 217              		.thumb_func
 218              		.type	UART_1_SetTxInterruptMode, %function
 219              	UART_1_SetTxInterruptMode:
 220              	.LFB8:
 330:.\Generated_Source\PSoC4/UART_1.c **** 
 331:.\Generated_Source\PSoC4/UART_1.c **** 
 332:.\Generated_Source\PSoC4/UART_1.c **** #if(UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 333:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 334:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_SetRxInterruptMode
 335:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 336:.\Generated_Source\PSoC4/UART_1.c ****     *
 337:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
 338:.\Generated_Source\PSoC4/UART_1.c ****     *  Configures the RX interrupt sources enabled.
 339:.\Generated_Source\PSoC4/UART_1.c ****     *
 340:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 341:.\Generated_Source\PSoC4/UART_1.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
 342:.\Generated_Source\PSoC4/UART_1.c ****     *  bit-field arrangement of the status register. This value must be a 
 343:.\Generated_Source\PSoC4/UART_1.c ****     *  combination of status register bit-masks shown below:
 344:.\Generated_Source\PSoC4/UART_1.c ****     *      UART_1_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccUFJMnK.s 			page 11


 345:.\Generated_Source\PSoC4/UART_1.c ****     *      UART_1_RX_STS_PAR_ERROR        Interrupt on parity error.
 346:.\Generated_Source\PSoC4/UART_1.c ****     *      UART_1_RX_STS_STOP_ERROR       Interrupt on stop error.
 347:.\Generated_Source\PSoC4/UART_1.c ****     *      UART_1_RX_STS_BREAK            Interrupt on break.
 348:.\Generated_Source\PSoC4/UART_1.c ****     *      UART_1_RX_STS_OVERRUN          Interrupt on overrun error.
 349:.\Generated_Source\PSoC4/UART_1.c ****     *      UART_1_RX_STS_ADDR_MATCH       Interrupt on address match.
 350:.\Generated_Source\PSoC4/UART_1.c ****     *      UART_1_RX_STS_MRKSPC           Interrupt on address detect.
 351:.\Generated_Source\PSoC4/UART_1.c ****     *
 352:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
 353:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
 354:.\Generated_Source\PSoC4/UART_1.c ****     *
 355:.\Generated_Source\PSoC4/UART_1.c ****     * Theory:
 356:.\Generated_Source\PSoC4/UART_1.c ****     *  Enables the output of specific status bits to the interrupt controller
 357:.\Generated_Source\PSoC4/UART_1.c ****     *
 358:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 359:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_SetRxInterruptMode(uint8 intSrc) 
 360:.\Generated_Source\PSoC4/UART_1.c ****     {
 361:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_RXSTATUS_MASK_REG  = intSrc;
 362:.\Generated_Source\PSoC4/UART_1.c ****     }
 363:.\Generated_Source\PSoC4/UART_1.c **** 
 364:.\Generated_Source\PSoC4/UART_1.c **** 
 365:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 366:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_ReadRxData
 367:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 368:.\Generated_Source\PSoC4/UART_1.c ****     *
 369:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
 370:.\Generated_Source\PSoC4/UART_1.c ****     *  Returns the next byte of received data. This function returns data without
 371:.\Generated_Source\PSoC4/UART_1.c ****     *  checking the status. You must check the status separately.
 372:.\Generated_Source\PSoC4/UART_1.c ****     *
 373:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 374:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
 375:.\Generated_Source\PSoC4/UART_1.c ****     *
 376:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
 377:.\Generated_Source\PSoC4/UART_1.c ****     *  Received data from RX register
 378:.\Generated_Source\PSoC4/UART_1.c ****     *
 379:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
 380:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBuffer - RAM buffer pointer for save received data.
 381:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferWrite - cyclic index for write to rxBuffer,
 382:.\Generated_Source\PSoC4/UART_1.c ****     *     checked to identify new data.
 383:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferRead - cyclic index for read from rxBuffer,
 384:.\Generated_Source\PSoC4/UART_1.c ****     *     incremented after each byte has been read from buffer.
 385:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferLoopDetect - cleared if loop condition was detected
 386:.\Generated_Source\PSoC4/UART_1.c ****     *     in RX ISR.
 387:.\Generated_Source\PSoC4/UART_1.c ****     *
 388:.\Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
 389:.\Generated_Source\PSoC4/UART_1.c ****     *  No.
 390:.\Generated_Source\PSoC4/UART_1.c ****     *
 391:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 392:.\Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_ReadRxData(void) 
 393:.\Generated_Source\PSoC4/UART_1.c ****     {
 394:.\Generated_Source\PSoC4/UART_1.c ****         uint8 rxData;
 395:.\Generated_Source\PSoC4/UART_1.c **** 
 396:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 397:.\Generated_Source\PSoC4/UART_1.c **** 
 398:.\Generated_Source\PSoC4/UART_1.c ****         uint8 locRxBufferRead;
 399:.\Generated_Source\PSoC4/UART_1.c ****         uint8 locRxBufferWrite;
 400:.\Generated_Source\PSoC4/UART_1.c **** 
 401:.\Generated_Source\PSoC4/UART_1.c ****         /* Protect variables that could change on interrupt */
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccUFJMnK.s 			page 12


 402:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_DisableRxInt();
 403:.\Generated_Source\PSoC4/UART_1.c **** 
 404:.\Generated_Source\PSoC4/UART_1.c ****         locRxBufferRead  = UART_1_rxBufferRead;
 405:.\Generated_Source\PSoC4/UART_1.c ****         locRxBufferWrite = UART_1_rxBufferWrite;
 406:.\Generated_Source\PSoC4/UART_1.c **** 
 407:.\Generated_Source\PSoC4/UART_1.c ****         if( (UART_1_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 408:.\Generated_Source\PSoC4/UART_1.c ****         {
 409:.\Generated_Source\PSoC4/UART_1.c ****             rxData = UART_1_rxBuffer[locRxBufferRead];
 410:.\Generated_Source\PSoC4/UART_1.c ****             locRxBufferRead++;
 411:.\Generated_Source\PSoC4/UART_1.c **** 
 412:.\Generated_Source\PSoC4/UART_1.c ****             if(locRxBufferRead >= UART_1_RX_BUFFER_SIZE)
 413:.\Generated_Source\PSoC4/UART_1.c ****             {
 414:.\Generated_Source\PSoC4/UART_1.c ****                 locRxBufferRead = 0u;
 415:.\Generated_Source\PSoC4/UART_1.c ****             }
 416:.\Generated_Source\PSoC4/UART_1.c ****             /* Update the real pointer */
 417:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_rxBufferRead = locRxBufferRead;
 418:.\Generated_Source\PSoC4/UART_1.c **** 
 419:.\Generated_Source\PSoC4/UART_1.c ****             if(UART_1_rxBufferLoopDetect != 0u)
 420:.\Generated_Source\PSoC4/UART_1.c ****             {
 421:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_rxBufferLoopDetect = 0u;
 422:.\Generated_Source\PSoC4/UART_1.c ****                 #if ((UART_1_RX_INTERRUPT_ENABLED) && (UART_1_FLOW_CONTROL != 0u))
 423:.\Generated_Source\PSoC4/UART_1.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:.\Generated_Source\PSoC4/UART_1.c ****                     #if( UART_1_HD_ENABLED )
 425:.\Generated_Source\PSoC4/UART_1.c ****                         if((UART_1_CONTROL_REG & UART_1_CTRL_HD_SEND) == 0u)
 426:.\Generated_Source\PSoC4/UART_1.c ****                         {   /* In Half duplex mode return RX mask only in RX
 427:.\Generated_Source\PSoC4/UART_1.c ****                             *  configuration set, otherwise
 428:.\Generated_Source\PSoC4/UART_1.c ****                             *  mask will be returned in LoadRxConfig() API.
 429:.\Generated_Source\PSoC4/UART_1.c ****                             */
 430:.\Generated_Source\PSoC4/UART_1.c ****                             UART_1_RXSTATUS_MASK_REG  |= UART_1_RX_STS_FIFO_NOTEMPTY;
 431:.\Generated_Source\PSoC4/UART_1.c ****                         }
 432:.\Generated_Source\PSoC4/UART_1.c ****                     #else
 433:.\Generated_Source\PSoC4/UART_1.c ****                         UART_1_RXSTATUS_MASK_REG  |= UART_1_RX_STS_FIFO_NOTEMPTY;
 434:.\Generated_Source\PSoC4/UART_1.c ****                     #endif /* end UART_1_HD_ENABLED */
 435:.\Generated_Source\PSoC4/UART_1.c ****                 #endif /* ((UART_1_RX_INTERRUPT_ENABLED) && (UART_1_FLOW_CONTROL != 0u)) */
 436:.\Generated_Source\PSoC4/UART_1.c ****             }
 437:.\Generated_Source\PSoC4/UART_1.c ****         }
 438:.\Generated_Source\PSoC4/UART_1.c ****         else
 439:.\Generated_Source\PSoC4/UART_1.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 440:.\Generated_Source\PSoC4/UART_1.c ****             rxData = UART_1_RXDATA_REG;
 441:.\Generated_Source\PSoC4/UART_1.c ****         }
 442:.\Generated_Source\PSoC4/UART_1.c **** 
 443:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_EnableRxInt();
 444:.\Generated_Source\PSoC4/UART_1.c **** 
 445:.\Generated_Source\PSoC4/UART_1.c ****     #else
 446:.\Generated_Source\PSoC4/UART_1.c **** 
 447:.\Generated_Source\PSoC4/UART_1.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 448:.\Generated_Source\PSoC4/UART_1.c ****         rxData = UART_1_RXDATA_REG;
 449:.\Generated_Source\PSoC4/UART_1.c **** 
 450:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 451:.\Generated_Source\PSoC4/UART_1.c **** 
 452:.\Generated_Source\PSoC4/UART_1.c ****         return(rxData);
 453:.\Generated_Source\PSoC4/UART_1.c ****     }
 454:.\Generated_Source\PSoC4/UART_1.c **** 
 455:.\Generated_Source\PSoC4/UART_1.c **** 
 456:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 457:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_ReadRxStatus
 458:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccUFJMnK.s 			page 13


 459:.\Generated_Source\PSoC4/UART_1.c ****     *
 460:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
 461:.\Generated_Source\PSoC4/UART_1.c ****     *  Returns the current state of the receiver status register and the software
 462:.\Generated_Source\PSoC4/UART_1.c ****     *  buffer overflow status.
 463:.\Generated_Source\PSoC4/UART_1.c ****     *
 464:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 465:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
 466:.\Generated_Source\PSoC4/UART_1.c ****     *
 467:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
 468:.\Generated_Source\PSoC4/UART_1.c ****     *  Current state of the status register.
 469:.\Generated_Source\PSoC4/UART_1.c ****     *
 470:.\Generated_Source\PSoC4/UART_1.c ****     * Side Effect:
 471:.\Generated_Source\PSoC4/UART_1.c ****     *  All status register bits are clear-on-read except
 472:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_RX_STS_FIFO_NOTEMPTY.
 473:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:.\Generated_Source\PSoC4/UART_1.c ****     *  register read.
 475:.\Generated_Source\PSoC4/UART_1.c ****     *
 476:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
 477:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferOverflow - used to indicate overload condition.
 478:.\Generated_Source\PSoC4/UART_1.c ****     *   It set to one in RX interrupt when there isn't free space in
 479:.\Generated_Source\PSoC4/UART_1.c ****     *   UART_1_rxBufferRead to write new data. This condition returned
 480:.\Generated_Source\PSoC4/UART_1.c ****     *   and cleared to zero by this API as an
 481:.\Generated_Source\PSoC4/UART_1.c ****     *   UART_1_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 482:.\Generated_Source\PSoC4/UART_1.c ****     *   bits.
 483:.\Generated_Source\PSoC4/UART_1.c ****     *
 484:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 485:.\Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_ReadRxStatus(void) 
 486:.\Generated_Source\PSoC4/UART_1.c ****     {
 487:.\Generated_Source\PSoC4/UART_1.c ****         uint8 status;
 488:.\Generated_Source\PSoC4/UART_1.c **** 
 489:.\Generated_Source\PSoC4/UART_1.c ****         status = UART_1_RXSTATUS_REG & UART_1_RX_HW_MASK;
 490:.\Generated_Source\PSoC4/UART_1.c **** 
 491:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 492:.\Generated_Source\PSoC4/UART_1.c ****         if(UART_1_rxBufferOverflow != 0u)
 493:.\Generated_Source\PSoC4/UART_1.c ****         {
 494:.\Generated_Source\PSoC4/UART_1.c ****             status |= UART_1_RX_STS_SOFT_BUFF_OVER;
 495:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_rxBufferOverflow = 0u;
 496:.\Generated_Source\PSoC4/UART_1.c ****         }
 497:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 498:.\Generated_Source\PSoC4/UART_1.c **** 
 499:.\Generated_Source\PSoC4/UART_1.c ****         return(status);
 500:.\Generated_Source\PSoC4/UART_1.c ****     }
 501:.\Generated_Source\PSoC4/UART_1.c **** 
 502:.\Generated_Source\PSoC4/UART_1.c **** 
 503:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 504:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_GetChar
 505:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 506:.\Generated_Source\PSoC4/UART_1.c ****     *
 507:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
 508:.\Generated_Source\PSoC4/UART_1.c ****     *  Returns the last received byte of data. UART_1_GetChar() is
 509:.\Generated_Source\PSoC4/UART_1.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
 510:.\Generated_Source\PSoC4/UART_1.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
 511:.\Generated_Source\PSoC4/UART_1.c ****     *
 512:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 513:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
 514:.\Generated_Source\PSoC4/UART_1.c ****     *
 515:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccUFJMnK.s 			page 14


 516:.\Generated_Source\PSoC4/UART_1.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 517:.\Generated_Source\PSoC4/UART_1.c ****     *  A returned zero signifies an error condition or no data available.
 518:.\Generated_Source\PSoC4/UART_1.c ****     *
 519:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
 520:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBuffer - RAM buffer pointer for save received data.
 521:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferWrite - cyclic index for write to rxBuffer,
 522:.\Generated_Source\PSoC4/UART_1.c ****     *     checked to identify new data.
 523:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferRead - cyclic index for read from rxBuffer,
 524:.\Generated_Source\PSoC4/UART_1.c ****     *     incremented after each byte has been read from buffer.
 525:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferLoopDetect - cleared if loop condition was detected
 526:.\Generated_Source\PSoC4/UART_1.c ****     *     in RX ISR.
 527:.\Generated_Source\PSoC4/UART_1.c ****     *
 528:.\Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
 529:.\Generated_Source\PSoC4/UART_1.c ****     *  No.
 530:.\Generated_Source\PSoC4/UART_1.c ****     *
 531:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 532:.\Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_GetChar(void) 
 533:.\Generated_Source\PSoC4/UART_1.c ****     {
 534:.\Generated_Source\PSoC4/UART_1.c ****         uint8 rxData = 0u;
 535:.\Generated_Source\PSoC4/UART_1.c ****         uint8 rxStatus;
 536:.\Generated_Source\PSoC4/UART_1.c **** 
 537:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 538:.\Generated_Source\PSoC4/UART_1.c ****         uint8 locRxBufferRead;
 539:.\Generated_Source\PSoC4/UART_1.c ****         uint8 locRxBufferWrite;
 540:.\Generated_Source\PSoC4/UART_1.c **** 
 541:.\Generated_Source\PSoC4/UART_1.c ****         /* Protect variables that could change on interrupt */
 542:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_DisableRxInt();
 543:.\Generated_Source\PSoC4/UART_1.c **** 
 544:.\Generated_Source\PSoC4/UART_1.c ****         locRxBufferRead  = UART_1_rxBufferRead;
 545:.\Generated_Source\PSoC4/UART_1.c ****         locRxBufferWrite = UART_1_rxBufferWrite;
 546:.\Generated_Source\PSoC4/UART_1.c **** 
 547:.\Generated_Source\PSoC4/UART_1.c ****         if( (UART_1_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 548:.\Generated_Source\PSoC4/UART_1.c ****         {
 549:.\Generated_Source\PSoC4/UART_1.c ****             rxData = UART_1_rxBuffer[locRxBufferRead];
 550:.\Generated_Source\PSoC4/UART_1.c ****             locRxBufferRead++;
 551:.\Generated_Source\PSoC4/UART_1.c ****             if(locRxBufferRead >= UART_1_RX_BUFFER_SIZE)
 552:.\Generated_Source\PSoC4/UART_1.c ****             {
 553:.\Generated_Source\PSoC4/UART_1.c ****                 locRxBufferRead = 0u;
 554:.\Generated_Source\PSoC4/UART_1.c ****             }
 555:.\Generated_Source\PSoC4/UART_1.c ****             /* Update the real pointer */
 556:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_rxBufferRead = locRxBufferRead;
 557:.\Generated_Source\PSoC4/UART_1.c **** 
 558:.\Generated_Source\PSoC4/UART_1.c ****             if(UART_1_rxBufferLoopDetect != 0u)
 559:.\Generated_Source\PSoC4/UART_1.c ****             {
 560:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_rxBufferLoopDetect = 0u;
 561:.\Generated_Source\PSoC4/UART_1.c ****                 #if( (UART_1_RX_INTERRUPT_ENABLED) && (UART_1_FLOW_CONTROL != 0u) )
 562:.\Generated_Source\PSoC4/UART_1.c ****                     /* When Hardware Flow Control selected - return RX mask */
 563:.\Generated_Source\PSoC4/UART_1.c ****                     #if( UART_1_HD_ENABLED )
 564:.\Generated_Source\PSoC4/UART_1.c ****                         if((UART_1_CONTROL_REG & UART_1_CTRL_HD_SEND) == 0u)
 565:.\Generated_Source\PSoC4/UART_1.c ****                         {   /* In Half duplex mode return RX mask only if
 566:.\Generated_Source\PSoC4/UART_1.c ****                             *  RX configuration set, otherwise
 567:.\Generated_Source\PSoC4/UART_1.c ****                             *  mask will be returned in LoadRxConfig() API.
 568:.\Generated_Source\PSoC4/UART_1.c ****                             */
 569:.\Generated_Source\PSoC4/UART_1.c ****                             UART_1_RXSTATUS_MASK_REG |= UART_1_RX_STS_FIFO_NOTEMPTY;
 570:.\Generated_Source\PSoC4/UART_1.c ****                         }
 571:.\Generated_Source\PSoC4/UART_1.c ****                     #else
 572:.\Generated_Source\PSoC4/UART_1.c ****                         UART_1_RXSTATUS_MASK_REG |= UART_1_RX_STS_FIFO_NOTEMPTY;
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccUFJMnK.s 			page 15


 573:.\Generated_Source\PSoC4/UART_1.c ****                     #endif /* end UART_1_HD_ENABLED */
 574:.\Generated_Source\PSoC4/UART_1.c ****                 #endif /* UART_1_RX_INTERRUPT_ENABLED and Hardware flow control*/
 575:.\Generated_Source\PSoC4/UART_1.c ****             }
 576:.\Generated_Source\PSoC4/UART_1.c **** 
 577:.\Generated_Source\PSoC4/UART_1.c ****         }
 578:.\Generated_Source\PSoC4/UART_1.c ****         else
 579:.\Generated_Source\PSoC4/UART_1.c ****         {   rxStatus = UART_1_RXSTATUS_REG;
 580:.\Generated_Source\PSoC4/UART_1.c ****             if((rxStatus & UART_1_RX_STS_FIFO_NOTEMPTY) != 0u)
 581:.\Generated_Source\PSoC4/UART_1.c ****             {   /* Read received data from FIFO */
 582:.\Generated_Source\PSoC4/UART_1.c ****                 rxData = UART_1_RXDATA_REG;
 583:.\Generated_Source\PSoC4/UART_1.c ****                 /*Check status on error*/
 584:.\Generated_Source\PSoC4/UART_1.c ****                 if((rxStatus & (UART_1_RX_STS_BREAK | UART_1_RX_STS_PAR_ERROR |
 585:.\Generated_Source\PSoC4/UART_1.c ****                                 UART_1_RX_STS_STOP_ERROR | UART_1_RX_STS_OVERRUN)) != 0u)
 586:.\Generated_Source\PSoC4/UART_1.c ****                 {
 587:.\Generated_Source\PSoC4/UART_1.c ****                     rxData = 0u;
 588:.\Generated_Source\PSoC4/UART_1.c ****                 }
 589:.\Generated_Source\PSoC4/UART_1.c ****             }
 590:.\Generated_Source\PSoC4/UART_1.c ****         }
 591:.\Generated_Source\PSoC4/UART_1.c **** 
 592:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_EnableRxInt();
 593:.\Generated_Source\PSoC4/UART_1.c **** 
 594:.\Generated_Source\PSoC4/UART_1.c ****     #else
 595:.\Generated_Source\PSoC4/UART_1.c **** 
 596:.\Generated_Source\PSoC4/UART_1.c ****         rxStatus =UART_1_RXSTATUS_REG;
 597:.\Generated_Source\PSoC4/UART_1.c ****         if((rxStatus & UART_1_RX_STS_FIFO_NOTEMPTY) != 0u)
 598:.\Generated_Source\PSoC4/UART_1.c ****         {
 599:.\Generated_Source\PSoC4/UART_1.c ****             /* Read received data from FIFO */
 600:.\Generated_Source\PSoC4/UART_1.c ****             rxData = UART_1_RXDATA_REG;
 601:.\Generated_Source\PSoC4/UART_1.c **** 
 602:.\Generated_Source\PSoC4/UART_1.c ****             /*Check status on error*/
 603:.\Generated_Source\PSoC4/UART_1.c ****             if((rxStatus & (UART_1_RX_STS_BREAK | UART_1_RX_STS_PAR_ERROR |
 604:.\Generated_Source\PSoC4/UART_1.c ****                             UART_1_RX_STS_STOP_ERROR | UART_1_RX_STS_OVERRUN)) != 0u)
 605:.\Generated_Source\PSoC4/UART_1.c ****             {
 606:.\Generated_Source\PSoC4/UART_1.c ****                 rxData = 0u;
 607:.\Generated_Source\PSoC4/UART_1.c ****             }
 608:.\Generated_Source\PSoC4/UART_1.c ****         }
 609:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 610:.\Generated_Source\PSoC4/UART_1.c **** 
 611:.\Generated_Source\PSoC4/UART_1.c ****         return(rxData);
 612:.\Generated_Source\PSoC4/UART_1.c ****     }
 613:.\Generated_Source\PSoC4/UART_1.c **** 
 614:.\Generated_Source\PSoC4/UART_1.c **** 
 615:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 616:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_GetByte
 617:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 618:.\Generated_Source\PSoC4/UART_1.c ****     *
 619:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
 620:.\Generated_Source\PSoC4/UART_1.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:.\Generated_Source\PSoC4/UART_1.c ****     *  condition.
 622:.\Generated_Source\PSoC4/UART_1.c ****     *
 623:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 624:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
 625:.\Generated_Source\PSoC4/UART_1.c ****     *
 626:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
 627:.\Generated_Source\PSoC4/UART_1.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
 628:.\Generated_Source\PSoC4/UART_1.c ****     *  an error has occurred.
 629:.\Generated_Source\PSoC4/UART_1.c ****     *
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccUFJMnK.s 			page 16


 630:.\Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
 631:.\Generated_Source\PSoC4/UART_1.c ****     *  No.
 632:.\Generated_Source\PSoC4/UART_1.c ****     *
 633:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 634:.\Generated_Source\PSoC4/UART_1.c ****     uint16 UART_1_GetByte(void) 
 635:.\Generated_Source\PSoC4/UART_1.c ****     {
 636:.\Generated_Source\PSoC4/UART_1.c ****         
 637:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 638:.\Generated_Source\PSoC4/UART_1.c ****         uint16 locErrorStatus;
 639:.\Generated_Source\PSoC4/UART_1.c ****         /* Protect variables that could change on interrupt */
 640:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_DisableRxInt();
 641:.\Generated_Source\PSoC4/UART_1.c ****         locErrorStatus = (uint16)UART_1_errorStatus;
 642:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_errorStatus = 0u;
 643:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_EnableRxInt();
 644:.\Generated_Source\PSoC4/UART_1.c ****         return ( (uint16)(locErrorStatus << 8u) | UART_1_ReadRxData() );
 645:.\Generated_Source\PSoC4/UART_1.c ****     #else
 646:.\Generated_Source\PSoC4/UART_1.c ****         return ( ((uint16)UART_1_ReadRxStatus() << 8u) | UART_1_ReadRxData() );
 647:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* UART_1_RX_INTERRUPT_ENABLED */
 648:.\Generated_Source\PSoC4/UART_1.c ****         
 649:.\Generated_Source\PSoC4/UART_1.c ****     }
 650:.\Generated_Source\PSoC4/UART_1.c **** 
 651:.\Generated_Source\PSoC4/UART_1.c **** 
 652:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 653:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_GetRxBufferSize
 654:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 655:.\Generated_Source\PSoC4/UART_1.c ****     *
 656:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
 657:.\Generated_Source\PSoC4/UART_1.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:.\Generated_Source\PSoC4/UART_1.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:.\Generated_Source\PSoC4/UART_1.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:.\Generated_Source\PSoC4/UART_1.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
 661:.\Generated_Source\PSoC4/UART_1.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
 662:.\Generated_Source\PSoC4/UART_1.c ****     *    account.
 663:.\Generated_Source\PSoC4/UART_1.c ****     *
 664:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 665:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
 666:.\Generated_Source\PSoC4/UART_1.c ****     *
 667:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
 668:.\Generated_Source\PSoC4/UART_1.c ****     *  uint8: Number of bytes in the RX buffer. 
 669:.\Generated_Source\PSoC4/UART_1.c ****     *    Return value type depends on RX Buffer Size parameter.
 670:.\Generated_Source\PSoC4/UART_1.c ****     *
 671:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
 672:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferWrite - used to calculate left bytes.
 673:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferRead - used to calculate left bytes.
 674:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferLoopDetect - checked to decide left bytes amount.
 675:.\Generated_Source\PSoC4/UART_1.c ****     *
 676:.\Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
 677:.\Generated_Source\PSoC4/UART_1.c ****     *  No.
 678:.\Generated_Source\PSoC4/UART_1.c ****     *
 679:.\Generated_Source\PSoC4/UART_1.c ****     * Theory:
 680:.\Generated_Source\PSoC4/UART_1.c ****     *  Allows the user to find out how full the RX Buffer is.
 681:.\Generated_Source\PSoC4/UART_1.c ****     *
 682:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 683:.\Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_GetRxBufferSize(void)
 684:.\Generated_Source\PSoC4/UART_1.c ****                                                             
 685:.\Generated_Source\PSoC4/UART_1.c ****     {
 686:.\Generated_Source\PSoC4/UART_1.c ****         uint8 size;
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccUFJMnK.s 			page 17


 687:.\Generated_Source\PSoC4/UART_1.c **** 
 688:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 689:.\Generated_Source\PSoC4/UART_1.c **** 
 690:.\Generated_Source\PSoC4/UART_1.c ****         /* Protect variables that could change on interrupt */
 691:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_DisableRxInt();
 692:.\Generated_Source\PSoC4/UART_1.c **** 
 693:.\Generated_Source\PSoC4/UART_1.c ****         if(UART_1_rxBufferRead == UART_1_rxBufferWrite)
 694:.\Generated_Source\PSoC4/UART_1.c ****         {
 695:.\Generated_Source\PSoC4/UART_1.c ****             if(UART_1_rxBufferLoopDetect != 0u)
 696:.\Generated_Source\PSoC4/UART_1.c ****             {
 697:.\Generated_Source\PSoC4/UART_1.c ****                 size = UART_1_RX_BUFFER_SIZE;
 698:.\Generated_Source\PSoC4/UART_1.c ****             }
 699:.\Generated_Source\PSoC4/UART_1.c ****             else
 700:.\Generated_Source\PSoC4/UART_1.c ****             {
 701:.\Generated_Source\PSoC4/UART_1.c ****                 size = 0u;
 702:.\Generated_Source\PSoC4/UART_1.c ****             }
 703:.\Generated_Source\PSoC4/UART_1.c ****         }
 704:.\Generated_Source\PSoC4/UART_1.c ****         else if(UART_1_rxBufferRead < UART_1_rxBufferWrite)
 705:.\Generated_Source\PSoC4/UART_1.c ****         {
 706:.\Generated_Source\PSoC4/UART_1.c ****             size = (UART_1_rxBufferWrite - UART_1_rxBufferRead);
 707:.\Generated_Source\PSoC4/UART_1.c ****         }
 708:.\Generated_Source\PSoC4/UART_1.c ****         else
 709:.\Generated_Source\PSoC4/UART_1.c ****         {
 710:.\Generated_Source\PSoC4/UART_1.c ****             size = (UART_1_RX_BUFFER_SIZE - UART_1_rxBufferRead) + UART_1_rxBufferWrite;
 711:.\Generated_Source\PSoC4/UART_1.c ****         }
 712:.\Generated_Source\PSoC4/UART_1.c **** 
 713:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_EnableRxInt();
 714:.\Generated_Source\PSoC4/UART_1.c **** 
 715:.\Generated_Source\PSoC4/UART_1.c ****     #else
 716:.\Generated_Source\PSoC4/UART_1.c **** 
 717:.\Generated_Source\PSoC4/UART_1.c ****         /* We can only know if there is data in the fifo. */
 718:.\Generated_Source\PSoC4/UART_1.c ****         size = ((UART_1_RXSTATUS_REG & UART_1_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 719:.\Generated_Source\PSoC4/UART_1.c **** 
 720:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 721:.\Generated_Source\PSoC4/UART_1.c **** 
 722:.\Generated_Source\PSoC4/UART_1.c ****         return(size);
 723:.\Generated_Source\PSoC4/UART_1.c ****     }
 724:.\Generated_Source\PSoC4/UART_1.c **** 
 725:.\Generated_Source\PSoC4/UART_1.c **** 
 726:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 727:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_ClearRxBuffer
 728:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 729:.\Generated_Source\PSoC4/UART_1.c ****     *
 730:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
 731:.\Generated_Source\PSoC4/UART_1.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
 732:.\Generated_Source\PSoC4/UART_1.c ****     *
 733:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 734:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
 735:.\Generated_Source\PSoC4/UART_1.c ****     *
 736:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
 737:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
 738:.\Generated_Source\PSoC4/UART_1.c ****     *
 739:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
 740:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferWrite - cleared to zero.
 741:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferRead - cleared to zero.
 742:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferLoopDetect - cleared to zero.
 743:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferOverflow - cleared to zero.
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccUFJMnK.s 			page 18


 744:.\Generated_Source\PSoC4/UART_1.c ****     *
 745:.\Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
 746:.\Generated_Source\PSoC4/UART_1.c ****     *  No.
 747:.\Generated_Source\PSoC4/UART_1.c ****     *
 748:.\Generated_Source\PSoC4/UART_1.c ****     * Theory:
 749:.\Generated_Source\PSoC4/UART_1.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:.\Generated_Source\PSoC4/UART_1.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:.\Generated_Source\PSoC4/UART_1.c ****     *  have remained in the RAM.
 752:.\Generated_Source\PSoC4/UART_1.c ****     *
 753:.\Generated_Source\PSoC4/UART_1.c ****     * Side Effects:
 754:.\Generated_Source\PSoC4/UART_1.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:.\Generated_Source\PSoC4/UART_1.c ****     *
 756:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 757:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_ClearRxBuffer(void) 
 758:.\Generated_Source\PSoC4/UART_1.c ****     {
 759:.\Generated_Source\PSoC4/UART_1.c ****         uint8 enableInterrupts;
 760:.\Generated_Source\PSoC4/UART_1.c **** 
 761:.\Generated_Source\PSoC4/UART_1.c ****         /* Clear the HW FIFO */
 762:.\Generated_Source\PSoC4/UART_1.c ****         enableInterrupts = CyEnterCriticalSection();
 763:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_RXDATA_AUX_CTL_REG |= (uint8)  UART_1_RX_FIFO_CLR;
 764:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_RXDATA_AUX_CTL_REG &= (uint8) ~UART_1_RX_FIFO_CLR;
 765:.\Generated_Source\PSoC4/UART_1.c ****         CyExitCriticalSection(enableInterrupts);
 766:.\Generated_Source\PSoC4/UART_1.c **** 
 767:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 768:.\Generated_Source\PSoC4/UART_1.c **** 
 769:.\Generated_Source\PSoC4/UART_1.c ****         /* Protect variables that could change on interrupt. */
 770:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_DisableRxInt();
 771:.\Generated_Source\PSoC4/UART_1.c **** 
 772:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_rxBufferRead = 0u;
 773:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_rxBufferWrite = 0u;
 774:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_rxBufferLoopDetect = 0u;
 775:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_rxBufferOverflow = 0u;
 776:.\Generated_Source\PSoC4/UART_1.c **** 
 777:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_EnableRxInt();
 778:.\Generated_Source\PSoC4/UART_1.c **** 
 779:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 780:.\Generated_Source\PSoC4/UART_1.c **** 
 781:.\Generated_Source\PSoC4/UART_1.c ****     }
 782:.\Generated_Source\PSoC4/UART_1.c **** 
 783:.\Generated_Source\PSoC4/UART_1.c **** 
 784:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 785:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_SetRxAddressMode
 786:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 787:.\Generated_Source\PSoC4/UART_1.c ****     *
 788:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
 789:.\Generated_Source\PSoC4/UART_1.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
 790:.\Generated_Source\PSoC4/UART_1.c ****     *  UART.
 791:.\Generated_Source\PSoC4/UART_1.c ****     *
 792:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 793:.\Generated_Source\PSoC4/UART_1.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 795:.\Generated_Source\PSoC4/UART_1.c ****     *                                               detection
 796:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:.\Generated_Source\PSoC4/UART_1.c ****     *                                               address detection
 798:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:.\Generated_Source\PSoC4/UART_1.c ****     *                                               detection
 800:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccUFJMnK.s 			page 19


 801:.\Generated_Source\PSoC4/UART_1.c ****     *                                               address detection
 802:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1__B_UART__AM_NONE - No address detection
 803:.\Generated_Source\PSoC4/UART_1.c ****     *
 804:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
 805:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
 806:.\Generated_Source\PSoC4/UART_1.c ****     *
 807:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
 808:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxAddressMode - the parameter stored in this variable for
 809:.\Generated_Source\PSoC4/UART_1.c ****     *   the farther usage in RX ISR.
 810:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxAddressDetected - set to initial state (0).
 811:.\Generated_Source\PSoC4/UART_1.c ****     *
 812:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 813:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_SetRxAddressMode(uint8 addressMode)
 814:.\Generated_Source\PSoC4/UART_1.c ****                                                         
 815:.\Generated_Source\PSoC4/UART_1.c ****     {
 816:.\Generated_Source\PSoC4/UART_1.c ****         #if(UART_1_RXHW_ADDRESS_ENABLED)
 817:.\Generated_Source\PSoC4/UART_1.c ****             #if(UART_1_CONTROL_REG_REMOVED)
 818:.\Generated_Source\PSoC4/UART_1.c ****                 if(0u != addressMode)
 819:.\Generated_Source\PSoC4/UART_1.c ****                 {
 820:.\Generated_Source\PSoC4/UART_1.c ****                     /* Suppress compiler warning */
 821:.\Generated_Source\PSoC4/UART_1.c ****                 }
 822:.\Generated_Source\PSoC4/UART_1.c ****             #else /* UART_1_CONTROL_REG_REMOVED */
 823:.\Generated_Source\PSoC4/UART_1.c ****                 uint8 tmpCtrl;
 824:.\Generated_Source\PSoC4/UART_1.c ****                 tmpCtrl = UART_1_CONTROL_REG & (uint8)~UART_1_CTRL_RXADDR_MODE_MASK;
 825:.\Generated_Source\PSoC4/UART_1.c ****                 tmpCtrl |= (uint8)(addressMode << UART_1_CTRL_RXADDR_MODE0_SHIFT);
 826:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_CONTROL_REG = tmpCtrl;
 827:.\Generated_Source\PSoC4/UART_1.c **** 
 828:.\Generated_Source\PSoC4/UART_1.c ****                 #if(UART_1_RX_INTERRUPT_ENABLED && \
 829:.\Generated_Source\PSoC4/UART_1.c ****                    (UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH) )
 830:.\Generated_Source\PSoC4/UART_1.c ****                     UART_1_rxAddressMode = addressMode;
 831:.\Generated_Source\PSoC4/UART_1.c ****                     UART_1_rxAddressDetected = 0u;
 832:.\Generated_Source\PSoC4/UART_1.c ****                 #endif /* End UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH*/
 833:.\Generated_Source\PSoC4/UART_1.c ****             #endif /* End UART_1_CONTROL_REG_REMOVED */
 834:.\Generated_Source\PSoC4/UART_1.c ****         #else /* UART_1_RXHW_ADDRESS_ENABLED */
 835:.\Generated_Source\PSoC4/UART_1.c ****             if(0u != addressMode)
 836:.\Generated_Source\PSoC4/UART_1.c ****             {
 837:.\Generated_Source\PSoC4/UART_1.c ****                 /* Suppress compiler warning */
 838:.\Generated_Source\PSoC4/UART_1.c ****             }
 839:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* End UART_1_RXHW_ADDRESS_ENABLED */
 840:.\Generated_Source\PSoC4/UART_1.c ****     }
 841:.\Generated_Source\PSoC4/UART_1.c **** 
 842:.\Generated_Source\PSoC4/UART_1.c **** 
 843:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 844:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_SetRxAddress1
 845:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 846:.\Generated_Source\PSoC4/UART_1.c ****     *
 847:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
 848:.\Generated_Source\PSoC4/UART_1.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:.\Generated_Source\PSoC4/UART_1.c ****     *
 850:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 851:.\Generated_Source\PSoC4/UART_1.c ****     *  address: Address #1 for hardware address detection.
 852:.\Generated_Source\PSoC4/UART_1.c ****     *
 853:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
 854:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
 855:.\Generated_Source\PSoC4/UART_1.c ****     *
 856:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 857:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_SetRxAddress1(uint8 address) 
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccUFJMnK.s 			page 20


 858:.\Generated_Source\PSoC4/UART_1.c ****     {
 859:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_RXADDRESS1_REG = address;
 860:.\Generated_Source\PSoC4/UART_1.c ****     }
 861:.\Generated_Source\PSoC4/UART_1.c **** 
 862:.\Generated_Source\PSoC4/UART_1.c **** 
 863:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 864:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_SetRxAddress2
 865:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 866:.\Generated_Source\PSoC4/UART_1.c ****     *
 867:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
 868:.\Generated_Source\PSoC4/UART_1.c ****     *  Sets the second of two hardware-detectable receiver addresses.
 869:.\Generated_Source\PSoC4/UART_1.c ****     *
 870:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 871:.\Generated_Source\PSoC4/UART_1.c ****     *  address: Address #2 for hardware address detection.
 872:.\Generated_Source\PSoC4/UART_1.c ****     *
 873:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
 874:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
 875:.\Generated_Source\PSoC4/UART_1.c ****     *
 876:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 877:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_SetRxAddress2(uint8 address) 
 878:.\Generated_Source\PSoC4/UART_1.c ****     {
 879:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_RXADDRESS2_REG = address;
 880:.\Generated_Source\PSoC4/UART_1.c ****     }
 881:.\Generated_Source\PSoC4/UART_1.c **** 
 882:.\Generated_Source\PSoC4/UART_1.c **** #endif  /* UART_1_RX_ENABLED || UART_1_HD_ENABLED*/
 883:.\Generated_Source\PSoC4/UART_1.c **** 
 884:.\Generated_Source\PSoC4/UART_1.c **** 
 885:.\Generated_Source\PSoC4/UART_1.c **** #if( (UART_1_TX_ENABLED) || (UART_1_HD_ENABLED) )
 886:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 887:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_SetTxInterruptMode
 888:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 889:.\Generated_Source\PSoC4/UART_1.c ****     *
 890:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
 891:.\Generated_Source\PSoC4/UART_1.c ****     *  Configures the TX interrupt sources to be enabled, but does not enable the
 892:.\Generated_Source\PSoC4/UART_1.c ****     *  interrupt.
 893:.\Generated_Source\PSoC4/UART_1.c ****     *
 894:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 895:.\Generated_Source\PSoC4/UART_1.c ****     *  intSrc: Bit field containing the TX interrupt sources to enable
 896:.\Generated_Source\PSoC4/UART_1.c ****     *   UART_1_TX_STS_COMPLETE        Interrupt on TX byte complete
 897:.\Generated_Source\PSoC4/UART_1.c ****     *   UART_1_TX_STS_FIFO_EMPTY      Interrupt when TX FIFO is empty
 898:.\Generated_Source\PSoC4/UART_1.c ****     *   UART_1_TX_STS_FIFO_FULL       Interrupt when TX FIFO is full
 899:.\Generated_Source\PSoC4/UART_1.c ****     *   UART_1_TX_STS_FIFO_NOT_FULL   Interrupt when TX FIFO is not full
 900:.\Generated_Source\PSoC4/UART_1.c ****     *
 901:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
 902:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
 903:.\Generated_Source\PSoC4/UART_1.c ****     *
 904:.\Generated_Source\PSoC4/UART_1.c ****     * Theory:
 905:.\Generated_Source\PSoC4/UART_1.c ****     *  Enables the output of specific status bits to the interrupt controller
 906:.\Generated_Source\PSoC4/UART_1.c ****     *
 907:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 908:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_SetTxInterruptMode(uint8 intSrc) 
 909:.\Generated_Source\PSoC4/UART_1.c ****     {
 221              		.loc 1 909 0
 222              		.cfi_startproc
 223              	.LVL13:
 910:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_TXSTATUS_MASK_REG = intSrc;
 224              		.loc 1 910 0
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccUFJMnK.s 			page 21


 225 0000 014B     		ldr	r3, .L17
 226 0002 1870     		strb	r0, [r3]
 911:.\Generated_Source\PSoC4/UART_1.c ****     }
 227              		.loc 1 911 0
 228              		@ sp needed
 229 0004 7047     		bx	lr
 230              	.L18:
 231 0006 C046     		.align	2
 232              	.L17:
 233 0008 82000F40 		.word	1074724994
 234              		.cfi_endproc
 235              	.LFE8:
 236              		.size	UART_1_SetTxInterruptMode, .-UART_1_SetTxInterruptMode
 237              		.section	.text.UART_1_WriteTxData,"ax",%progbits
 238              		.align	2
 239              		.global	UART_1_WriteTxData
 240              		.code	16
 241              		.thumb_func
 242              		.type	UART_1_WriteTxData, %function
 243              	UART_1_WriteTxData:
 244              	.LFB9:
 912:.\Generated_Source\PSoC4/UART_1.c **** 
 913:.\Generated_Source\PSoC4/UART_1.c **** 
 914:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 915:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_WriteTxData
 916:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 917:.\Generated_Source\PSoC4/UART_1.c ****     *
 918:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
 919:.\Generated_Source\PSoC4/UART_1.c ****     *  Places a byte of data into the transmit buffer to be sent when the bus is
 920:.\Generated_Source\PSoC4/UART_1.c ****     *  available without checking the TX status register. You must check status
 921:.\Generated_Source\PSoC4/UART_1.c ****     *  separately.
 922:.\Generated_Source\PSoC4/UART_1.c ****     *
 923:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 924:.\Generated_Source\PSoC4/UART_1.c ****     *  txDataByte: data byte
 925:.\Generated_Source\PSoC4/UART_1.c ****     *
 926:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
 927:.\Generated_Source\PSoC4/UART_1.c ****     * None.
 928:.\Generated_Source\PSoC4/UART_1.c ****     *
 929:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
 930:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBuffer - RAM buffer pointer for save data for transmission
 931:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBufferWrite - cyclic index for write to txBuffer,
 932:.\Generated_Source\PSoC4/UART_1.c ****     *    incremented after each byte saved to buffer.
 933:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBufferRead - cyclic index for read from txBuffer,
 934:.\Generated_Source\PSoC4/UART_1.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 935:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
 936:.\Generated_Source\PSoC4/UART_1.c ****     *    initialized.
 937:.\Generated_Source\PSoC4/UART_1.c ****     *
 938:.\Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
 939:.\Generated_Source\PSoC4/UART_1.c ****     *  No.
 940:.\Generated_Source\PSoC4/UART_1.c ****     *
 941:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 942:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_WriteTxData(uint8 txDataByte) 
 943:.\Generated_Source\PSoC4/UART_1.c ****     {
 245              		.loc 1 943 0
 246              		.cfi_startproc
 247              	.LVL14:
 944:.\Generated_Source\PSoC4/UART_1.c ****         /* If not Initialized then skip this function*/
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccUFJMnK.s 			page 22


 945:.\Generated_Source\PSoC4/UART_1.c ****         if(UART_1_initVar != 0u)
 248              		.loc 1 945 0
 249 0000 034B     		ldr	r3, .L21
 250 0002 1B78     		ldrb	r3, [r3]
 251 0004 002B     		cmp	r3, #0
 252 0006 01D0     		beq	.L19
 946:.\Generated_Source\PSoC4/UART_1.c ****         {
 947:.\Generated_Source\PSoC4/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 948:.\Generated_Source\PSoC4/UART_1.c **** 
 949:.\Generated_Source\PSoC4/UART_1.c ****             /* Protect variables that could change on interrupt. */
 950:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_DisableTxInt();
 951:.\Generated_Source\PSoC4/UART_1.c **** 
 952:.\Generated_Source\PSoC4/UART_1.c ****             if( (UART_1_txBufferRead == UART_1_txBufferWrite) &&
 953:.\Generated_Source\PSoC4/UART_1.c ****                 ((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) == 0u) )
 954:.\Generated_Source\PSoC4/UART_1.c ****             {
 955:.\Generated_Source\PSoC4/UART_1.c ****                 /* Add directly to the FIFO. */
 956:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_TXDATA_REG = txDataByte;
 957:.\Generated_Source\PSoC4/UART_1.c ****             }
 958:.\Generated_Source\PSoC4/UART_1.c ****             else
 959:.\Generated_Source\PSoC4/UART_1.c ****             {
 960:.\Generated_Source\PSoC4/UART_1.c ****                 if(UART_1_txBufferWrite >= UART_1_TX_BUFFER_SIZE)
 961:.\Generated_Source\PSoC4/UART_1.c ****                 {
 962:.\Generated_Source\PSoC4/UART_1.c ****                     UART_1_txBufferWrite = 0u;
 963:.\Generated_Source\PSoC4/UART_1.c ****                 }
 964:.\Generated_Source\PSoC4/UART_1.c **** 
 965:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_txBuffer[UART_1_txBufferWrite] = txDataByte;
 966:.\Generated_Source\PSoC4/UART_1.c **** 
 967:.\Generated_Source\PSoC4/UART_1.c ****                 /* Add to the software buffer. */
 968:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_txBufferWrite++;
 969:.\Generated_Source\PSoC4/UART_1.c ****             }
 970:.\Generated_Source\PSoC4/UART_1.c **** 
 971:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_EnableTxInt();
 972:.\Generated_Source\PSoC4/UART_1.c **** 
 973:.\Generated_Source\PSoC4/UART_1.c ****         #else
 974:.\Generated_Source\PSoC4/UART_1.c **** 
 975:.\Generated_Source\PSoC4/UART_1.c ****             /* Add directly to the FIFO. */
 976:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_TXDATA_REG = txDataByte;
 253              		.loc 1 976 0
 254 0008 024B     		ldr	r3, .L21+4
 255 000a 1870     		strb	r0, [r3]
 256              	.L19:
 977:.\Generated_Source\PSoC4/UART_1.c **** 
 978:.\Generated_Source\PSoC4/UART_1.c ****         #endif /*(UART_1_TX_INTERRUPT_ENABLED) */
 979:.\Generated_Source\PSoC4/UART_1.c ****         }
 980:.\Generated_Source\PSoC4/UART_1.c ****     }
 257              		.loc 1 980 0
 258              		@ sp needed
 259 000c 7047     		bx	lr
 260              	.L22:
 261 000e C046     		.align	2
 262              	.L21:
 263 0010 00000000 		.word	.LANCHOR0
 264 0014 42000F40 		.word	1074724930
 265              		.cfi_endproc
 266              	.LFE9:
 267              		.size	UART_1_WriteTxData, .-UART_1_WriteTxData
 268              		.section	.text.UART_1_ReadTxStatus,"ax",%progbits
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccUFJMnK.s 			page 23


 269              		.align	2
 270              		.global	UART_1_ReadTxStatus
 271              		.code	16
 272              		.thumb_func
 273              		.type	UART_1_ReadTxStatus, %function
 274              	UART_1_ReadTxStatus:
 275              	.LFB10:
 981:.\Generated_Source\PSoC4/UART_1.c **** 
 982:.\Generated_Source\PSoC4/UART_1.c **** 
 983:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 984:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_ReadTxStatus
 985:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 986:.\Generated_Source\PSoC4/UART_1.c ****     *
 987:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
 988:.\Generated_Source\PSoC4/UART_1.c ****     *  Reads the status register for the TX portion of the UART.
 989:.\Generated_Source\PSoC4/UART_1.c ****     *
 990:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 991:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
 992:.\Generated_Source\PSoC4/UART_1.c ****     *
 993:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
 994:.\Generated_Source\PSoC4/UART_1.c ****     *  Contents of the status register
 995:.\Generated_Source\PSoC4/UART_1.c ****     *
 996:.\Generated_Source\PSoC4/UART_1.c ****     * Theory:
 997:.\Generated_Source\PSoC4/UART_1.c ****     *  This function reads the TX status register, which is cleared on read.
 998:.\Generated_Source\PSoC4/UART_1.c ****     *  It is up to the user to handle all bits in this return value accordingly,
 999:.\Generated_Source\PSoC4/UART_1.c ****     *  even if the bit was not enabled as an interrupt source the event happened
1000:.\Generated_Source\PSoC4/UART_1.c ****     *  and must be handled accordingly.
1001:.\Generated_Source\PSoC4/UART_1.c ****     *
1002:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
1003:.\Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_ReadTxStatus(void) 
1004:.\Generated_Source\PSoC4/UART_1.c ****     {
 276              		.loc 1 1004 0
 277              		.cfi_startproc
1005:.\Generated_Source\PSoC4/UART_1.c ****         return(UART_1_TXSTATUS_REG);
 278              		.loc 1 1005 0
 279 0000 014B     		ldr	r3, .L24
 280 0002 1878     		ldrb	r0, [r3]
 281 0004 C0B2     		uxtb	r0, r0
1006:.\Generated_Source\PSoC4/UART_1.c ****     }
 282              		.loc 1 1006 0
 283              		@ sp needed
 284 0006 7047     		bx	lr
 285              	.L25:
 286              		.align	2
 287              	.L24:
 288 0008 62000F40 		.word	1074724962
 289              		.cfi_endproc
 290              	.LFE10:
 291              		.size	UART_1_ReadTxStatus, .-UART_1_ReadTxStatus
 292              		.section	.text.UART_1_PutChar,"ax",%progbits
 293              		.align	2
 294              		.global	UART_1_PutChar
 295              		.code	16
 296              		.thumb_func
 297              		.type	UART_1_PutChar, %function
 298              	UART_1_PutChar:
 299              	.LFB11:
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccUFJMnK.s 			page 24


1007:.\Generated_Source\PSoC4/UART_1.c **** 
1008:.\Generated_Source\PSoC4/UART_1.c **** 
1009:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
1010:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_PutChar
1011:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
1012:.\Generated_Source\PSoC4/UART_1.c ****     *
1013:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
1014:.\Generated_Source\PSoC4/UART_1.c ****     *  Puts a byte of data into the transmit buffer to be sent when the bus is
1015:.\Generated_Source\PSoC4/UART_1.c ****     *  available. This is a blocking API that waits until the TX buffer has room to
1016:.\Generated_Source\PSoC4/UART_1.c ****     *  hold the data.
1017:.\Generated_Source\PSoC4/UART_1.c ****     *
1018:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
1019:.\Generated_Source\PSoC4/UART_1.c ****     *  txDataByte: Byte containing the data to transmit
1020:.\Generated_Source\PSoC4/UART_1.c ****     *
1021:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
1022:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
1023:.\Generated_Source\PSoC4/UART_1.c ****     *
1024:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
1025:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBuffer - RAM buffer pointer for save data for transmission
1026:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBufferWrite - cyclic index for write to txBuffer,
1027:.\Generated_Source\PSoC4/UART_1.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1028:.\Generated_Source\PSoC4/UART_1.c ****     *     saved to buffer.
1029:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBufferRead - cyclic index for read from txBuffer,
1030:.\Generated_Source\PSoC4/UART_1.c ****     *     checked to identify free space in txBuffer.
1031:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1032:.\Generated_Source\PSoC4/UART_1.c ****     *     initialized.
1033:.\Generated_Source\PSoC4/UART_1.c ****     *
1034:.\Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
1035:.\Generated_Source\PSoC4/UART_1.c ****     *  No.
1036:.\Generated_Source\PSoC4/UART_1.c ****     *
1037:.\Generated_Source\PSoC4/UART_1.c ****     * Theory:
1038:.\Generated_Source\PSoC4/UART_1.c ****     *  Allows the user to transmit any byte of data in a single transfer
1039:.\Generated_Source\PSoC4/UART_1.c ****     *
1040:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
1041:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_PutChar(uint8 txDataByte) 
1042:.\Generated_Source\PSoC4/UART_1.c ****     {
 300              		.loc 1 1042 0
 301              		.cfi_startproc
 302              	.LVL15:
 303              	.L27:
1043:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_TX_INTERRUPT_ENABLED)
1044:.\Generated_Source\PSoC4/UART_1.c ****         /* The temporary output pointer is used since it takes two instructions
1045:.\Generated_Source\PSoC4/UART_1.c ****         *  to increment with a wrap, and we can't risk doing that with the real
1046:.\Generated_Source\PSoC4/UART_1.c ****         *  pointer and getting an interrupt in between instructions.
1047:.\Generated_Source\PSoC4/UART_1.c ****         */
1048:.\Generated_Source\PSoC4/UART_1.c ****         uint8 locTxBufferWrite;
1049:.\Generated_Source\PSoC4/UART_1.c ****         uint8 locTxBufferRead;
1050:.\Generated_Source\PSoC4/UART_1.c **** 
1051:.\Generated_Source\PSoC4/UART_1.c ****         do
1052:.\Generated_Source\PSoC4/UART_1.c ****         { /* Block if software buffer is full, so we don't overwrite. */
1053:.\Generated_Source\PSoC4/UART_1.c **** 
1054:.\Generated_Source\PSoC4/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1055:.\Generated_Source\PSoC4/UART_1.c ****             /* Disable TX interrupt to protect variables from modification */
1056:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_DisableTxInt();
1057:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3) */
1058:.\Generated_Source\PSoC4/UART_1.c **** 
1059:.\Generated_Source\PSoC4/UART_1.c ****             locTxBufferWrite = UART_1_txBufferWrite;
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccUFJMnK.s 			page 25


1060:.\Generated_Source\PSoC4/UART_1.c ****             locTxBufferRead  = UART_1_txBufferRead;
1061:.\Generated_Source\PSoC4/UART_1.c **** 
1062:.\Generated_Source\PSoC4/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1063:.\Generated_Source\PSoC4/UART_1.c ****             /* Enable interrupt to continue transmission */
1064:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_EnableTxInt();
1065:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3) */
1066:.\Generated_Source\PSoC4/UART_1.c ****         }
1067:.\Generated_Source\PSoC4/UART_1.c ****         while( (locTxBufferWrite < locTxBufferRead) ? (locTxBufferWrite == (locTxBufferRead - 1u)) 
1068:.\Generated_Source\PSoC4/UART_1.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
1069:.\Generated_Source\PSoC4/UART_1.c ****                                 (uint8)(UART_1_TX_BUFFER_SIZE - 1u)) );
1070:.\Generated_Source\PSoC4/UART_1.c **** 
1071:.\Generated_Source\PSoC4/UART_1.c ****         if( (locTxBufferRead == locTxBufferWrite) &&
1072:.\Generated_Source\PSoC4/UART_1.c ****             ((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) == 0u) )
1073:.\Generated_Source\PSoC4/UART_1.c ****         {
1074:.\Generated_Source\PSoC4/UART_1.c ****             /* Add directly to the FIFO */
1075:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_TXDATA_REG = txDataByte;
1076:.\Generated_Source\PSoC4/UART_1.c ****         }
1077:.\Generated_Source\PSoC4/UART_1.c ****         else
1078:.\Generated_Source\PSoC4/UART_1.c ****         {
1079:.\Generated_Source\PSoC4/UART_1.c ****             if(locTxBufferWrite >= UART_1_TX_BUFFER_SIZE)
1080:.\Generated_Source\PSoC4/UART_1.c ****             {
1081:.\Generated_Source\PSoC4/UART_1.c ****                 locTxBufferWrite = 0u;
1082:.\Generated_Source\PSoC4/UART_1.c ****             }
1083:.\Generated_Source\PSoC4/UART_1.c ****             /* Add to the software buffer. */
1084:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_txBuffer[locTxBufferWrite] = txDataByte;
1085:.\Generated_Source\PSoC4/UART_1.c ****             locTxBufferWrite++;
1086:.\Generated_Source\PSoC4/UART_1.c **** 
1087:.\Generated_Source\PSoC4/UART_1.c ****             /* Finally, update the real output pointer */
1088:.\Generated_Source\PSoC4/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1089:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_DisableTxInt();
1090:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3) */
1091:.\Generated_Source\PSoC4/UART_1.c **** 
1092:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_txBufferWrite = locTxBufferWrite;
1093:.\Generated_Source\PSoC4/UART_1.c **** 
1094:.\Generated_Source\PSoC4/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1095:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_EnableTxInt();
1096:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3) */
1097:.\Generated_Source\PSoC4/UART_1.c **** 
1098:.\Generated_Source\PSoC4/UART_1.c ****             if(0u != (UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_EMPTY))
1099:.\Generated_Source\PSoC4/UART_1.c ****             {
1100:.\Generated_Source\PSoC4/UART_1.c ****                 /* Trigger TX interrupt to send software buffer */
1101:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_SetPendingTxInt();
1102:.\Generated_Source\PSoC4/UART_1.c ****             }
1103:.\Generated_Source\PSoC4/UART_1.c ****         }
1104:.\Generated_Source\PSoC4/UART_1.c **** 
1105:.\Generated_Source\PSoC4/UART_1.c ****     #else
1106:.\Generated_Source\PSoC4/UART_1.c **** 
1107:.\Generated_Source\PSoC4/UART_1.c ****         while((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) != 0u)
 304              		.loc 1 1107 0 discriminator 1
 305 0000 034B     		ldr	r3, .L28
 306 0002 1B78     		ldrb	r3, [r3]
 307 0004 5B07     		lsl	r3, r3, #29
 308 0006 FBD4     		bmi	.L27
1108:.\Generated_Source\PSoC4/UART_1.c ****         {
1109:.\Generated_Source\PSoC4/UART_1.c ****             /* Wait for room in the FIFO */
1110:.\Generated_Source\PSoC4/UART_1.c ****         }
1111:.\Generated_Source\PSoC4/UART_1.c **** 
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccUFJMnK.s 			page 26


1112:.\Generated_Source\PSoC4/UART_1.c ****         /* Add directly to the FIFO */
1113:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_TXDATA_REG = txDataByte;
 309              		.loc 1 1113 0
 310 0008 024B     		ldr	r3, .L28+4
 311 000a 1870     		strb	r0, [r3]
1114:.\Generated_Source\PSoC4/UART_1.c **** 
1115:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* UART_1_TX_INTERRUPT_ENABLED */
1116:.\Generated_Source\PSoC4/UART_1.c ****     }
 312              		.loc 1 1116 0
 313              		@ sp needed
 314 000c 7047     		bx	lr
 315              	.L29:
 316 000e C046     		.align	2
 317              	.L28:
 318 0010 62000F40 		.word	1074724962
 319 0014 42000F40 		.word	1074724930
 320              		.cfi_endproc
 321              	.LFE11:
 322              		.size	UART_1_PutChar, .-UART_1_PutChar
 323              		.section	.text.UART_1_PutString,"ax",%progbits
 324              		.align	2
 325              		.global	UART_1_PutString
 326              		.code	16
 327              		.thumb_func
 328              		.type	UART_1_PutString, %function
 329              	UART_1_PutString:
 330              	.LFB12:
1117:.\Generated_Source\PSoC4/UART_1.c **** 
1118:.\Generated_Source\PSoC4/UART_1.c **** 
1119:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
1120:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_PutString
1121:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
1122:.\Generated_Source\PSoC4/UART_1.c ****     *
1123:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
1124:.\Generated_Source\PSoC4/UART_1.c ****     *  Sends a NULL terminated string to the TX buffer for transmission.
1125:.\Generated_Source\PSoC4/UART_1.c ****     *
1126:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
1127:.\Generated_Source\PSoC4/UART_1.c ****     *  string[]: Pointer to the null terminated string array residing in RAM or ROM
1128:.\Generated_Source\PSoC4/UART_1.c ****     *
1129:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
1130:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
1131:.\Generated_Source\PSoC4/UART_1.c ****     *
1132:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
1133:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1134:.\Generated_Source\PSoC4/UART_1.c ****     *     initialized.
1135:.\Generated_Source\PSoC4/UART_1.c ****     *
1136:.\Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
1137:.\Generated_Source\PSoC4/UART_1.c ****     *  No.
1138:.\Generated_Source\PSoC4/UART_1.c ****     *
1139:.\Generated_Source\PSoC4/UART_1.c ****     * Theory:
1140:.\Generated_Source\PSoC4/UART_1.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1141:.\Generated_Source\PSoC4/UART_1.c ****     *  function blocks until the last character of the string is loaded into the
1142:.\Generated_Source\PSoC4/UART_1.c ****     *  TX buffer.
1143:.\Generated_Source\PSoC4/UART_1.c ****     *
1144:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
1145:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_PutString(const char8 string[]) 
1146:.\Generated_Source\PSoC4/UART_1.c ****     {
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccUFJMnK.s 			page 27


 331              		.loc 1 1146 0
 332              		.cfi_startproc
 333              	.LVL16:
 334 0000 38B5     		push	{r3, r4, r5, lr}
 335              		.cfi_def_cfa_offset 16
 336              		.cfi_offset 3, -16
 337              		.cfi_offset 4, -12
 338              		.cfi_offset 5, -8
 339              		.cfi_offset 14, -4
 340              	.LVL17:
1147:.\Generated_Source\PSoC4/UART_1.c ****         uint16 bufIndex = 0u;
1148:.\Generated_Source\PSoC4/UART_1.c **** 
1149:.\Generated_Source\PSoC4/UART_1.c ****         /* If not Initialized then skip this function */
1150:.\Generated_Source\PSoC4/UART_1.c ****         if(UART_1_initVar != 0u)
 341              		.loc 1 1150 0
 342 0002 084B     		ldr	r3, .L35
 343 0004 1B78     		ldrb	r3, [r3]
 344 0006 002B     		cmp	r3, #0
 345 0008 05D1     		bne	.L34
 346 000a 09E0     		b	.L30
 347              	.LVL18:
 348              	.L33:
1151:.\Generated_Source\PSoC4/UART_1.c ****         {
1152:.\Generated_Source\PSoC4/UART_1.c ****             /* This is a blocking function, it will not exit until all data is sent */
1153:.\Generated_Source\PSoC4/UART_1.c ****             while(string[bufIndex] != (char8) 0)
1154:.\Generated_Source\PSoC4/UART_1.c ****             {
1155:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_PutChar((uint8)string[bufIndex]);
 349              		.loc 1 1155 0
 350 000c FFF7FEFF 		bl	UART_1_PutChar
 351              	.LVL19:
1156:.\Generated_Source\PSoC4/UART_1.c ****                 bufIndex++;
 352              		.loc 1 1156 0
 353 0010 0134     		add	r4, r4, #1
 354              	.LVL20:
 355 0012 A4B2     		uxth	r4, r4
 356              	.LVL21:
 357 0014 01E0     		b	.L31
 358              	.LVL22:
 359              	.L34:
 360 0016 051C     		mov	r5, r0
 361 0018 0024     		mov	r4, #0
 362              	.LVL23:
 363              	.L31:
1153:.\Generated_Source\PSoC4/UART_1.c ****             {
 364              		.loc 1 1153 0
 365 001a 285D     		ldrb	r0, [r5, r4]
 366 001c 0028     		cmp	r0, #0
 367 001e F5D1     		bne	.L33
 368              	.LVL24:
 369              	.L30:
1157:.\Generated_Source\PSoC4/UART_1.c ****             }
1158:.\Generated_Source\PSoC4/UART_1.c ****         }
1159:.\Generated_Source\PSoC4/UART_1.c ****     }
 370              		.loc 1 1159 0
 371              		@ sp needed
 372 0020 38BD     		pop	{r3, r4, r5, pc}
 373              	.L36:
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccUFJMnK.s 			page 28


 374 0022 C046     		.align	2
 375              	.L35:
 376 0024 00000000 		.word	.LANCHOR0
 377              		.cfi_endproc
 378              	.LFE12:
 379              		.size	UART_1_PutString, .-UART_1_PutString
 380              		.section	.text.UART_1_PutArray,"ax",%progbits
 381              		.align	2
 382              		.global	UART_1_PutArray
 383              		.code	16
 384              		.thumb_func
 385              		.type	UART_1_PutArray, %function
 386              	UART_1_PutArray:
 387              	.LFB13:
1160:.\Generated_Source\PSoC4/UART_1.c **** 
1161:.\Generated_Source\PSoC4/UART_1.c **** 
1162:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
1163:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_PutArray
1164:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
1165:.\Generated_Source\PSoC4/UART_1.c ****     *
1166:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
1167:.\Generated_Source\PSoC4/UART_1.c ****     *  Places N bytes of data from a memory array into the TX buffer for
1168:.\Generated_Source\PSoC4/UART_1.c ****     *  transmission.
1169:.\Generated_Source\PSoC4/UART_1.c ****     *
1170:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
1171:.\Generated_Source\PSoC4/UART_1.c ****     *  string[]: Address of the memory array residing in RAM or ROM.
1172:.\Generated_Source\PSoC4/UART_1.c ****     *  byteCount: Number of bytes to be transmitted. The type depends on TX Buffer
1173:.\Generated_Source\PSoC4/UART_1.c ****     *             Size parameter.
1174:.\Generated_Source\PSoC4/UART_1.c ****     *
1175:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
1176:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
1177:.\Generated_Source\PSoC4/UART_1.c ****     *
1178:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
1179:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1180:.\Generated_Source\PSoC4/UART_1.c ****     *     initialized.
1181:.\Generated_Source\PSoC4/UART_1.c ****     *
1182:.\Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
1183:.\Generated_Source\PSoC4/UART_1.c ****     *  No.
1184:.\Generated_Source\PSoC4/UART_1.c ****     *
1185:.\Generated_Source\PSoC4/UART_1.c ****     * Theory:
1186:.\Generated_Source\PSoC4/UART_1.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1187:.\Generated_Source\PSoC4/UART_1.c ****     *  function blocks until the last character of the string is loaded into the
1188:.\Generated_Source\PSoC4/UART_1.c ****     *  TX buffer.
1189:.\Generated_Source\PSoC4/UART_1.c ****     *
1190:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
1191:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_PutArray(const uint8 string[], uint8 byteCount)
1192:.\Generated_Source\PSoC4/UART_1.c ****                                                                     
1193:.\Generated_Source\PSoC4/UART_1.c ****     {
 388              		.loc 1 1193 0
 389              		.cfi_startproc
 390              	.LVL25:
 391 0000 70B5     		push	{r4, r5, r6, lr}
 392              		.cfi_def_cfa_offset 16
 393              		.cfi_offset 4, -16
 394              		.cfi_offset 5, -12
 395              		.cfi_offset 6, -8
 396              		.cfi_offset 14, -4
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccUFJMnK.s 			page 29


 397              	.LVL26:
1194:.\Generated_Source\PSoC4/UART_1.c ****         uint8 bufIndex = 0u;
1195:.\Generated_Source\PSoC4/UART_1.c **** 
1196:.\Generated_Source\PSoC4/UART_1.c ****         /* If not Initialized then skip this function */
1197:.\Generated_Source\PSoC4/UART_1.c ****         if(UART_1_initVar != 0u)
 398              		.loc 1 1197 0
 399 0002 084B     		ldr	r3, .L42
 400 0004 1B78     		ldrb	r3, [r3]
 401 0006 002B     		cmp	r3, #0
 402 0008 06D1     		bne	.L41
 403 000a 0AE0     		b	.L37
 404              	.LVL27:
 405              	.L40:
1198:.\Generated_Source\PSoC4/UART_1.c ****         {
1199:.\Generated_Source\PSoC4/UART_1.c ****             while(bufIndex < byteCount)
1200:.\Generated_Source\PSoC4/UART_1.c ****             {
1201:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_PutChar(string[bufIndex]);
 406              		.loc 1 1201 0
 407 000c 305D     		ldrb	r0, [r6, r4]
 408 000e FFF7FEFF 		bl	UART_1_PutChar
 409              	.LVL28:
1202:.\Generated_Source\PSoC4/UART_1.c ****                 bufIndex++;
 410              		.loc 1 1202 0
 411 0012 0134     		add	r4, r4, #1
 412              	.LVL29:
 413 0014 E4B2     		uxtb	r4, r4
 414              	.LVL30:
 415 0016 02E0     		b	.L38
 416              	.LVL31:
 417              	.L41:
 418 0018 0D1C     		mov	r5, r1
 419 001a 061C     		mov	r6, r0
 420 001c 0024     		mov	r4, #0
 421              	.LVL32:
 422              	.L38:
1199:.\Generated_Source\PSoC4/UART_1.c ****             {
 423              		.loc 1 1199 0
 424 001e AC42     		cmp	r4, r5
 425 0020 F4D3     		bcc	.L40
 426              	.LVL33:
 427              	.L37:
1203:.\Generated_Source\PSoC4/UART_1.c ****             }
1204:.\Generated_Source\PSoC4/UART_1.c ****         }
1205:.\Generated_Source\PSoC4/UART_1.c ****     }
 428              		.loc 1 1205 0
 429              		@ sp needed
 430 0022 70BD     		pop	{r4, r5, r6, pc}
 431              	.L43:
 432              		.align	2
 433              	.L42:
 434 0024 00000000 		.word	.LANCHOR0
 435              		.cfi_endproc
 436              	.LFE13:
 437              		.size	UART_1_PutArray, .-UART_1_PutArray
 438              		.section	.text.UART_1_PutCRLF,"ax",%progbits
 439              		.align	2
 440              		.global	UART_1_PutCRLF
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccUFJMnK.s 			page 30


 441              		.code	16
 442              		.thumb_func
 443              		.type	UART_1_PutCRLF, %function
 444              	UART_1_PutCRLF:
 445              	.LFB14:
1206:.\Generated_Source\PSoC4/UART_1.c **** 
1207:.\Generated_Source\PSoC4/UART_1.c **** 
1208:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
1209:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_PutCRLF
1210:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
1211:.\Generated_Source\PSoC4/UART_1.c ****     *
1212:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
1213:.\Generated_Source\PSoC4/UART_1.c ****     *  Writes a byte of data followed by a carriage return (0x0D) and line feed
1214:.\Generated_Source\PSoC4/UART_1.c ****     *  (0x0A) to the transmit buffer.
1215:.\Generated_Source\PSoC4/UART_1.c ****     *
1216:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
1217:.\Generated_Source\PSoC4/UART_1.c ****     *  txDataByte: Data byte to transmit before the carriage return and line feed.
1218:.\Generated_Source\PSoC4/UART_1.c ****     *
1219:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
1220:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
1221:.\Generated_Source\PSoC4/UART_1.c ****     *
1222:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
1223:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1224:.\Generated_Source\PSoC4/UART_1.c ****     *     initialized.
1225:.\Generated_Source\PSoC4/UART_1.c ****     *
1226:.\Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
1227:.\Generated_Source\PSoC4/UART_1.c ****     *  No.
1228:.\Generated_Source\PSoC4/UART_1.c ****     *
1229:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
1230:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_PutCRLF(uint8 txDataByte) 
1231:.\Generated_Source\PSoC4/UART_1.c ****     {
 446              		.loc 1 1231 0
 447              		.cfi_startproc
 448              	.LVL34:
 449 0000 08B5     		push	{r3, lr}
 450              		.cfi_def_cfa_offset 8
 451              		.cfi_offset 3, -8
 452              		.cfi_offset 14, -4
1232:.\Generated_Source\PSoC4/UART_1.c ****         /* If not Initialized then skip this function */
1233:.\Generated_Source\PSoC4/UART_1.c ****         if(UART_1_initVar != 0u)
 453              		.loc 1 1233 0
 454 0002 064B     		ldr	r3, .L46
 455 0004 1B78     		ldrb	r3, [r3]
 456 0006 002B     		cmp	r3, #0
 457 0008 07D0     		beq	.L44
1234:.\Generated_Source\PSoC4/UART_1.c ****         {
1235:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_PutChar(txDataByte);
 458              		.loc 1 1235 0
 459 000a FFF7FEFF 		bl	UART_1_PutChar
 460              	.LVL35:
1236:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_PutChar(0x0Du);
 461              		.loc 1 1236 0
 462 000e 0D20     		mov	r0, #13
 463 0010 FFF7FEFF 		bl	UART_1_PutChar
 464              	.LVL36:
1237:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_PutChar(0x0Au);
 465              		.loc 1 1237 0
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccUFJMnK.s 			page 31


 466 0014 0A20     		mov	r0, #10
 467 0016 FFF7FEFF 		bl	UART_1_PutChar
 468              	.LVL37:
 469              	.L44:
1238:.\Generated_Source\PSoC4/UART_1.c ****         }
1239:.\Generated_Source\PSoC4/UART_1.c ****     }
 470              		.loc 1 1239 0
 471              		@ sp needed
 472 001a 08BD     		pop	{r3, pc}
 473              	.L47:
 474              		.align	2
 475              	.L46:
 476 001c 00000000 		.word	.LANCHOR0
 477              		.cfi_endproc
 478              	.LFE14:
 479              		.size	UART_1_PutCRLF, .-UART_1_PutCRLF
 480              		.section	.text.UART_1_GetTxBufferSize,"ax",%progbits
 481              		.align	2
 482              		.global	UART_1_GetTxBufferSize
 483              		.code	16
 484              		.thumb_func
 485              		.type	UART_1_GetTxBufferSize, %function
 486              	UART_1_GetTxBufferSize:
 487              	.LFB15:
1240:.\Generated_Source\PSoC4/UART_1.c **** 
1241:.\Generated_Source\PSoC4/UART_1.c **** 
1242:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
1243:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_GetTxBufferSize
1244:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
1245:.\Generated_Source\PSoC4/UART_1.c ****     *
1246:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
1247:.\Generated_Source\PSoC4/UART_1.c ****     *  Returns the number of bytes in the TX buffer which are waiting to be 
1248:.\Generated_Source\PSoC4/UART_1.c ****     *  transmitted.
1249:.\Generated_Source\PSoC4/UART_1.c ****     *  * TX software buffer is disabled (TX Buffer Size parameter is equal to 4): 
1250:.\Generated_Source\PSoC4/UART_1.c ****     *    returns 0 for empty TX FIFO, 1 for not full TX FIFO or 4 for full TX FIFO.
1251:.\Generated_Source\PSoC4/UART_1.c ****     *  * TX software buffer is enabled: returns the number of bytes in the TX 
1252:.\Generated_Source\PSoC4/UART_1.c ****     *    software buffer which are waiting to be transmitted. Bytes available in the
1253:.\Generated_Source\PSoC4/UART_1.c ****     *    TX FIFO do not count.
1254:.\Generated_Source\PSoC4/UART_1.c ****     *
1255:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
1256:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
1257:.\Generated_Source\PSoC4/UART_1.c ****     *
1258:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
1259:.\Generated_Source\PSoC4/UART_1.c ****     *  Number of bytes used in the TX buffer. Return value type depends on the TX 
1260:.\Generated_Source\PSoC4/UART_1.c ****     *  Buffer Size parameter.
1261:.\Generated_Source\PSoC4/UART_1.c ****     *
1262:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
1263:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBufferWrite - used to calculate left space.
1264:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBufferRead - used to calculate left space.
1265:.\Generated_Source\PSoC4/UART_1.c ****     *
1266:.\Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
1267:.\Generated_Source\PSoC4/UART_1.c ****     *  No.
1268:.\Generated_Source\PSoC4/UART_1.c ****     *
1269:.\Generated_Source\PSoC4/UART_1.c ****     * Theory:
1270:.\Generated_Source\PSoC4/UART_1.c ****     *  Allows the user to find out how full the TX Buffer is.
1271:.\Generated_Source\PSoC4/UART_1.c ****     *
1272:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccUFJMnK.s 			page 32


1273:.\Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_GetTxBufferSize(void)
1274:.\Generated_Source\PSoC4/UART_1.c ****                                                             
1275:.\Generated_Source\PSoC4/UART_1.c ****     {
 488              		.loc 1 1275 0
 489              		.cfi_startproc
1276:.\Generated_Source\PSoC4/UART_1.c ****         uint8 size;
1277:.\Generated_Source\PSoC4/UART_1.c **** 
1278:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_TX_INTERRUPT_ENABLED)
1279:.\Generated_Source\PSoC4/UART_1.c **** 
1280:.\Generated_Source\PSoC4/UART_1.c ****         /* Protect variables that could change on interrupt. */
1281:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_DisableTxInt();
1282:.\Generated_Source\PSoC4/UART_1.c **** 
1283:.\Generated_Source\PSoC4/UART_1.c ****         if(UART_1_txBufferRead == UART_1_txBufferWrite)
1284:.\Generated_Source\PSoC4/UART_1.c ****         {
1285:.\Generated_Source\PSoC4/UART_1.c ****             size = 0u;
1286:.\Generated_Source\PSoC4/UART_1.c ****         }
1287:.\Generated_Source\PSoC4/UART_1.c ****         else if(UART_1_txBufferRead < UART_1_txBufferWrite)
1288:.\Generated_Source\PSoC4/UART_1.c ****         {
1289:.\Generated_Source\PSoC4/UART_1.c ****             size = (UART_1_txBufferWrite - UART_1_txBufferRead);
1290:.\Generated_Source\PSoC4/UART_1.c ****         }
1291:.\Generated_Source\PSoC4/UART_1.c ****         else
1292:.\Generated_Source\PSoC4/UART_1.c ****         {
1293:.\Generated_Source\PSoC4/UART_1.c ****             size = (UART_1_TX_BUFFER_SIZE - UART_1_txBufferRead) +
1294:.\Generated_Source\PSoC4/UART_1.c ****                     UART_1_txBufferWrite;
1295:.\Generated_Source\PSoC4/UART_1.c ****         }
1296:.\Generated_Source\PSoC4/UART_1.c **** 
1297:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_EnableTxInt();
1298:.\Generated_Source\PSoC4/UART_1.c **** 
1299:.\Generated_Source\PSoC4/UART_1.c ****     #else
1300:.\Generated_Source\PSoC4/UART_1.c **** 
1301:.\Generated_Source\PSoC4/UART_1.c ****         size = UART_1_TXSTATUS_REG;
 490              		.loc 1 1301 0
 491 0000 064B     		ldr	r3, .L52
 492 0002 1B78     		ldrb	r3, [r3]
 493 0004 DBB2     		uxtb	r3, r3
 494              	.LVL38:
1302:.\Generated_Source\PSoC4/UART_1.c **** 
1303:.\Generated_Source\PSoC4/UART_1.c ****         /* Is the fifo is full. */
1304:.\Generated_Source\PSoC4/UART_1.c ****         if((size & UART_1_TX_STS_FIFO_FULL) != 0u)
 495              		.loc 1 1304 0
 496 0006 5A07     		lsl	r2, r3, #29
 497 0008 03D4     		bmi	.L50
1305:.\Generated_Source\PSoC4/UART_1.c ****         {
1306:.\Generated_Source\PSoC4/UART_1.c ****             size = UART_1_FIFO_LENGTH;
1307:.\Generated_Source\PSoC4/UART_1.c ****         }
1308:.\Generated_Source\PSoC4/UART_1.c ****         else if((size & UART_1_TX_STS_FIFO_EMPTY) != 0u)
 498              		.loc 1 1308 0
 499 000a 9B07     		lsl	r3, r3, #30
 500 000c 03D5     		bpl	.L51
 501              	.LVL39:
1309:.\Generated_Source\PSoC4/UART_1.c ****         {
1310:.\Generated_Source\PSoC4/UART_1.c ****             size = 0u;
 502              		.loc 1 1310 0
 503 000e 0020     		mov	r0, #0
 504 0010 02E0     		b	.L49
 505              	.LVL40:
 506              	.L50:
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccUFJMnK.s 			page 33


1306:.\Generated_Source\PSoC4/UART_1.c ****         }
 507              		.loc 1 1306 0
 508 0012 0420     		mov	r0, #4
 509 0014 00E0     		b	.L49
 510              	.LVL41:
 511              	.L51:
1311:.\Generated_Source\PSoC4/UART_1.c ****         }
1312:.\Generated_Source\PSoC4/UART_1.c ****         else
1313:.\Generated_Source\PSoC4/UART_1.c ****         {
1314:.\Generated_Source\PSoC4/UART_1.c ****             /* We only know there is data in the fifo. */
1315:.\Generated_Source\PSoC4/UART_1.c ****             size = 1u;
 512              		.loc 1 1315 0
 513 0016 0120     		mov	r0, #1
 514              	.L49:
 515              	.LVL42:
1316:.\Generated_Source\PSoC4/UART_1.c ****         }
1317:.\Generated_Source\PSoC4/UART_1.c **** 
1318:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
1319:.\Generated_Source\PSoC4/UART_1.c **** 
1320:.\Generated_Source\PSoC4/UART_1.c ****     return(size);
1321:.\Generated_Source\PSoC4/UART_1.c ****     }
 516              		.loc 1 1321 0
 517              		@ sp needed
 518 0018 7047     		bx	lr
 519              	.L53:
 520 001a C046     		.align	2
 521              	.L52:
 522 001c 62000F40 		.word	1074724962
 523              		.cfi_endproc
 524              	.LFE15:
 525              		.size	UART_1_GetTxBufferSize, .-UART_1_GetTxBufferSize
 526              		.section	.text.UART_1_ClearTxBuffer,"ax",%progbits
 527              		.align	2
 528              		.global	UART_1_ClearTxBuffer
 529              		.code	16
 530              		.thumb_func
 531              		.type	UART_1_ClearTxBuffer, %function
 532              	UART_1_ClearTxBuffer:
 533              	.LFB16:
1322:.\Generated_Source\PSoC4/UART_1.c **** 
1323:.\Generated_Source\PSoC4/UART_1.c **** 
1324:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
1325:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_ClearTxBuffer
1326:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
1327:.\Generated_Source\PSoC4/UART_1.c ****     *
1328:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
1329:.\Generated_Source\PSoC4/UART_1.c ****     *  Clears all data from the TX buffer and hardware TX FIFO.
1330:.\Generated_Source\PSoC4/UART_1.c ****     *
1331:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
1332:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
1333:.\Generated_Source\PSoC4/UART_1.c ****     *
1334:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
1335:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
1336:.\Generated_Source\PSoC4/UART_1.c ****     *
1337:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
1338:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBufferWrite - cleared to zero.
1339:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBufferRead - cleared to zero.
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccUFJMnK.s 			page 34


1340:.\Generated_Source\PSoC4/UART_1.c ****     *
1341:.\Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
1342:.\Generated_Source\PSoC4/UART_1.c ****     *  No.
1343:.\Generated_Source\PSoC4/UART_1.c ****     *
1344:.\Generated_Source\PSoC4/UART_1.c ****     * Theory:
1345:.\Generated_Source\PSoC4/UART_1.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1346:.\Generated_Source\PSoC4/UART_1.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1347:.\Generated_Source\PSoC4/UART_1.c ****     *  remained in the RAM.
1348:.\Generated_Source\PSoC4/UART_1.c ****     *
1349:.\Generated_Source\PSoC4/UART_1.c ****     * Side Effects:
1350:.\Generated_Source\PSoC4/UART_1.c ****     *  Data waiting in the transmit buffer is not sent; a byte that is currently
1351:.\Generated_Source\PSoC4/UART_1.c ****     *  transmitting finishes transmitting.
1352:.\Generated_Source\PSoC4/UART_1.c ****     *
1353:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
1354:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_ClearTxBuffer(void) 
1355:.\Generated_Source\PSoC4/UART_1.c ****     {
 534              		.loc 1 1355 0
 535              		.cfi_startproc
 536 0000 08B5     		push	{r3, lr}
 537              		.cfi_def_cfa_offset 8
 538              		.cfi_offset 3, -8
 539              		.cfi_offset 14, -4
1356:.\Generated_Source\PSoC4/UART_1.c ****         uint8 enableInterrupts;
1357:.\Generated_Source\PSoC4/UART_1.c **** 
1358:.\Generated_Source\PSoC4/UART_1.c ****         enableInterrupts = CyEnterCriticalSection();
 540              		.loc 1 1358 0
 541 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 542              	.LVL43:
1359:.\Generated_Source\PSoC4/UART_1.c ****         /* Clear the HW FIFO */
1360:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_TXDATA_AUX_CTL_REG |= (uint8)  UART_1_TX_FIFO_CLR;
 543              		.loc 1 1360 0
 544 0006 064B     		ldr	r3, .L55
 545 0008 1978     		ldrb	r1, [r3]
 546 000a 0122     		mov	r2, #1
 547 000c 0A43     		orr	r2, r1
 548 000e 1A70     		strb	r2, [r3]
1361:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_TXDATA_AUX_CTL_REG &= (uint8) ~UART_1_TX_FIFO_CLR;
 549              		.loc 1 1361 0
 550 0010 1A78     		ldrb	r2, [r3]
 551 0012 0121     		mov	r1, #1
 552 0014 8A43     		bic	r2, r1
 553 0016 1A70     		strb	r2, [r3]
1362:.\Generated_Source\PSoC4/UART_1.c ****         CyExitCriticalSection(enableInterrupts);
 554              		.loc 1 1362 0
 555 0018 FFF7FEFF 		bl	CyExitCriticalSection
 556              	.LVL44:
1363:.\Generated_Source\PSoC4/UART_1.c **** 
1364:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_TX_INTERRUPT_ENABLED)
1365:.\Generated_Source\PSoC4/UART_1.c **** 
1366:.\Generated_Source\PSoC4/UART_1.c ****         /* Protect variables that could change on interrupt. */
1367:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_DisableTxInt();
1368:.\Generated_Source\PSoC4/UART_1.c **** 
1369:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_txBufferRead = 0u;
1370:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_txBufferWrite = 0u;
1371:.\Generated_Source\PSoC4/UART_1.c **** 
1372:.\Generated_Source\PSoC4/UART_1.c ****         /* Enable Tx interrupt. */
1373:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_EnableTxInt();
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccUFJMnK.s 			page 35


1374:.\Generated_Source\PSoC4/UART_1.c **** 
1375:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
1376:.\Generated_Source\PSoC4/UART_1.c ****     }
 557              		.loc 1 1376 0
 558              		@ sp needed
 559 001c 08BD     		pop	{r3, pc}
 560              	.L56:
 561 001e C046     		.align	2
 562              	.L55:
 563 0020 92000F40 		.word	1074725010
 564              		.cfi_endproc
 565              	.LFE16:
 566              		.size	UART_1_ClearTxBuffer, .-UART_1_ClearTxBuffer
 567              		.section	.text.UART_1_SendBreak,"ax",%progbits
 568              		.align	2
 569              		.global	UART_1_SendBreak
 570              		.code	16
 571              		.thumb_func
 572              		.type	UART_1_SendBreak, %function
 573              	UART_1_SendBreak:
 574              	.LFB17:
1377:.\Generated_Source\PSoC4/UART_1.c **** 
1378:.\Generated_Source\PSoC4/UART_1.c **** 
1379:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
1380:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_SendBreak
1381:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
1382:.\Generated_Source\PSoC4/UART_1.c ****     *
1383:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
1384:.\Generated_Source\PSoC4/UART_1.c ****     *  Transmits a break signal on the bus.
1385:.\Generated_Source\PSoC4/UART_1.c ****     *
1386:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
1387:.\Generated_Source\PSoC4/UART_1.c ****     *  uint8 retMode:  Send Break return mode. See the following table for options.
1388:.\Generated_Source\PSoC4/UART_1.c ****     *   UART_1_SEND_BREAK - Initialize registers for break, send the Break
1389:.\Generated_Source\PSoC4/UART_1.c ****     *       signal and return immediately.
1390:.\Generated_Source\PSoC4/UART_1.c ****     *   UART_1_WAIT_FOR_COMPLETE_REINIT - Wait until break transmission is
1391:.\Generated_Source\PSoC4/UART_1.c ****     *       complete, reinitialize registers to normal transmission mode then return
1392:.\Generated_Source\PSoC4/UART_1.c ****     *   UART_1_REINIT - Reinitialize registers to normal transmission mode
1393:.\Generated_Source\PSoC4/UART_1.c ****     *       then return.
1394:.\Generated_Source\PSoC4/UART_1.c ****     *   UART_1_SEND_WAIT_REINIT - Performs both options: 
1395:.\Generated_Source\PSoC4/UART_1.c ****     *      UART_1_SEND_BREAK and UART_1_WAIT_FOR_COMPLETE_REINIT.
1396:.\Generated_Source\PSoC4/UART_1.c ****     *      This option is recommended for most cases.
1397:.\Generated_Source\PSoC4/UART_1.c ****     *
1398:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
1399:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
1400:.\Generated_Source\PSoC4/UART_1.c ****     *
1401:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
1402:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1403:.\Generated_Source\PSoC4/UART_1.c ****     *     initialized.
1404:.\Generated_Source\PSoC4/UART_1.c ****     *  txPeriod - static variable, used for keeping TX period configuration.
1405:.\Generated_Source\PSoC4/UART_1.c ****     *
1406:.\Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
1407:.\Generated_Source\PSoC4/UART_1.c ****     *  No.
1408:.\Generated_Source\PSoC4/UART_1.c ****     *
1409:.\Generated_Source\PSoC4/UART_1.c ****     * Theory:
1410:.\Generated_Source\PSoC4/UART_1.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1411:.\Generated_Source\PSoC4/UART_1.c ****     *  important to return the registers configuration to normal for continue 8-bit
1412:.\Generated_Source\PSoC4/UART_1.c ****     *  operation.
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccUFJMnK.s 			page 36


1413:.\Generated_Source\PSoC4/UART_1.c ****     *  There are 3 variants for this API usage:
1414:.\Generated_Source\PSoC4/UART_1.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1415:.\Generated_Source\PSoC4/UART_1.c ****     *     configuration returning. Function will block CPU until transmission
1416:.\Generated_Source\PSoC4/UART_1.c ****     *     complete.
1417:.\Generated_Source\PSoC4/UART_1.c ****     *  2) User may want to use blocking time if UART configured to the low speed
1418:.\Generated_Source\PSoC4/UART_1.c ****     *     operation
1419:.\Generated_Source\PSoC4/UART_1.c ****     *     Example for this case:
1420:.\Generated_Source\PSoC4/UART_1.c ****     *     SendBreak(0);     - initialize Break signal transmission
1421:.\Generated_Source\PSoC4/UART_1.c ****     *         Add your code here to use CPU time
1422:.\Generated_Source\PSoC4/UART_1.c ****     *     SendBreak(1);     - complete Break operation
1423:.\Generated_Source\PSoC4/UART_1.c ****     *  3) Same to 2) but user may want to initialize and use the interrupt to
1424:.\Generated_Source\PSoC4/UART_1.c ****     *     complete break operation.
1425:.\Generated_Source\PSoC4/UART_1.c ****     *     Example for this case:
1426:.\Generated_Source\PSoC4/UART_1.c ****     *     Initialize TX interrupt with "TX - On TX Complete" parameter
1427:.\Generated_Source\PSoC4/UART_1.c ****     *     SendBreak(0);     - initialize Break signal transmission
1428:.\Generated_Source\PSoC4/UART_1.c ****     *         Add your code here to use CPU time
1429:.\Generated_Source\PSoC4/UART_1.c ****     *     When interrupt appear with UART_1_TX_STS_COMPLETE status:
1430:.\Generated_Source\PSoC4/UART_1.c ****     *     SendBreak(2);     - complete Break operation
1431:.\Generated_Source\PSoC4/UART_1.c ****     *
1432:.\Generated_Source\PSoC4/UART_1.c ****     * Side Effects:
1433:.\Generated_Source\PSoC4/UART_1.c ****     *  The UART_1_SendBreak() function initializes registers to send a
1434:.\Generated_Source\PSoC4/UART_1.c ****     *  break signal.
1435:.\Generated_Source\PSoC4/UART_1.c ****     *  Break signal length depends on the break signal bits configuration.
1436:.\Generated_Source\PSoC4/UART_1.c ****     *  The register configuration should be reinitialized before normal 8-bit
1437:.\Generated_Source\PSoC4/UART_1.c ****     *  communication can continue.
1438:.\Generated_Source\PSoC4/UART_1.c ****     *
1439:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
1440:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_SendBreak(uint8 retMode) 
1441:.\Generated_Source\PSoC4/UART_1.c ****     {
 575              		.loc 1 1441 0
 576              		.cfi_startproc
 577              	.LVL45:
1442:.\Generated_Source\PSoC4/UART_1.c **** 
1443:.\Generated_Source\PSoC4/UART_1.c ****         /* If not Initialized then skip this function*/
1444:.\Generated_Source\PSoC4/UART_1.c ****         if(UART_1_initVar != 0u)
 578              		.loc 1 1444 0
 579 0000 124B     		ldr	r3, .L64
 580 0002 1B78     		ldrb	r3, [r3]
 581 0004 002B     		cmp	r3, #0
 582 0006 1FD0     		beq	.L57
 583              	.LBB2:
1445:.\Generated_Source\PSoC4/UART_1.c ****         {
1446:.\Generated_Source\PSoC4/UART_1.c ****             /* Set the Counter to 13-bits and transmit a 00 byte */
1447:.\Generated_Source\PSoC4/UART_1.c ****             /* When that is done then reset the counter value back */
1448:.\Generated_Source\PSoC4/UART_1.c ****             uint8 tmpStat;
1449:.\Generated_Source\PSoC4/UART_1.c **** 
1450:.\Generated_Source\PSoC4/UART_1.c ****         #if(UART_1_HD_ENABLED) /* Half Duplex mode*/
1451:.\Generated_Source\PSoC4/UART_1.c **** 
1452:.\Generated_Source\PSoC4/UART_1.c ****             if( (retMode == UART_1_SEND_BREAK) ||
1453:.\Generated_Source\PSoC4/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT ) )
1454:.\Generated_Source\PSoC4/UART_1.c ****             {
1455:.\Generated_Source\PSoC4/UART_1.c ****                 /* CTRL_HD_SEND_BREAK - sends break bits in HD mode */
1456:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_WriteControlRegister(UART_1_ReadControlRegister() |
1457:.\Generated_Source\PSoC4/UART_1.c ****                                                       UART_1_CTRL_HD_SEND_BREAK);
1458:.\Generated_Source\PSoC4/UART_1.c ****                 /* Send zeros */
1459:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_TXDATA_REG = 0u;
1460:.\Generated_Source\PSoC4/UART_1.c **** 
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccUFJMnK.s 			page 37


1461:.\Generated_Source\PSoC4/UART_1.c ****                 do /* Wait until transmit starts */
1462:.\Generated_Source\PSoC4/UART_1.c ****                 {
1463:.\Generated_Source\PSoC4/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
1464:.\Generated_Source\PSoC4/UART_1.c ****                 }
1465:.\Generated_Source\PSoC4/UART_1.c ****                 while((tmpStat & UART_1_TX_STS_FIFO_EMPTY) != 0u);
1466:.\Generated_Source\PSoC4/UART_1.c ****             }
1467:.\Generated_Source\PSoC4/UART_1.c **** 
1468:.\Generated_Source\PSoC4/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
1469:.\Generated_Source\PSoC4/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1470:.\Generated_Source\PSoC4/UART_1.c ****             {
1471:.\Generated_Source\PSoC4/UART_1.c ****                 do /* Wait until transmit complete */
1472:.\Generated_Source\PSoC4/UART_1.c ****                 {
1473:.\Generated_Source\PSoC4/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
1474:.\Generated_Source\PSoC4/UART_1.c ****                 }
1475:.\Generated_Source\PSoC4/UART_1.c ****                 while(((uint8)~tmpStat & UART_1_TX_STS_COMPLETE) != 0u);
1476:.\Generated_Source\PSoC4/UART_1.c ****             }
1477:.\Generated_Source\PSoC4/UART_1.c **** 
1478:.\Generated_Source\PSoC4/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
1479:.\Generated_Source\PSoC4/UART_1.c ****                 (retMode == UART_1_REINIT) ||
1480:.\Generated_Source\PSoC4/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1481:.\Generated_Source\PSoC4/UART_1.c ****             {
1482:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_WriteControlRegister(UART_1_ReadControlRegister() &
1483:.\Generated_Source\PSoC4/UART_1.c ****                                               (uint8)~UART_1_CTRL_HD_SEND_BREAK);
1484:.\Generated_Source\PSoC4/UART_1.c ****             }
1485:.\Generated_Source\PSoC4/UART_1.c **** 
1486:.\Generated_Source\PSoC4/UART_1.c ****         #else /* UART_1_HD_ENABLED Full Duplex mode */
1487:.\Generated_Source\PSoC4/UART_1.c **** 
1488:.\Generated_Source\PSoC4/UART_1.c ****             static uint8 txPeriod;
1489:.\Generated_Source\PSoC4/UART_1.c **** 
1490:.\Generated_Source\PSoC4/UART_1.c ****             if( (retMode == UART_1_SEND_BREAK) ||
 584              		.loc 1 1490 0
 585 0008 0028     		cmp	r0, #0
 586 000a 01D0     		beq	.L59
 587              		.loc 1 1490 0 is_stmt 0 discriminator 1
 588 000c 0328     		cmp	r0, #3
 589 000e 0CD1     		bne	.L60
 590              	.L59:
1491:.\Generated_Source\PSoC4/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1492:.\Generated_Source\PSoC4/UART_1.c ****             {
1493:.\Generated_Source\PSoC4/UART_1.c ****                 /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex mode
1494:.\Generated_Source\PSoC4/UART_1.c ****                 #if( (UART_1_PARITY_TYPE != UART_1__B_UART__NONE_REVB) || \
1495:.\Generated_Source\PSoC4/UART_1.c ****                                     (UART_1_PARITY_TYPE_SW != 0u) )
1496:.\Generated_Source\PSoC4/UART_1.c ****                     UART_1_WriteControlRegister(UART_1_ReadControlRegister() |
1497:.\Generated_Source\PSoC4/UART_1.c ****                                                           UART_1_CTRL_HD_SEND_BREAK);
1498:.\Generated_Source\PSoC4/UART_1.c ****                 #endif /* End UART_1_PARITY_TYPE != UART_1__B_UART__NONE_REVB  */
1499:.\Generated_Source\PSoC4/UART_1.c **** 
1500:.\Generated_Source\PSoC4/UART_1.c ****                 #if(UART_1_TXCLKGEN_DP)
1501:.\Generated_Source\PSoC4/UART_1.c ****                     txPeriod = UART_1_TXBITCLKTX_COMPLETE_REG;
 591              		.loc 1 1501 0 is_stmt 1
 592 0010 0F4B     		ldr	r3, .L64+4
 593 0012 1978     		ldrb	r1, [r3]
 594 0014 0D4A     		ldr	r2, .L64
 595 0016 5170     		strb	r1, [r2, #1]
1502:.\Generated_Source\PSoC4/UART_1.c ****                     UART_1_TXBITCLKTX_COMPLETE_REG = UART_1_TXBITCTR_BREAKBITS;
 596              		.loc 1 1502 0
 597 0018 6722     		mov	r2, #103
 598 001a 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccUFJMnK.s 			page 38


1503:.\Generated_Source\PSoC4/UART_1.c ****                 #else
1504:.\Generated_Source\PSoC4/UART_1.c ****                     txPeriod = UART_1_TXBITCTR_PERIOD_REG;
1505:.\Generated_Source\PSoC4/UART_1.c ****                     UART_1_TXBITCTR_PERIOD_REG = UART_1_TXBITCTR_BREAKBITS8X;
1506:.\Generated_Source\PSoC4/UART_1.c ****                 #endif /* End UART_1_TXCLKGEN_DP */
1507:.\Generated_Source\PSoC4/UART_1.c **** 
1508:.\Generated_Source\PSoC4/UART_1.c ****                 /* Send zeros */
1509:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_TXDATA_REG = 0u;
 599              		.loc 1 1509 0
 600 001c 0022     		mov	r2, #0
 601 001e 0D4B     		ldr	r3, .L64+8
 602 0020 1A70     		strb	r2, [r3]
 603              	.L61:
1510:.\Generated_Source\PSoC4/UART_1.c **** 
1511:.\Generated_Source\PSoC4/UART_1.c ****                 do /* Wait until transmit starts */
1512:.\Generated_Source\PSoC4/UART_1.c ****                 {
1513:.\Generated_Source\PSoC4/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
 604              		.loc 1 1513 0 discriminator 1
 605 0022 0D4B     		ldr	r3, .L64+12
 606 0024 1B78     		ldrb	r3, [r3]
 607              	.LVL46:
1514:.\Generated_Source\PSoC4/UART_1.c ****                 }
1515:.\Generated_Source\PSoC4/UART_1.c ****                 while((tmpStat & UART_1_TX_STS_FIFO_EMPTY) != 0u);
 608              		.loc 1 1515 0 discriminator 1
 609 0026 9B07     		lsl	r3, r3, #30
 610 0028 FBD4     		bmi	.L61
 611              	.LVL47:
 612              	.L60:
1516:.\Generated_Source\PSoC4/UART_1.c ****             }
1517:.\Generated_Source\PSoC4/UART_1.c **** 
1518:.\Generated_Source\PSoC4/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
 613              		.loc 1 1518 0
 614 002a 0128     		cmp	r0, #1
 615 002c 01D0     		beq	.L62
 616              		.loc 1 1518 0 is_stmt 0 discriminator 1
 617 002e 0328     		cmp	r0, #3
 618 0030 03D1     		bne	.L63
 619              	.L62:
1519:.\Generated_Source\PSoC4/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1520:.\Generated_Source\PSoC4/UART_1.c ****             {
1521:.\Generated_Source\PSoC4/UART_1.c ****                 do /* Wait until transmit complete */
1522:.\Generated_Source\PSoC4/UART_1.c ****                 {
1523:.\Generated_Source\PSoC4/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
 620              		.loc 1 1523 0 is_stmt 1 discriminator 1
 621 0032 094B     		ldr	r3, .L64+12
 622 0034 1B78     		ldrb	r3, [r3]
 623              	.LVL48:
1524:.\Generated_Source\PSoC4/UART_1.c ****                 }
1525:.\Generated_Source\PSoC4/UART_1.c ****                 while(((uint8)~tmpStat & UART_1_TX_STS_COMPLETE) != 0u);
 624              		.loc 1 1525 0 discriminator 1
 625 0036 DB07     		lsl	r3, r3, #31
 626 0038 FBD5     		bpl	.L62
 627              	.LVL49:
 628              	.L63:
1526:.\Generated_Source\PSoC4/UART_1.c ****             }
1527:.\Generated_Source\PSoC4/UART_1.c **** 
1528:.\Generated_Source\PSoC4/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
1529:.\Generated_Source\PSoC4/UART_1.c ****                 (retMode == UART_1_REINIT) ||
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccUFJMnK.s 			page 39


 629              		.loc 1 1529 0
 630 003a 0138     		sub	r0, r0, #1
 631              	.LVL50:
1528:.\Generated_Source\PSoC4/UART_1.c ****                 (retMode == UART_1_REINIT) ||
 632              		.loc 1 1528 0
 633 003c 0228     		cmp	r0, #2
 634 003e 03D8     		bhi	.L57
1530:.\Generated_Source\PSoC4/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1531:.\Generated_Source\PSoC4/UART_1.c ****             {
1532:.\Generated_Source\PSoC4/UART_1.c **** 
1533:.\Generated_Source\PSoC4/UART_1.c ****             #if(UART_1_TXCLKGEN_DP)
1534:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_TXBITCLKTX_COMPLETE_REG = txPeriod;
 635              		.loc 1 1534 0
 636 0040 024B     		ldr	r3, .L64
 637 0042 5A78     		ldrb	r2, [r3, #1]
 638 0044 024B     		ldr	r3, .L64+4
 639 0046 1A70     		strb	r2, [r3]
 640              	.L57:
 641              	.LBE2:
1535:.\Generated_Source\PSoC4/UART_1.c ****             #else
1536:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_TXBITCTR_PERIOD_REG = txPeriod;
1537:.\Generated_Source\PSoC4/UART_1.c ****             #endif /* End UART_1_TXCLKGEN_DP */
1538:.\Generated_Source\PSoC4/UART_1.c **** 
1539:.\Generated_Source\PSoC4/UART_1.c ****             #if( (UART_1_PARITY_TYPE != UART_1__B_UART__NONE_REVB) || \
1540:.\Generated_Source\PSoC4/UART_1.c ****                  (UART_1_PARITY_TYPE_SW != 0u) )
1541:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_WriteControlRegister(UART_1_ReadControlRegister() &
1542:.\Generated_Source\PSoC4/UART_1.c ****                                                       (uint8) ~UART_1_CTRL_HD_SEND_BREAK);
1543:.\Generated_Source\PSoC4/UART_1.c ****             #endif /* End UART_1_PARITY_TYPE != NONE */
1544:.\Generated_Source\PSoC4/UART_1.c ****             }
1545:.\Generated_Source\PSoC4/UART_1.c ****         #endif    /* End UART_1_HD_ENABLED */
1546:.\Generated_Source\PSoC4/UART_1.c ****         }
1547:.\Generated_Source\PSoC4/UART_1.c ****     }
 642              		.loc 1 1547 0
 643              		@ sp needed
 644 0048 7047     		bx	lr
 645              	.L65:
 646 004a C046     		.align	2
 647              	.L64:
 648 004c 00000000 		.word	.LANCHOR0
 649 0050 31000F40 		.word	1074724913
 650 0054 42000F40 		.word	1074724930
 651 0058 62000F40 		.word	1074724962
 652              		.cfi_endproc
 653              	.LFE17:
 654              		.size	UART_1_SendBreak, .-UART_1_SendBreak
 655              		.section	.text.UART_1_SetTxAddressMode,"ax",%progbits
 656              		.align	2
 657              		.global	UART_1_SetTxAddressMode
 658              		.code	16
 659              		.thumb_func
 660              		.type	UART_1_SetTxAddressMode, %function
 661              	UART_1_SetTxAddressMode:
 662              	.LFB18:
1548:.\Generated_Source\PSoC4/UART_1.c **** 
1549:.\Generated_Source\PSoC4/UART_1.c **** 
1550:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
1551:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_SetTxAddressMode
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccUFJMnK.s 			page 40


1552:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
1553:.\Generated_Source\PSoC4/UART_1.c ****     *
1554:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
1555:.\Generated_Source\PSoC4/UART_1.c ****     *  Configures the transmitter to signal the next bytes is address or data.
1556:.\Generated_Source\PSoC4/UART_1.c ****     *
1557:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
1558:.\Generated_Source\PSoC4/UART_1.c ****     *  addressMode: 
1559:.\Generated_Source\PSoC4/UART_1.c ****     *       UART_1_SET_SPACE - Configure the transmitter to send the next
1560:.\Generated_Source\PSoC4/UART_1.c ****     *                                    byte as a data.
1561:.\Generated_Source\PSoC4/UART_1.c ****     *       UART_1_SET_MARK  - Configure the transmitter to send the next
1562:.\Generated_Source\PSoC4/UART_1.c ****     *                                    byte as an address.
1563:.\Generated_Source\PSoC4/UART_1.c ****     *
1564:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
1565:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
1566:.\Generated_Source\PSoC4/UART_1.c ****     *
1567:.\Generated_Source\PSoC4/UART_1.c ****     * Side Effects:
1568:.\Generated_Source\PSoC4/UART_1.c ****     *  This function sets and clears UART_1_CTRL_MARK bit in the Control
1569:.\Generated_Source\PSoC4/UART_1.c ****     *  register.
1570:.\Generated_Source\PSoC4/UART_1.c ****     *
1571:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
1572:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_SetTxAddressMode(uint8 addressMode) 
1573:.\Generated_Source\PSoC4/UART_1.c ****     {
 663              		.loc 1 1573 0
 664              		.cfi_startproc
 665              	.LVL51:
1574:.\Generated_Source\PSoC4/UART_1.c ****         /* Mark/Space sending enable */
1575:.\Generated_Source\PSoC4/UART_1.c ****         if(addressMode != 0u)
1576:.\Generated_Source\PSoC4/UART_1.c ****         {
1577:.\Generated_Source\PSoC4/UART_1.c ****         #if( UART_1_CONTROL_REG_REMOVED == 0u )
1578:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_WriteControlRegister(UART_1_ReadControlRegister() |
1579:.\Generated_Source\PSoC4/UART_1.c ****                                                   UART_1_CTRL_MARK);
1580:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* End UART_1_CONTROL_REG_REMOVED == 0u */
1581:.\Generated_Source\PSoC4/UART_1.c ****         }
1582:.\Generated_Source\PSoC4/UART_1.c ****         else
1583:.\Generated_Source\PSoC4/UART_1.c ****         {
1584:.\Generated_Source\PSoC4/UART_1.c ****         #if( UART_1_CONTROL_REG_REMOVED == 0u )
1585:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_WriteControlRegister(UART_1_ReadControlRegister() &
1586:.\Generated_Source\PSoC4/UART_1.c ****                                                   (uint8) ~UART_1_CTRL_MARK);
1587:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* End UART_1_CONTROL_REG_REMOVED == 0u */
1588:.\Generated_Source\PSoC4/UART_1.c ****         }
1589:.\Generated_Source\PSoC4/UART_1.c ****     }
 666              		.loc 1 1589 0
 667              		@ sp needed
 668 0000 7047     		bx	lr
 669              		.cfi_endproc
 670              	.LFE18:
 671              		.size	UART_1_SetTxAddressMode, .-UART_1_SetTxAddressMode
 672              		.global	UART_1_initVar
 673 0002 C046     		.bss
 674              		.set	.LANCHOR0,. + 0
 675              		.type	UART_1_initVar, %object
 676              		.size	UART_1_initVar, 1
 677              	UART_1_initVar:
 678 0000 00       		.space	1
 679              		.type	txPeriod.4822, %object
 680              		.size	txPeriod.4822, 1
 681              	txPeriod.4822:
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccUFJMnK.s 			page 41


 682 0001 00       		.space	1
 683              		.text
 684              	.Letext0:
 685              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 686              		.file 3 ".\\Generated_Source\\PSoC4\\UART_1_IntClock.h"
 687              		.file 4 ".\\Generated_Source\\PSoC4\\CyLib.h"
 688              		.section	.debug_info,"",%progbits
 689              	.Ldebug_info0:
 690 0000 6C040000 		.4byte	0x46c
 691 0004 0400     		.2byte	0x4
 692 0006 00000000 		.4byte	.Ldebug_abbrev0
 693 000a 04       		.byte	0x4
 694 000b 01       		.uleb128 0x1
 695 000c 52020000 		.4byte	.LASF47
 696 0010 01       		.byte	0x1
 697 0011 A0030000 		.4byte	.LASF48
 698 0015 10030000 		.4byte	.LASF49
 699 0019 00000000 		.4byte	.Ldebug_ranges0+0
 700 001d 00000000 		.4byte	0
 701 0021 00000000 		.4byte	.Ldebug_line0
 702 0025 02       		.uleb128 0x2
 703 0026 01       		.byte	0x1
 704 0027 06       		.byte	0x6
 705 0028 C2030000 		.4byte	.LASF0
 706 002c 02       		.uleb128 0x2
 707 002d 01       		.byte	0x1
 708 002e 08       		.byte	0x8
 709 002f 51010000 		.4byte	.LASF1
 710 0033 02       		.uleb128 0x2
 711 0034 02       		.byte	0x2
 712 0035 05       		.byte	0x5
 713 0036 6D010000 		.4byte	.LASF2
 714 003a 02       		.uleb128 0x2
 715 003b 02       		.byte	0x2
 716 003c 07       		.byte	0x7
 717 003d 54000000 		.4byte	.LASF3
 718 0041 02       		.uleb128 0x2
 719 0042 04       		.byte	0x4
 720 0043 05       		.byte	0x5
 721 0044 6F030000 		.4byte	.LASF4
 722 0048 02       		.uleb128 0x2
 723 0049 04       		.byte	0x4
 724 004a 07       		.byte	0x7
 725 004b 07010000 		.4byte	.LASF5
 726 004f 02       		.uleb128 0x2
 727 0050 08       		.byte	0x8
 728 0051 05       		.byte	0x5
 729 0052 00000000 		.4byte	.LASF6
 730 0056 02       		.uleb128 0x2
 731 0057 08       		.byte	0x8
 732 0058 07       		.byte	0x7
 733 0059 B8000000 		.4byte	.LASF7
 734 005d 03       		.uleb128 0x3
 735 005e 04       		.byte	0x4
 736 005f 05       		.byte	0x5
 737 0060 696E7400 		.ascii	"int\000"
 738 0064 02       		.uleb128 0x2
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccUFJMnK.s 			page 42


 739 0065 04       		.byte	0x4
 740 0066 07       		.byte	0x7
 741 0067 AB010000 		.4byte	.LASF8
 742 006b 04       		.uleb128 0x4
 743 006c 19010000 		.4byte	.LASF9
 744 0070 02       		.byte	0x2
 745 0071 C2       		.byte	0xc2
 746 0072 2C000000 		.4byte	0x2c
 747 0076 04       		.uleb128 0x4
 748 0077 77010000 		.4byte	.LASF10
 749 007b 02       		.byte	0x2
 750 007c C3       		.byte	0xc3
 751 007d 3A000000 		.4byte	0x3a
 752 0081 04       		.uleb128 0x4
 753 0082 7E010000 		.4byte	.LASF11
 754 0086 02       		.byte	0x2
 755 0087 C4       		.byte	0xc4
 756 0088 48000000 		.4byte	0x48
 757 008c 02       		.uleb128 0x2
 758 008d 04       		.byte	0x4
 759 008e 04       		.byte	0x4
 760 008f B2000000 		.4byte	.LASF12
 761 0093 02       		.uleb128 0x2
 762 0094 08       		.byte	0x8
 763 0095 04       		.byte	0x4
 764 0096 5F010000 		.4byte	.LASF13
 765 009a 04       		.uleb128 0x4
 766 009b 27020000 		.4byte	.LASF14
 767 009f 02       		.byte	0x2
 768 00a0 D3       		.byte	0xd3
 769 00a1 A5000000 		.4byte	0xa5
 770 00a5 02       		.uleb128 0x2
 771 00a6 01       		.byte	0x1
 772 00a7 08       		.byte	0x8
 773 00a8 4D020000 		.4byte	.LASF15
 774 00ac 05       		.uleb128 0x5
 775 00ad DB000000 		.4byte	.LASF16
 776 00b1 02       		.byte	0x2
 777 00b2 6C01     		.2byte	0x16c
 778 00b4 B8000000 		.4byte	0xb8
 779 00b8 06       		.uleb128 0x6
 780 00b9 6B000000 		.4byte	0x6b
 781 00bd 02       		.uleb128 0x2
 782 00be 04       		.byte	0x4
 783 00bf 07       		.byte	0x7
 784 00c0 1E020000 		.4byte	.LASF17
 785 00c4 07       		.uleb128 0x7
 786 00c5 0E000000 		.4byte	.LASF50
 787 00c9 01       		.byte	0x1
 788 00ca 6A       		.byte	0x6a
 789 00cb 00000000 		.4byte	.LFB3
 790 00cf 20000000 		.4byte	.LFE3-.LFB3
 791 00d3 01       		.uleb128 0x1
 792 00d4 9C       		.byte	0x9c
 793 00d5 08       		.uleb128 0x8
 794 00d6 92030000 		.4byte	.LASF18
 795 00da 01       		.byte	0x1
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccUFJMnK.s 			page 43


 796 00db B7       		.byte	0xb7
 797 00dc 00000000 		.4byte	.LFB4
 798 00e0 24000000 		.4byte	.LFE4-.LFB4
 799 00e4 01       		.uleb128 0x1
 800 00e5 9C       		.byte	0x9c
 801 00e6 27010000 		.4byte	0x127
 802 00ea 09       		.uleb128 0x9
 803 00eb 40010000 		.4byte	.LASF21
 804 00ef 01       		.byte	0x1
 805 00f0 B9       		.byte	0xb9
 806 00f1 6B000000 		.4byte	0x6b
 807 00f5 00000000 		.4byte	.LLST0
 808 00f9 0A       		.uleb128 0xa
 809 00fa 06000000 		.4byte	.LVL0
 810 00fe 3B040000 		.4byte	0x43b
 811 0102 0B       		.uleb128 0xb
 812 0103 18000000 		.4byte	.LVL2
 813 0107 46040000 		.4byte	0x446
 814 010b 16010000 		.4byte	0x116
 815 010f 0C       		.uleb128 0xc
 816 0110 01       		.uleb128 0x1
 817 0111 50       		.byte	0x50
 818 0112 02       		.uleb128 0x2
 819 0113 08       		.byte	0x8
 820 0114 FF       		.byte	0xff
 821 0115 00       		.byte	0
 822 0116 0D       		.uleb128 0xd
 823 0117 1E000000 		.4byte	.LVL3
 824 011b 57040000 		.4byte	0x457
 825 011f 0C       		.uleb128 0xc
 826 0120 01       		.uleb128 0x1
 827 0121 50       		.byte	0x50
 828 0122 02       		.uleb128 0x2
 829 0123 74       		.byte	0x74
 830 0124 00       		.sleb128 0
 831 0125 00       		.byte	0
 832 0126 00       		.byte	0
 833 0127 08       		.uleb128 0x8
 834 0128 1A000000 		.4byte	.LASF19
 835 012c 01       		.byte	0x1
 836 012d 4C       		.byte	0x4c
 837 012e 00000000 		.4byte	.LFB2
 838 0132 20000000 		.4byte	.LFE2-.LFB2
 839 0136 01       		.uleb128 0x1
 840 0137 9C       		.byte	0x9c
 841 0138 4F010000 		.4byte	0x14f
 842 013c 0A       		.uleb128 0xa
 843 013d 0E000000 		.4byte	.LVL5
 844 0141 C4000000 		.4byte	0xc4
 845 0145 0A       		.uleb128 0xa
 846 0146 18000000 		.4byte	.LVL6
 847 014a D5000000 		.4byte	0xd5
 848 014e 00       		.byte	0
 849 014f 08       		.uleb128 0x8
 850 0150 FB000000 		.4byte	.LASF20
 851 0154 01       		.byte	0x1
 852 0155 F0       		.byte	0xf0
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccUFJMnK.s 			page 44


 853 0156 00000000 		.4byte	.LFB5
 854 015a 24000000 		.4byte	.LFE5-.LFB5
 855 015e 01       		.uleb128 0x1
 856 015f 9C       		.byte	0x9c
 857 0160 96010000 		.4byte	0x196
 858 0164 09       		.uleb128 0x9
 859 0165 40010000 		.4byte	.LASF21
 860 0169 01       		.byte	0x1
 861 016a F2       		.byte	0xf2
 862 016b 6B000000 		.4byte	0x6b
 863 016f 13000000 		.4byte	.LLST1
 864 0173 0A       		.uleb128 0xa
 865 0174 06000000 		.4byte	.LVL7
 866 0178 3B040000 		.4byte	0x43b
 867 017c 0A       		.uleb128 0xa
 868 017d 0C000000 		.4byte	.LVL9
 869 0181 68040000 		.4byte	0x468
 870 0185 0D       		.uleb128 0xd
 871 0186 1C000000 		.4byte	.LVL10
 872 018a 57040000 		.4byte	0x457
 873 018e 0C       		.uleb128 0xc
 874 018f 01       		.uleb128 0x1
 875 0190 50       		.byte	0x50
 876 0191 02       		.uleb128 0x2
 877 0192 74       		.byte	0x74
 878 0193 00       		.sleb128 0
 879 0194 00       		.byte	0
 880 0195 00       		.byte	0
 881 0196 0E       		.uleb128 0xe
 882 0197 E0000000 		.4byte	.LASF28
 883 019b 01       		.byte	0x1
 884 019c 2701     		.2byte	0x127
 885 019e 6B000000 		.4byte	0x6b
 886 01a2 00000000 		.4byte	.LFB6
 887 01a6 04000000 		.4byte	.LFE6-.LFB6
 888 01aa 01       		.uleb128 0x1
 889 01ab 9C       		.byte	0x9c
 890 01ac 0F       		.uleb128 0xf
 891 01ad 27000000 		.4byte	.LASF22
 892 01b1 01       		.byte	0x1
 893 01b2 3F01     		.2byte	0x13f
 894 01b4 00000000 		.4byte	.LFB7
 895 01b8 02000000 		.4byte	.LFE7-.LFB7
 896 01bc 01       		.uleb128 0x1
 897 01bd 9C       		.byte	0x9c
 898 01be D1010000 		.4byte	0x1d1
 899 01c2 10       		.uleb128 0x10
 900 01c3 1F010000 		.4byte	.LASF24
 901 01c7 01       		.byte	0x1
 902 01c8 3F01     		.2byte	0x13f
 903 01ca 6B000000 		.4byte	0x6b
 904 01ce 01       		.uleb128 0x1
 905 01cf 50       		.byte	0x50
 906 01d0 00       		.byte	0
 907 01d1 0F       		.uleb128 0xf
 908 01d2 78030000 		.4byte	.LASF23
 909 01d6 01       		.byte	0x1
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccUFJMnK.s 			page 45


 910 01d7 8C03     		.2byte	0x38c
 911 01d9 00000000 		.4byte	.LFB8
 912 01dd 0C000000 		.4byte	.LFE8-.LFB8
 913 01e1 01       		.uleb128 0x1
 914 01e2 9C       		.byte	0x9c
 915 01e3 F6010000 		.4byte	0x1f6
 916 01e7 10       		.uleb128 0x10
 917 01e8 66010000 		.4byte	.LASF25
 918 01ec 01       		.byte	0x1
 919 01ed 8C03     		.2byte	0x38c
 920 01ef 6B000000 		.4byte	0x6b
 921 01f3 01       		.uleb128 0x1
 922 01f4 50       		.byte	0x50
 923 01f5 00       		.byte	0
 924 01f6 0F       		.uleb128 0xf
 925 01f7 E8020000 		.4byte	.LASF26
 926 01fb 01       		.byte	0x1
 927 01fc AE03     		.2byte	0x3ae
 928 01fe 00000000 		.4byte	.LFB9
 929 0202 18000000 		.4byte	.LFE9-.LFB9
 930 0206 01       		.uleb128 0x1
 931 0207 9C       		.byte	0x9c
 932 0208 1B020000 		.4byte	0x21b
 933 020c 10       		.uleb128 0x10
 934 020d 42020000 		.4byte	.LASF27
 935 0211 01       		.byte	0x1
 936 0212 AE03     		.2byte	0x3ae
 937 0214 6B000000 		.4byte	0x6b
 938 0218 01       		.uleb128 0x1
 939 0219 50       		.byte	0x50
 940 021a 00       		.byte	0
 941 021b 0E       		.uleb128 0xe
 942 021c 97000000 		.4byte	.LASF29
 943 0220 01       		.byte	0x1
 944 0221 EB03     		.2byte	0x3eb
 945 0223 6B000000 		.4byte	0x6b
 946 0227 00000000 		.4byte	.LFB10
 947 022b 0C000000 		.4byte	.LFE10-.LFB10
 948 022f 01       		.uleb128 0x1
 949 0230 9C       		.byte	0x9c
 950 0231 0F       		.uleb128 0xf
 951 0232 9C010000 		.4byte	.LASF30
 952 0236 01       		.byte	0x1
 953 0237 1104     		.2byte	0x411
 954 0239 00000000 		.4byte	.LFB11
 955 023d 18000000 		.4byte	.LFE11-.LFB11
 956 0241 01       		.uleb128 0x1
 957 0242 9C       		.byte	0x9c
 958 0243 56020000 		.4byte	0x256
 959 0247 10       		.uleb128 0x10
 960 0248 42020000 		.4byte	.LASF27
 961 024c 01       		.byte	0x1
 962 024d 1104     		.2byte	0x411
 963 024f 6B000000 		.4byte	0x6b
 964 0253 01       		.uleb128 0x1
 965 0254 50       		.byte	0x50
 966 0255 00       		.byte	0
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccUFJMnK.s 			page 46


 967 0256 0F       		.uleb128 0xf
 968 0257 CE030000 		.4byte	.LASF31
 969 025b 01       		.byte	0x1
 970 025c 7904     		.2byte	0x479
 971 025e 00000000 		.4byte	.LFB12
 972 0262 28000000 		.4byte	.LFE12-.LFB12
 973 0266 01       		.uleb128 0x1
 974 0267 9C       		.byte	0x9c
 975 0268 96020000 		.4byte	0x296
 976 026c 11       		.uleb128 0x11
 977 026d AB000000 		.4byte	.LASF32
 978 0271 01       		.byte	0x1
 979 0272 7904     		.2byte	0x479
 980 0274 96020000 		.4byte	0x296
 981 0278 26000000 		.4byte	.LLST2
 982 027c 12       		.uleb128 0x12
 983 027d F4010000 		.4byte	.LASF33
 984 0281 01       		.byte	0x1
 985 0282 7B04     		.2byte	0x47b
 986 0284 76000000 		.4byte	0x76
 987 0288 68000000 		.4byte	.LLST3
 988 028c 0A       		.uleb128 0xa
 989 028d 10000000 		.4byte	.LVL19
 990 0291 31020000 		.4byte	0x231
 991 0295 00       		.byte	0
 992 0296 13       		.uleb128 0x13
 993 0297 04       		.byte	0x4
 994 0298 9C020000 		.4byte	0x29c
 995 029c 14       		.uleb128 0x14
 996 029d 9A000000 		.4byte	0x9a
 997 02a1 0F       		.uleb128 0xf
 998 02a2 0E020000 		.4byte	.LASF34
 999 02a6 01       		.byte	0x1
 1000 02a7 A704     		.2byte	0x4a7
 1001 02a9 00000000 		.4byte	.LFB13
 1002 02ad 28000000 		.4byte	.LFE13-.LFB13
 1003 02b1 01       		.uleb128 0x1
 1004 02b2 9C       		.byte	0x9c
 1005 02b3 F1020000 		.4byte	0x2f1
 1006 02b7 11       		.uleb128 0x11
 1007 02b8 AB000000 		.4byte	.LASF32
 1008 02bc 01       		.byte	0x1
 1009 02bd A704     		.2byte	0x4a7
 1010 02bf F1020000 		.4byte	0x2f1
 1011 02c3 A9000000 		.4byte	.LLST4
 1012 02c7 11       		.uleb128 0x11
 1013 02c8 36010000 		.4byte	.LASF35
 1014 02cc 01       		.byte	0x1
 1015 02cd A704     		.2byte	0x4a7
 1016 02cf 6B000000 		.4byte	0x6b
 1017 02d3 EB000000 		.4byte	.LLST5
 1018 02d7 12       		.uleb128 0x12
 1019 02d8 F4010000 		.4byte	.LASF33
 1020 02dc 01       		.byte	0x1
 1021 02dd AA04     		.2byte	0x4aa
 1022 02df 6B000000 		.4byte	0x6b
 1023 02e3 25010000 		.4byte	.LLST6
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccUFJMnK.s 			page 47


 1024 02e7 0A       		.uleb128 0xa
 1025 02e8 12000000 		.4byte	.LVL28
 1026 02ec 31020000 		.4byte	0x231
 1027 02f0 00       		.byte	0
 1028 02f1 13       		.uleb128 0x13
 1029 02f2 04       		.byte	0x4
 1030 02f3 F7020000 		.4byte	0x2f7
 1031 02f7 14       		.uleb128 0x14
 1032 02f8 6B000000 		.4byte	0x6b
 1033 02fc 0F       		.uleb128 0xf
 1034 02fd E5010000 		.4byte	.LASF36
 1035 0301 01       		.byte	0x1
 1036 0302 CE04     		.2byte	0x4ce
 1037 0304 00000000 		.4byte	.LFB14
 1038 0308 20000000 		.4byte	.LFE14-.LFB14
 1039 030c 01       		.uleb128 0x1
 1040 030d 9C       		.byte	0x9c
 1041 030e 4E030000 		.4byte	0x34e
 1042 0312 11       		.uleb128 0x11
 1043 0313 42020000 		.4byte	.LASF27
 1044 0317 01       		.byte	0x1
 1045 0318 CE04     		.2byte	0x4ce
 1046 031a 6B000000 		.4byte	0x6b
 1047 031e 66010000 		.4byte	.LLST7
 1048 0322 0A       		.uleb128 0xa
 1049 0323 0E000000 		.4byte	.LVL35
 1050 0327 31020000 		.4byte	0x231
 1051 032b 0B       		.uleb128 0xb
 1052 032c 14000000 		.4byte	.LVL36
 1053 0330 31020000 		.4byte	0x231
 1054 0334 3E030000 		.4byte	0x33e
 1055 0338 0C       		.uleb128 0xc
 1056 0339 01       		.uleb128 0x1
 1057 033a 50       		.byte	0x50
 1058 033b 01       		.uleb128 0x1
 1059 033c 3D       		.byte	0x3d
 1060 033d 00       		.byte	0
 1061 033e 0D       		.uleb128 0xd
 1062 033f 1A000000 		.4byte	.LVL37
 1063 0343 31020000 		.4byte	0x231
 1064 0347 0C       		.uleb128 0xc
 1065 0348 01       		.uleb128 0x1
 1066 0349 50       		.byte	0x50
 1067 034a 01       		.uleb128 0x1
 1068 034b 3A       		.byte	0x3a
 1069 034c 00       		.byte	0
 1070 034d 00       		.byte	0
 1071 034e 15       		.uleb128 0x15
 1072 034f B8010000 		.4byte	.LASF51
 1073 0353 01       		.byte	0x1
 1074 0354 F904     		.2byte	0x4f9
 1075 0356 6B000000 		.4byte	0x6b
 1076 035a 00000000 		.4byte	.LFB15
 1077 035e 20000000 		.4byte	.LFE15-.LFB15
 1078 0362 01       		.uleb128 0x1
 1079 0363 9C       		.byte	0x9c
 1080 0364 79030000 		.4byte	0x379
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccUFJMnK.s 			page 48


 1081 0368 12       		.uleb128 0x12
 1082 0369 DF030000 		.4byte	.LASF37
 1083 036d 01       		.byte	0x1
 1084 036e FC04     		.2byte	0x4fc
 1085 0370 6B000000 		.4byte	0x6b
 1086 0374 87010000 		.4byte	.LLST8
 1087 0378 00       		.byte	0
 1088 0379 0F       		.uleb128 0xf
 1089 037a FB020000 		.4byte	.LASF38
 1090 037e 01       		.byte	0x1
 1091 037f 4A05     		.2byte	0x54a
 1092 0381 00000000 		.4byte	.LFB16
 1093 0385 24000000 		.4byte	.LFE16-.LFB16
 1094 0389 01       		.uleb128 0x1
 1095 038a 9C       		.byte	0x9c
 1096 038b B2030000 		.4byte	0x3b2
 1097 038f 12       		.uleb128 0x12
 1098 0390 40010000 		.4byte	.LASF21
 1099 0394 01       		.byte	0x1
 1100 0395 4C05     		.2byte	0x54c
 1101 0397 6B000000 		.4byte	0x6b
 1102 039b B0010000 		.4byte	.LLST9
 1103 039f 0A       		.uleb128 0xa
 1104 03a0 06000000 		.4byte	.LVL43
 1105 03a4 3B040000 		.4byte	0x43b
 1106 03a8 0A       		.uleb128 0xa
 1107 03a9 1C000000 		.4byte	.LVL44
 1108 03ad 57040000 		.4byte	0x457
 1109 03b1 00       		.byte	0
 1110 03b2 0F       		.uleb128 0xf
 1111 03b3 FD010000 		.4byte	.LASF39
 1112 03b7 01       		.byte	0x1
 1113 03b8 A005     		.2byte	0x5a0
 1114 03ba 00000000 		.4byte	.LFB17
 1115 03be 5C000000 		.4byte	.LFE17-.LFB17
 1116 03c2 01       		.uleb128 0x1
 1117 03c3 9C       		.byte	0x9c
 1118 03c4 05040000 		.4byte	0x405
 1119 03c8 11       		.uleb128 0x11
 1120 03c9 E0020000 		.4byte	.LASF40
 1121 03cd 01       		.byte	0x1
 1122 03ce A005     		.2byte	0x5a0
 1123 03d0 6B000000 		.4byte	0x6b
 1124 03d4 C3010000 		.4byte	.LLST10
 1125 03d8 16       		.uleb128 0x16
 1126 03d9 08000000 		.4byte	.LBB2
 1127 03dd 40000000 		.4byte	.LBE2-.LBB2
 1128 03e1 12       		.uleb128 0x12
 1129 03e2 4C000000 		.4byte	.LASF41
 1130 03e6 01       		.byte	0x1
 1131 03e7 A805     		.2byte	0x5a8
 1132 03e9 6B000000 		.4byte	0x6b
 1133 03ed E4010000 		.4byte	.LLST11
 1134 03f1 17       		.uleb128 0x17
 1135 03f2 43000000 		.4byte	.LASF42
 1136 03f6 01       		.byte	0x1
 1137 03f7 D005     		.2byte	0x5d0
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccUFJMnK.s 			page 49


 1138 03f9 6B000000 		.4byte	0x6b
 1139 03fd 05       		.uleb128 0x5
 1140 03fe 03       		.byte	0x3
 1141 03ff 01000000 		.4byte	txPeriod.4822
 1142 0403 00       		.byte	0
 1143 0404 00       		.byte	0
 1144 0405 0F       		.uleb128 0xf
 1145 0406 7F000000 		.4byte	.LASF43
 1146 040a 01       		.byte	0x1
 1147 040b 2406     		.2byte	0x624
 1148 040d 00000000 		.4byte	.LFB18
 1149 0411 02000000 		.4byte	.LFE18-.LFB18
 1150 0415 01       		.uleb128 0x1
 1151 0416 9C       		.byte	0x9c
 1152 0417 2A040000 		.4byte	0x42a
 1153 041b 10       		.uleb128 0x10
 1154 041c CF000000 		.4byte	.LASF44
 1155 0420 01       		.byte	0x1
 1156 0421 2406     		.2byte	0x624
 1157 0423 6B000000 		.4byte	0x6b
 1158 0427 01       		.uleb128 0x1
 1159 0428 50       		.byte	0x50
 1160 0429 00       		.byte	0
 1161 042a 18       		.uleb128 0x18
 1162 042b 27010000 		.4byte	.LASF52
 1163 042f 01       		.byte	0x1
 1164 0430 1B       		.byte	0x1b
 1165 0431 6B000000 		.4byte	0x6b
 1166 0435 05       		.uleb128 0x5
 1167 0436 03       		.byte	0x3
 1168 0437 00000000 		.4byte	UART_1_initVar
 1169 043b 19       		.uleb128 0x19
 1170 043c 85010000 		.4byte	.LASF53
 1171 0440 04       		.byte	0x4
 1172 0441 5E       		.byte	0x5e
 1173 0442 6B000000 		.4byte	0x6b
 1174 0446 1A       		.uleb128 0x1a
 1175 0447 67000000 		.4byte	.LASF45
 1176 044b 03       		.byte	0x3
 1177 044c 1D       		.byte	0x1d
 1178 044d 57040000 		.4byte	0x457
 1179 0451 1B       		.uleb128 0x1b
 1180 0452 81000000 		.4byte	0x81
 1181 0456 00       		.byte	0
 1182 0457 1A       		.uleb128 0x1a
 1183 0458 CF010000 		.4byte	.LASF46
 1184 045c 04       		.byte	0x4
 1185 045d 5F       		.byte	0x5f
 1186 045e 68040000 		.4byte	0x468
 1187 0462 1B       		.uleb128 0x1b
 1188 0463 6B000000 		.4byte	0x6b
 1189 0467 00       		.byte	0
 1190 0468 1C       		.uleb128 0x1c
 1191 0469 2D020000 		.4byte	.LASF54
 1192 046d 03       		.byte	0x3
 1193 046e 27       		.byte	0x27
 1194 046f 00       		.byte	0
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccUFJMnK.s 			page 50


 1195              		.section	.debug_abbrev,"",%progbits
 1196              	.Ldebug_abbrev0:
 1197 0000 01       		.uleb128 0x1
 1198 0001 11       		.uleb128 0x11
 1199 0002 01       		.byte	0x1
 1200 0003 25       		.uleb128 0x25
 1201 0004 0E       		.uleb128 0xe
 1202 0005 13       		.uleb128 0x13
 1203 0006 0B       		.uleb128 0xb
 1204 0007 03       		.uleb128 0x3
 1205 0008 0E       		.uleb128 0xe
 1206 0009 1B       		.uleb128 0x1b
 1207 000a 0E       		.uleb128 0xe
 1208 000b 55       		.uleb128 0x55
 1209 000c 17       		.uleb128 0x17
 1210 000d 11       		.uleb128 0x11
 1211 000e 01       		.uleb128 0x1
 1212 000f 10       		.uleb128 0x10
 1213 0010 17       		.uleb128 0x17
 1214 0011 00       		.byte	0
 1215 0012 00       		.byte	0
 1216 0013 02       		.uleb128 0x2
 1217 0014 24       		.uleb128 0x24
 1218 0015 00       		.byte	0
 1219 0016 0B       		.uleb128 0xb
 1220 0017 0B       		.uleb128 0xb
 1221 0018 3E       		.uleb128 0x3e
 1222 0019 0B       		.uleb128 0xb
 1223 001a 03       		.uleb128 0x3
 1224 001b 0E       		.uleb128 0xe
 1225 001c 00       		.byte	0
 1226 001d 00       		.byte	0
 1227 001e 03       		.uleb128 0x3
 1228 001f 24       		.uleb128 0x24
 1229 0020 00       		.byte	0
 1230 0021 0B       		.uleb128 0xb
 1231 0022 0B       		.uleb128 0xb
 1232 0023 3E       		.uleb128 0x3e
 1233 0024 0B       		.uleb128 0xb
 1234 0025 03       		.uleb128 0x3
 1235 0026 08       		.uleb128 0x8
 1236 0027 00       		.byte	0
 1237 0028 00       		.byte	0
 1238 0029 04       		.uleb128 0x4
 1239 002a 16       		.uleb128 0x16
 1240 002b 00       		.byte	0
 1241 002c 03       		.uleb128 0x3
 1242 002d 0E       		.uleb128 0xe
 1243 002e 3A       		.uleb128 0x3a
 1244 002f 0B       		.uleb128 0xb
 1245 0030 3B       		.uleb128 0x3b
 1246 0031 0B       		.uleb128 0xb
 1247 0032 49       		.uleb128 0x49
 1248 0033 13       		.uleb128 0x13
 1249 0034 00       		.byte	0
 1250 0035 00       		.byte	0
 1251 0036 05       		.uleb128 0x5
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccUFJMnK.s 			page 51


 1252 0037 16       		.uleb128 0x16
 1253 0038 00       		.byte	0
 1254 0039 03       		.uleb128 0x3
 1255 003a 0E       		.uleb128 0xe
 1256 003b 3A       		.uleb128 0x3a
 1257 003c 0B       		.uleb128 0xb
 1258 003d 3B       		.uleb128 0x3b
 1259 003e 05       		.uleb128 0x5
 1260 003f 49       		.uleb128 0x49
 1261 0040 13       		.uleb128 0x13
 1262 0041 00       		.byte	0
 1263 0042 00       		.byte	0
 1264 0043 06       		.uleb128 0x6
 1265 0044 35       		.uleb128 0x35
 1266 0045 00       		.byte	0
 1267 0046 49       		.uleb128 0x49
 1268 0047 13       		.uleb128 0x13
 1269 0048 00       		.byte	0
 1270 0049 00       		.byte	0
 1271 004a 07       		.uleb128 0x7
 1272 004b 2E       		.uleb128 0x2e
 1273 004c 00       		.byte	0
 1274 004d 3F       		.uleb128 0x3f
 1275 004e 19       		.uleb128 0x19
 1276 004f 03       		.uleb128 0x3
 1277 0050 0E       		.uleb128 0xe
 1278 0051 3A       		.uleb128 0x3a
 1279 0052 0B       		.uleb128 0xb
 1280 0053 3B       		.uleb128 0x3b
 1281 0054 0B       		.uleb128 0xb
 1282 0055 27       		.uleb128 0x27
 1283 0056 19       		.uleb128 0x19
 1284 0057 11       		.uleb128 0x11
 1285 0058 01       		.uleb128 0x1
 1286 0059 12       		.uleb128 0x12
 1287 005a 06       		.uleb128 0x6
 1288 005b 40       		.uleb128 0x40
 1289 005c 18       		.uleb128 0x18
 1290 005d 9742     		.uleb128 0x2117
 1291 005f 19       		.uleb128 0x19
 1292 0060 00       		.byte	0
 1293 0061 00       		.byte	0
 1294 0062 08       		.uleb128 0x8
 1295 0063 2E       		.uleb128 0x2e
 1296 0064 01       		.byte	0x1
 1297 0065 3F       		.uleb128 0x3f
 1298 0066 19       		.uleb128 0x19
 1299 0067 03       		.uleb128 0x3
 1300 0068 0E       		.uleb128 0xe
 1301 0069 3A       		.uleb128 0x3a
 1302 006a 0B       		.uleb128 0xb
 1303 006b 3B       		.uleb128 0x3b
 1304 006c 0B       		.uleb128 0xb
 1305 006d 27       		.uleb128 0x27
 1306 006e 19       		.uleb128 0x19
 1307 006f 11       		.uleb128 0x11
 1308 0070 01       		.uleb128 0x1
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccUFJMnK.s 			page 52


 1309 0071 12       		.uleb128 0x12
 1310 0072 06       		.uleb128 0x6
 1311 0073 40       		.uleb128 0x40
 1312 0074 18       		.uleb128 0x18
 1313 0075 9742     		.uleb128 0x2117
 1314 0077 19       		.uleb128 0x19
 1315 0078 01       		.uleb128 0x1
 1316 0079 13       		.uleb128 0x13
 1317 007a 00       		.byte	0
 1318 007b 00       		.byte	0
 1319 007c 09       		.uleb128 0x9
 1320 007d 34       		.uleb128 0x34
 1321 007e 00       		.byte	0
 1322 007f 03       		.uleb128 0x3
 1323 0080 0E       		.uleb128 0xe
 1324 0081 3A       		.uleb128 0x3a
 1325 0082 0B       		.uleb128 0xb
 1326 0083 3B       		.uleb128 0x3b
 1327 0084 0B       		.uleb128 0xb
 1328 0085 49       		.uleb128 0x49
 1329 0086 13       		.uleb128 0x13
 1330 0087 02       		.uleb128 0x2
 1331 0088 17       		.uleb128 0x17
 1332 0089 00       		.byte	0
 1333 008a 00       		.byte	0
 1334 008b 0A       		.uleb128 0xa
 1335 008c 898201   		.uleb128 0x4109
 1336 008f 00       		.byte	0
 1337 0090 11       		.uleb128 0x11
 1338 0091 01       		.uleb128 0x1
 1339 0092 31       		.uleb128 0x31
 1340 0093 13       		.uleb128 0x13
 1341 0094 00       		.byte	0
 1342 0095 00       		.byte	0
 1343 0096 0B       		.uleb128 0xb
 1344 0097 898201   		.uleb128 0x4109
 1345 009a 01       		.byte	0x1
 1346 009b 11       		.uleb128 0x11
 1347 009c 01       		.uleb128 0x1
 1348 009d 31       		.uleb128 0x31
 1349 009e 13       		.uleb128 0x13
 1350 009f 01       		.uleb128 0x1
 1351 00a0 13       		.uleb128 0x13
 1352 00a1 00       		.byte	0
 1353 00a2 00       		.byte	0
 1354 00a3 0C       		.uleb128 0xc
 1355 00a4 8A8201   		.uleb128 0x410a
 1356 00a7 00       		.byte	0
 1357 00a8 02       		.uleb128 0x2
 1358 00a9 18       		.uleb128 0x18
 1359 00aa 9142     		.uleb128 0x2111
 1360 00ac 18       		.uleb128 0x18
 1361 00ad 00       		.byte	0
 1362 00ae 00       		.byte	0
 1363 00af 0D       		.uleb128 0xd
 1364 00b0 898201   		.uleb128 0x4109
 1365 00b3 01       		.byte	0x1
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccUFJMnK.s 			page 53


 1366 00b4 11       		.uleb128 0x11
 1367 00b5 01       		.uleb128 0x1
 1368 00b6 31       		.uleb128 0x31
 1369 00b7 13       		.uleb128 0x13
 1370 00b8 00       		.byte	0
 1371 00b9 00       		.byte	0
 1372 00ba 0E       		.uleb128 0xe
 1373 00bb 2E       		.uleb128 0x2e
 1374 00bc 00       		.byte	0
 1375 00bd 3F       		.uleb128 0x3f
 1376 00be 19       		.uleb128 0x19
 1377 00bf 03       		.uleb128 0x3
 1378 00c0 0E       		.uleb128 0xe
 1379 00c1 3A       		.uleb128 0x3a
 1380 00c2 0B       		.uleb128 0xb
 1381 00c3 3B       		.uleb128 0x3b
 1382 00c4 05       		.uleb128 0x5
 1383 00c5 27       		.uleb128 0x27
 1384 00c6 19       		.uleb128 0x19
 1385 00c7 49       		.uleb128 0x49
 1386 00c8 13       		.uleb128 0x13
 1387 00c9 11       		.uleb128 0x11
 1388 00ca 01       		.uleb128 0x1
 1389 00cb 12       		.uleb128 0x12
 1390 00cc 06       		.uleb128 0x6
 1391 00cd 40       		.uleb128 0x40
 1392 00ce 18       		.uleb128 0x18
 1393 00cf 9742     		.uleb128 0x2117
 1394 00d1 19       		.uleb128 0x19
 1395 00d2 00       		.byte	0
 1396 00d3 00       		.byte	0
 1397 00d4 0F       		.uleb128 0xf
 1398 00d5 2E       		.uleb128 0x2e
 1399 00d6 01       		.byte	0x1
 1400 00d7 3F       		.uleb128 0x3f
 1401 00d8 19       		.uleb128 0x19
 1402 00d9 03       		.uleb128 0x3
 1403 00da 0E       		.uleb128 0xe
 1404 00db 3A       		.uleb128 0x3a
 1405 00dc 0B       		.uleb128 0xb
 1406 00dd 3B       		.uleb128 0x3b
 1407 00de 05       		.uleb128 0x5
 1408 00df 27       		.uleb128 0x27
 1409 00e0 19       		.uleb128 0x19
 1410 00e1 11       		.uleb128 0x11
 1411 00e2 01       		.uleb128 0x1
 1412 00e3 12       		.uleb128 0x12
 1413 00e4 06       		.uleb128 0x6
 1414 00e5 40       		.uleb128 0x40
 1415 00e6 18       		.uleb128 0x18
 1416 00e7 9742     		.uleb128 0x2117
 1417 00e9 19       		.uleb128 0x19
 1418 00ea 01       		.uleb128 0x1
 1419 00eb 13       		.uleb128 0x13
 1420 00ec 00       		.byte	0
 1421 00ed 00       		.byte	0
 1422 00ee 10       		.uleb128 0x10
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccUFJMnK.s 			page 54


 1423 00ef 05       		.uleb128 0x5
 1424 00f0 00       		.byte	0
 1425 00f1 03       		.uleb128 0x3
 1426 00f2 0E       		.uleb128 0xe
 1427 00f3 3A       		.uleb128 0x3a
 1428 00f4 0B       		.uleb128 0xb
 1429 00f5 3B       		.uleb128 0x3b
 1430 00f6 05       		.uleb128 0x5
 1431 00f7 49       		.uleb128 0x49
 1432 00f8 13       		.uleb128 0x13
 1433 00f9 02       		.uleb128 0x2
 1434 00fa 18       		.uleb128 0x18
 1435 00fb 00       		.byte	0
 1436 00fc 00       		.byte	0
 1437 00fd 11       		.uleb128 0x11
 1438 00fe 05       		.uleb128 0x5
 1439 00ff 00       		.byte	0
 1440 0100 03       		.uleb128 0x3
 1441 0101 0E       		.uleb128 0xe
 1442 0102 3A       		.uleb128 0x3a
 1443 0103 0B       		.uleb128 0xb
 1444 0104 3B       		.uleb128 0x3b
 1445 0105 05       		.uleb128 0x5
 1446 0106 49       		.uleb128 0x49
 1447 0107 13       		.uleb128 0x13
 1448 0108 02       		.uleb128 0x2
 1449 0109 17       		.uleb128 0x17
 1450 010a 00       		.byte	0
 1451 010b 00       		.byte	0
 1452 010c 12       		.uleb128 0x12
 1453 010d 34       		.uleb128 0x34
 1454 010e 00       		.byte	0
 1455 010f 03       		.uleb128 0x3
 1456 0110 0E       		.uleb128 0xe
 1457 0111 3A       		.uleb128 0x3a
 1458 0112 0B       		.uleb128 0xb
 1459 0113 3B       		.uleb128 0x3b
 1460 0114 05       		.uleb128 0x5
 1461 0115 49       		.uleb128 0x49
 1462 0116 13       		.uleb128 0x13
 1463 0117 02       		.uleb128 0x2
 1464 0118 17       		.uleb128 0x17
 1465 0119 00       		.byte	0
 1466 011a 00       		.byte	0
 1467 011b 13       		.uleb128 0x13
 1468 011c 0F       		.uleb128 0xf
 1469 011d 00       		.byte	0
 1470 011e 0B       		.uleb128 0xb
 1471 011f 0B       		.uleb128 0xb
 1472 0120 49       		.uleb128 0x49
 1473 0121 13       		.uleb128 0x13
 1474 0122 00       		.byte	0
 1475 0123 00       		.byte	0
 1476 0124 14       		.uleb128 0x14
 1477 0125 26       		.uleb128 0x26
 1478 0126 00       		.byte	0
 1479 0127 49       		.uleb128 0x49
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccUFJMnK.s 			page 55


 1480 0128 13       		.uleb128 0x13
 1481 0129 00       		.byte	0
 1482 012a 00       		.byte	0
 1483 012b 15       		.uleb128 0x15
 1484 012c 2E       		.uleb128 0x2e
 1485 012d 01       		.byte	0x1
 1486 012e 3F       		.uleb128 0x3f
 1487 012f 19       		.uleb128 0x19
 1488 0130 03       		.uleb128 0x3
 1489 0131 0E       		.uleb128 0xe
 1490 0132 3A       		.uleb128 0x3a
 1491 0133 0B       		.uleb128 0xb
 1492 0134 3B       		.uleb128 0x3b
 1493 0135 05       		.uleb128 0x5
 1494 0136 27       		.uleb128 0x27
 1495 0137 19       		.uleb128 0x19
 1496 0138 49       		.uleb128 0x49
 1497 0139 13       		.uleb128 0x13
 1498 013a 11       		.uleb128 0x11
 1499 013b 01       		.uleb128 0x1
 1500 013c 12       		.uleb128 0x12
 1501 013d 06       		.uleb128 0x6
 1502 013e 40       		.uleb128 0x40
 1503 013f 18       		.uleb128 0x18
 1504 0140 9742     		.uleb128 0x2117
 1505 0142 19       		.uleb128 0x19
 1506 0143 01       		.uleb128 0x1
 1507 0144 13       		.uleb128 0x13
 1508 0145 00       		.byte	0
 1509 0146 00       		.byte	0
 1510 0147 16       		.uleb128 0x16
 1511 0148 0B       		.uleb128 0xb
 1512 0149 01       		.byte	0x1
 1513 014a 11       		.uleb128 0x11
 1514 014b 01       		.uleb128 0x1
 1515 014c 12       		.uleb128 0x12
 1516 014d 06       		.uleb128 0x6
 1517 014e 00       		.byte	0
 1518 014f 00       		.byte	0
 1519 0150 17       		.uleb128 0x17
 1520 0151 34       		.uleb128 0x34
 1521 0152 00       		.byte	0
 1522 0153 03       		.uleb128 0x3
 1523 0154 0E       		.uleb128 0xe
 1524 0155 3A       		.uleb128 0x3a
 1525 0156 0B       		.uleb128 0xb
 1526 0157 3B       		.uleb128 0x3b
 1527 0158 05       		.uleb128 0x5
 1528 0159 49       		.uleb128 0x49
 1529 015a 13       		.uleb128 0x13
 1530 015b 02       		.uleb128 0x2
 1531 015c 18       		.uleb128 0x18
 1532 015d 00       		.byte	0
 1533 015e 00       		.byte	0
 1534 015f 18       		.uleb128 0x18
 1535 0160 34       		.uleb128 0x34
 1536 0161 00       		.byte	0
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccUFJMnK.s 			page 56


 1537 0162 03       		.uleb128 0x3
 1538 0163 0E       		.uleb128 0xe
 1539 0164 3A       		.uleb128 0x3a
 1540 0165 0B       		.uleb128 0xb
 1541 0166 3B       		.uleb128 0x3b
 1542 0167 0B       		.uleb128 0xb
 1543 0168 49       		.uleb128 0x49
 1544 0169 13       		.uleb128 0x13
 1545 016a 3F       		.uleb128 0x3f
 1546 016b 19       		.uleb128 0x19
 1547 016c 02       		.uleb128 0x2
 1548 016d 18       		.uleb128 0x18
 1549 016e 00       		.byte	0
 1550 016f 00       		.byte	0
 1551 0170 19       		.uleb128 0x19
 1552 0171 2E       		.uleb128 0x2e
 1553 0172 00       		.byte	0
 1554 0173 3F       		.uleb128 0x3f
 1555 0174 19       		.uleb128 0x19
 1556 0175 03       		.uleb128 0x3
 1557 0176 0E       		.uleb128 0xe
 1558 0177 3A       		.uleb128 0x3a
 1559 0178 0B       		.uleb128 0xb
 1560 0179 3B       		.uleb128 0x3b
 1561 017a 0B       		.uleb128 0xb
 1562 017b 27       		.uleb128 0x27
 1563 017c 19       		.uleb128 0x19
 1564 017d 49       		.uleb128 0x49
 1565 017e 13       		.uleb128 0x13
 1566 017f 3C       		.uleb128 0x3c
 1567 0180 19       		.uleb128 0x19
 1568 0181 00       		.byte	0
 1569 0182 00       		.byte	0
 1570 0183 1A       		.uleb128 0x1a
 1571 0184 2E       		.uleb128 0x2e
 1572 0185 01       		.byte	0x1
 1573 0186 3F       		.uleb128 0x3f
 1574 0187 19       		.uleb128 0x19
 1575 0188 03       		.uleb128 0x3
 1576 0189 0E       		.uleb128 0xe
 1577 018a 3A       		.uleb128 0x3a
 1578 018b 0B       		.uleb128 0xb
 1579 018c 3B       		.uleb128 0x3b
 1580 018d 0B       		.uleb128 0xb
 1581 018e 27       		.uleb128 0x27
 1582 018f 19       		.uleb128 0x19
 1583 0190 3C       		.uleb128 0x3c
 1584 0191 19       		.uleb128 0x19
 1585 0192 01       		.uleb128 0x1
 1586 0193 13       		.uleb128 0x13
 1587 0194 00       		.byte	0
 1588 0195 00       		.byte	0
 1589 0196 1B       		.uleb128 0x1b
 1590 0197 05       		.uleb128 0x5
 1591 0198 00       		.byte	0
 1592 0199 49       		.uleb128 0x49
 1593 019a 13       		.uleb128 0x13
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccUFJMnK.s 			page 57


 1594 019b 00       		.byte	0
 1595 019c 00       		.byte	0
 1596 019d 1C       		.uleb128 0x1c
 1597 019e 2E       		.uleb128 0x2e
 1598 019f 00       		.byte	0
 1599 01a0 3F       		.uleb128 0x3f
 1600 01a1 19       		.uleb128 0x19
 1601 01a2 03       		.uleb128 0x3
 1602 01a3 0E       		.uleb128 0xe
 1603 01a4 3A       		.uleb128 0x3a
 1604 01a5 0B       		.uleb128 0xb
 1605 01a6 3B       		.uleb128 0x3b
 1606 01a7 0B       		.uleb128 0xb
 1607 01a8 27       		.uleb128 0x27
 1608 01a9 19       		.uleb128 0x19
 1609 01aa 3C       		.uleb128 0x3c
 1610 01ab 19       		.uleb128 0x19
 1611 01ac 00       		.byte	0
 1612 01ad 00       		.byte	0
 1613 01ae 00       		.byte	0
 1614              		.section	.debug_loc,"",%progbits
 1615              	.Ldebug_loc0:
 1616              	.LLST0:
 1617 0000 08000000 		.4byte	.LVL1
 1618 0004 1E000000 		.4byte	.LVL4
 1619 0008 0100     		.2byte	0x1
 1620 000a 54       		.byte	0x54
 1621 000b 00000000 		.4byte	0
 1622 000f 00000000 		.4byte	0
 1623              	.LLST1:
 1624 0013 08000000 		.4byte	.LVL8
 1625 0017 1C000000 		.4byte	.LVL11
 1626 001b 0100     		.2byte	0x1
 1627 001d 54       		.byte	0x54
 1628 001e 00000000 		.4byte	0
 1629 0022 00000000 		.4byte	0
 1630              	.LLST2:
 1631 0026 00000000 		.4byte	.LVL16
 1632 002a 0C000000 		.4byte	.LVL18
 1633 002e 0100     		.2byte	0x1
 1634 0030 50       		.byte	0x50
 1635 0031 0C000000 		.4byte	.LVL18
 1636 0035 16000000 		.4byte	.LVL22
 1637 0039 0100     		.2byte	0x1
 1638 003b 55       		.byte	0x55
 1639 003c 16000000 		.4byte	.LVL22
 1640 0040 1A000000 		.4byte	.LVL23
 1641 0044 0100     		.2byte	0x1
 1642 0046 50       		.byte	0x50
 1643 0047 1A000000 		.4byte	.LVL23
 1644 004b 20000000 		.4byte	.LVL24
 1645 004f 0100     		.2byte	0x1
 1646 0051 55       		.byte	0x55
 1647 0052 20000000 		.4byte	.LVL24
 1648 0056 28000000 		.4byte	.LFE12
 1649 005a 0400     		.2byte	0x4
 1650 005c F3       		.byte	0xf3
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccUFJMnK.s 			page 58


 1651 005d 01       		.uleb128 0x1
 1652 005e 50       		.byte	0x50
 1653 005f 9F       		.byte	0x9f
 1654 0060 00000000 		.4byte	0
 1655 0064 00000000 		.4byte	0
 1656              	.LLST3:
 1657 0068 02000000 		.4byte	.LVL17
 1658 006c 0C000000 		.4byte	.LVL18
 1659 0070 0200     		.2byte	0x2
 1660 0072 30       		.byte	0x30
 1661 0073 9F       		.byte	0x9f
 1662 0074 0C000000 		.4byte	.LVL18
 1663 0078 12000000 		.4byte	.LVL20
 1664 007c 0100     		.2byte	0x1
 1665 007e 54       		.byte	0x54
 1666 007f 14000000 		.4byte	.LVL21
 1667 0083 16000000 		.4byte	.LVL22
 1668 0087 0100     		.2byte	0x1
 1669 0089 54       		.byte	0x54
 1670 008a 16000000 		.4byte	.LVL22
 1671 008e 1A000000 		.4byte	.LVL23
 1672 0092 0200     		.2byte	0x2
 1673 0094 30       		.byte	0x30
 1674 0095 9F       		.byte	0x9f
 1675 0096 1A000000 		.4byte	.LVL23
 1676 009a 20000000 		.4byte	.LVL24
 1677 009e 0100     		.2byte	0x1
 1678 00a0 54       		.byte	0x54
 1679 00a1 00000000 		.4byte	0
 1680 00a5 00000000 		.4byte	0
 1681              	.LLST4:
 1682 00a9 00000000 		.4byte	.LVL25
 1683 00ad 0C000000 		.4byte	.LVL27
 1684 00b1 0100     		.2byte	0x1
 1685 00b3 50       		.byte	0x50
 1686 00b4 0C000000 		.4byte	.LVL27
 1687 00b8 18000000 		.4byte	.LVL31
 1688 00bc 0100     		.2byte	0x1
 1689 00be 56       		.byte	0x56
 1690 00bf 18000000 		.4byte	.LVL31
 1691 00c3 1E000000 		.4byte	.LVL32
 1692 00c7 0100     		.2byte	0x1
 1693 00c9 50       		.byte	0x50
 1694 00ca 1E000000 		.4byte	.LVL32
 1695 00ce 22000000 		.4byte	.LVL33
 1696 00d2 0100     		.2byte	0x1
 1697 00d4 56       		.byte	0x56
 1698 00d5 22000000 		.4byte	.LVL33
 1699 00d9 28000000 		.4byte	.LFE13
 1700 00dd 0400     		.2byte	0x4
 1701 00df F3       		.byte	0xf3
 1702 00e0 01       		.uleb128 0x1
 1703 00e1 50       		.byte	0x50
 1704 00e2 9F       		.byte	0x9f
 1705 00e3 00000000 		.4byte	0
 1706 00e7 00000000 		.4byte	0
 1707              	.LLST5:
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccUFJMnK.s 			page 59


 1708 00eb 00000000 		.4byte	.LVL25
 1709 00ef 0C000000 		.4byte	.LVL27
 1710 00f3 0100     		.2byte	0x1
 1711 00f5 51       		.byte	0x51
 1712 00f6 0C000000 		.4byte	.LVL27
 1713 00fa 18000000 		.4byte	.LVL31
 1714 00fe 0400     		.2byte	0x4
 1715 0100 F3       		.byte	0xf3
 1716 0101 01       		.uleb128 0x1
 1717 0102 51       		.byte	0x51
 1718 0103 9F       		.byte	0x9f
 1719 0104 18000000 		.4byte	.LVL31
 1720 0108 1E000000 		.4byte	.LVL32
 1721 010c 0100     		.2byte	0x1
 1722 010e 51       		.byte	0x51
 1723 010f 1E000000 		.4byte	.LVL32
 1724 0113 28000000 		.4byte	.LFE13
 1725 0117 0400     		.2byte	0x4
 1726 0119 F3       		.byte	0xf3
 1727 011a 01       		.uleb128 0x1
 1728 011b 51       		.byte	0x51
 1729 011c 9F       		.byte	0x9f
 1730 011d 00000000 		.4byte	0
 1731 0121 00000000 		.4byte	0
 1732              	.LLST6:
 1733 0125 02000000 		.4byte	.LVL26
 1734 0129 0C000000 		.4byte	.LVL27
 1735 012d 0200     		.2byte	0x2
 1736 012f 30       		.byte	0x30
 1737 0130 9F       		.byte	0x9f
 1738 0131 0C000000 		.4byte	.LVL27
 1739 0135 14000000 		.4byte	.LVL29
 1740 0139 0100     		.2byte	0x1
 1741 013b 54       		.byte	0x54
 1742 013c 16000000 		.4byte	.LVL30
 1743 0140 18000000 		.4byte	.LVL31
 1744 0144 0100     		.2byte	0x1
 1745 0146 54       		.byte	0x54
 1746 0147 18000000 		.4byte	.LVL31
 1747 014b 1E000000 		.4byte	.LVL32
 1748 014f 0200     		.2byte	0x2
 1749 0151 30       		.byte	0x30
 1750 0152 9F       		.byte	0x9f
 1751 0153 1E000000 		.4byte	.LVL32
 1752 0157 22000000 		.4byte	.LVL33
 1753 015b 0100     		.2byte	0x1
 1754 015d 54       		.byte	0x54
 1755 015e 00000000 		.4byte	0
 1756 0162 00000000 		.4byte	0
 1757              	.LLST7:
 1758 0166 00000000 		.4byte	.LVL34
 1759 016a 0D000000 		.4byte	.LVL35-1
 1760 016e 0100     		.2byte	0x1
 1761 0170 50       		.byte	0x50
 1762 0171 0D000000 		.4byte	.LVL35-1
 1763 0175 20000000 		.4byte	.LFE14
 1764 0179 0400     		.2byte	0x4
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccUFJMnK.s 			page 60


 1765 017b F3       		.byte	0xf3
 1766 017c 01       		.uleb128 0x1
 1767 017d 50       		.byte	0x50
 1768 017e 9F       		.byte	0x9f
 1769 017f 00000000 		.4byte	0
 1770 0183 00000000 		.4byte	0
 1771              	.LLST8:
 1772 0187 06000000 		.4byte	.LVL38
 1773 018b 0E000000 		.4byte	.LVL39
 1774 018f 0100     		.2byte	0x1
 1775 0191 53       		.byte	0x53
 1776 0192 12000000 		.4byte	.LVL40
 1777 0196 16000000 		.4byte	.LVL41
 1778 019a 0100     		.2byte	0x1
 1779 019c 53       		.byte	0x53
 1780 019d 18000000 		.4byte	.LVL42
 1781 01a1 20000000 		.4byte	.LFE15
 1782 01a5 0100     		.2byte	0x1
 1783 01a7 50       		.byte	0x50
 1784 01a8 00000000 		.4byte	0
 1785 01ac 00000000 		.4byte	0
 1786              	.LLST9:
 1787 01b0 06000000 		.4byte	.LVL43
 1788 01b4 1B000000 		.4byte	.LVL44-1
 1789 01b8 0100     		.2byte	0x1
 1790 01ba 50       		.byte	0x50
 1791 01bb 00000000 		.4byte	0
 1792 01bf 00000000 		.4byte	0
 1793              	.LLST10:
 1794 01c3 00000000 		.4byte	.LVL45
 1795 01c7 3C000000 		.4byte	.LVL50
 1796 01cb 0100     		.2byte	0x1
 1797 01cd 50       		.byte	0x50
 1798 01ce 3C000000 		.4byte	.LVL50
 1799 01d2 5C000000 		.4byte	.LFE17
 1800 01d6 0400     		.2byte	0x4
 1801 01d8 F3       		.byte	0xf3
 1802 01d9 01       		.uleb128 0x1
 1803 01da 50       		.byte	0x50
 1804 01db 9F       		.byte	0x9f
 1805 01dc 00000000 		.4byte	0
 1806 01e0 00000000 		.4byte	0
 1807              	.LLST11:
 1808 01e4 26000000 		.4byte	.LVL46
 1809 01e8 2A000000 		.4byte	.LVL47
 1810 01ec 0100     		.2byte	0x1
 1811 01ee 53       		.byte	0x53
 1812 01ef 36000000 		.4byte	.LVL48
 1813 01f3 3A000000 		.4byte	.LVL49
 1814 01f7 0100     		.2byte	0x1
 1815 01f9 53       		.byte	0x53
 1816 01fa 00000000 		.4byte	0
 1817 01fe 00000000 		.4byte	0
 1818              		.section	.debug_aranges,"",%progbits
 1819 0000 9C000000 		.4byte	0x9c
 1820 0004 0200     		.2byte	0x2
 1821 0006 00000000 		.4byte	.Ldebug_info0
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccUFJMnK.s 			page 61


 1822 000a 04       		.byte	0x4
 1823 000b 00       		.byte	0
 1824 000c 0000     		.2byte	0
 1825 000e 0000     		.2byte	0
 1826 0010 00000000 		.4byte	.LFB3
 1827 0014 20000000 		.4byte	.LFE3-.LFB3
 1828 0018 00000000 		.4byte	.LFB4
 1829 001c 24000000 		.4byte	.LFE4-.LFB4
 1830 0020 00000000 		.4byte	.LFB2
 1831 0024 20000000 		.4byte	.LFE2-.LFB2
 1832 0028 00000000 		.4byte	.LFB5
 1833 002c 24000000 		.4byte	.LFE5-.LFB5
 1834 0030 00000000 		.4byte	.LFB6
 1835 0034 04000000 		.4byte	.LFE6-.LFB6
 1836 0038 00000000 		.4byte	.LFB7
 1837 003c 02000000 		.4byte	.LFE7-.LFB7
 1838 0040 00000000 		.4byte	.LFB8
 1839 0044 0C000000 		.4byte	.LFE8-.LFB8
 1840 0048 00000000 		.4byte	.LFB9
 1841 004c 18000000 		.4byte	.LFE9-.LFB9
 1842 0050 00000000 		.4byte	.LFB10
 1843 0054 0C000000 		.4byte	.LFE10-.LFB10
 1844 0058 00000000 		.4byte	.LFB11
 1845 005c 18000000 		.4byte	.LFE11-.LFB11
 1846 0060 00000000 		.4byte	.LFB12
 1847 0064 28000000 		.4byte	.LFE12-.LFB12
 1848 0068 00000000 		.4byte	.LFB13
 1849 006c 28000000 		.4byte	.LFE13-.LFB13
 1850 0070 00000000 		.4byte	.LFB14
 1851 0074 20000000 		.4byte	.LFE14-.LFB14
 1852 0078 00000000 		.4byte	.LFB15
 1853 007c 20000000 		.4byte	.LFE15-.LFB15
 1854 0080 00000000 		.4byte	.LFB16
 1855 0084 24000000 		.4byte	.LFE16-.LFB16
 1856 0088 00000000 		.4byte	.LFB17
 1857 008c 5C000000 		.4byte	.LFE17-.LFB17
 1858 0090 00000000 		.4byte	.LFB18
 1859 0094 02000000 		.4byte	.LFE18-.LFB18
 1860 0098 00000000 		.4byte	0
 1861 009c 00000000 		.4byte	0
 1862              		.section	.debug_ranges,"",%progbits
 1863              	.Ldebug_ranges0:
 1864 0000 00000000 		.4byte	.LFB3
 1865 0004 20000000 		.4byte	.LFE3
 1866 0008 00000000 		.4byte	.LFB4
 1867 000c 24000000 		.4byte	.LFE4
 1868 0010 00000000 		.4byte	.LFB2
 1869 0014 20000000 		.4byte	.LFE2
 1870 0018 00000000 		.4byte	.LFB5
 1871 001c 24000000 		.4byte	.LFE5
 1872 0020 00000000 		.4byte	.LFB6
 1873 0024 04000000 		.4byte	.LFE6
 1874 0028 00000000 		.4byte	.LFB7
 1875 002c 02000000 		.4byte	.LFE7
 1876 0030 00000000 		.4byte	.LFB8
 1877 0034 0C000000 		.4byte	.LFE8
 1878 0038 00000000 		.4byte	.LFB9
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccUFJMnK.s 			page 62


 1879 003c 18000000 		.4byte	.LFE9
 1880 0040 00000000 		.4byte	.LFB10
 1881 0044 0C000000 		.4byte	.LFE10
 1882 0048 00000000 		.4byte	.LFB11
 1883 004c 18000000 		.4byte	.LFE11
 1884 0050 00000000 		.4byte	.LFB12
 1885 0054 28000000 		.4byte	.LFE12
 1886 0058 00000000 		.4byte	.LFB13
 1887 005c 28000000 		.4byte	.LFE13
 1888 0060 00000000 		.4byte	.LFB14
 1889 0064 20000000 		.4byte	.LFE14
 1890 0068 00000000 		.4byte	.LFB15
 1891 006c 20000000 		.4byte	.LFE15
 1892 0070 00000000 		.4byte	.LFB16
 1893 0074 24000000 		.4byte	.LFE16
 1894 0078 00000000 		.4byte	.LFB17
 1895 007c 5C000000 		.4byte	.LFE17
 1896 0080 00000000 		.4byte	.LFB18
 1897 0084 02000000 		.4byte	.LFE18
 1898 0088 00000000 		.4byte	0
 1899 008c 00000000 		.4byte	0
 1900              		.section	.debug_line,"",%progbits
 1901              	.Ldebug_line0:
 1902 0000 07020000 		.section	.debug_str,"MS",%progbits,1
 1902      02006500 
 1902      00000201 
 1902      FB0E0D00 
 1902      01010101 
 1903              	.LASF6:
 1904 0000 6C6F6E67 		.ascii	"long long int\000"
 1904      206C6F6E 
 1904      6720696E 
 1904      7400
 1905              	.LASF50:
 1906 000e 55415254 		.ascii	"UART_1_Init\000"
 1906      5F315F49 
 1906      6E697400 
 1907              	.LASF19:
 1908 001a 55415254 		.ascii	"UART_1_Start\000"
 1908      5F315F53 
 1908      74617274 
 1908      00
 1909              	.LASF22:
 1910 0027 55415254 		.ascii	"UART_1_WriteControlRegister\000"
 1910      5F315F57 
 1910      72697465 
 1910      436F6E74 
 1910      726F6C52 
 1911              	.LASF42:
 1912 0043 74785065 		.ascii	"txPeriod\000"
 1912      72696F64 
 1912      00
 1913              	.LASF41:
 1914 004c 746D7053 		.ascii	"tmpStat\000"
 1914      74617400 
 1915              	.LASF3:
 1916 0054 73686F72 		.ascii	"short unsigned int\000"
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccUFJMnK.s 			page 63


 1916      7420756E 
 1916      7369676E 
 1916      65642069 
 1916      6E7400
 1917              	.LASF45:
 1918 0067 55415254 		.ascii	"UART_1_IntClock_StartEx\000"
 1918      5F315F49 
 1918      6E74436C 
 1918      6F636B5F 
 1918      53746172 
 1919              	.LASF43:
 1920 007f 55415254 		.ascii	"UART_1_SetTxAddressMode\000"
 1920      5F315F53 
 1920      65745478 
 1920      41646472 
 1920      6573734D 
 1921              	.LASF29:
 1922 0097 55415254 		.ascii	"UART_1_ReadTxStatus\000"
 1922      5F315F52 
 1922      65616454 
 1922      78537461 
 1922      74757300 
 1923              	.LASF32:
 1924 00ab 73747269 		.ascii	"string\000"
 1924      6E6700
 1925              	.LASF12:
 1926 00b2 666C6F61 		.ascii	"float\000"
 1926      7400
 1927              	.LASF7:
 1928 00b8 6C6F6E67 		.ascii	"long long unsigned int\000"
 1928      206C6F6E 
 1928      6720756E 
 1928      7369676E 
 1928      65642069 
 1929              	.LASF44:
 1930 00cf 61646472 		.ascii	"addressMode\000"
 1930      6573734D 
 1930      6F646500 
 1931              	.LASF16:
 1932 00db 72656738 		.ascii	"reg8\000"
 1932      00
 1933              	.LASF28:
 1934 00e0 55415254 		.ascii	"UART_1_ReadControlRegister\000"
 1934      5F315F52 
 1934      65616443 
 1934      6F6E7472 
 1934      6F6C5265 
 1935              	.LASF20:
 1936 00fb 55415254 		.ascii	"UART_1_Stop\000"
 1936      5F315F53 
 1936      746F7000 
 1937              	.LASF5:
 1938 0107 6C6F6E67 		.ascii	"long unsigned int\000"
 1938      20756E73 
 1938      69676E65 
 1938      6420696E 
 1938      7400
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccUFJMnK.s 			page 64


 1939              	.LASF9:
 1940 0119 75696E74 		.ascii	"uint8\000"
 1940      3800
 1941              	.LASF24:
 1942 011f 636F6E74 		.ascii	"control\000"
 1942      726F6C00 
 1943              	.LASF52:
 1944 0127 55415254 		.ascii	"UART_1_initVar\000"
 1944      5F315F69 
 1944      6E697456 
 1944      617200
 1945              	.LASF35:
 1946 0136 62797465 		.ascii	"byteCount\000"
 1946      436F756E 
 1946      7400
 1947              	.LASF21:
 1948 0140 656E6162 		.ascii	"enableInterrupts\000"
 1948      6C65496E 
 1948      74657272 
 1948      75707473 
 1948      00
 1949              	.LASF1:
 1950 0151 756E7369 		.ascii	"unsigned char\000"
 1950      676E6564 
 1950      20636861 
 1950      7200
 1951              	.LASF13:
 1952 015f 646F7562 		.ascii	"double\000"
 1952      6C6500
 1953              	.LASF25:
 1954 0166 696E7453 		.ascii	"intSrc\000"
 1954      726300
 1955              	.LASF2:
 1956 016d 73686F72 		.ascii	"short int\000"
 1956      7420696E 
 1956      7400
 1957              	.LASF10:
 1958 0177 75696E74 		.ascii	"uint16\000"
 1958      313600
 1959              	.LASF11:
 1960 017e 75696E74 		.ascii	"uint32\000"
 1960      333200
 1961              	.LASF53:
 1962 0185 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1962      74657243 
 1962      72697469 
 1962      63616C53 
 1962      65637469 
 1963              	.LASF30:
 1964 019c 55415254 		.ascii	"UART_1_PutChar\000"
 1964      5F315F50 
 1964      75744368 
 1964      617200
 1965              	.LASF8:
 1966 01ab 756E7369 		.ascii	"unsigned int\000"
 1966      676E6564 
 1966      20696E74 
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccUFJMnK.s 			page 65


 1966      00
 1967              	.LASF51:
 1968 01b8 55415254 		.ascii	"UART_1_GetTxBufferSize\000"
 1968      5F315F47 
 1968      65745478 
 1968      42756666 
 1968      65725369 
 1969              	.LASF46:
 1970 01cf 43794578 		.ascii	"CyExitCriticalSection\000"
 1970      69744372 
 1970      69746963 
 1970      616C5365 
 1970      6374696F 
 1971              	.LASF36:
 1972 01e5 55415254 		.ascii	"UART_1_PutCRLF\000"
 1972      5F315F50 
 1972      75744352 
 1972      4C4600
 1973              	.LASF33:
 1974 01f4 62756649 		.ascii	"bufIndex\000"
 1974      6E646578 
 1974      00
 1975              	.LASF39:
 1976 01fd 55415254 		.ascii	"UART_1_SendBreak\000"
 1976      5F315F53 
 1976      656E6442 
 1976      7265616B 
 1976      00
 1977              	.LASF34:
 1978 020e 55415254 		.ascii	"UART_1_PutArray\000"
 1978      5F315F50 
 1978      75744172 
 1978      72617900 
 1979              	.LASF17:
 1980 021e 73697A65 		.ascii	"sizetype\000"
 1980      74797065 
 1980      00
 1981              	.LASF14:
 1982 0227 63686172 		.ascii	"char8\000"
 1982      3800
 1983              	.LASF54:
 1984 022d 55415254 		.ascii	"UART_1_IntClock_Stop\000"
 1984      5F315F49 
 1984      6E74436C 
 1984      6F636B5F 
 1984      53746F70 
 1985              	.LASF27:
 1986 0242 74784461 		.ascii	"txDataByte\000"
 1986      74614279 
 1986      746500
 1987              	.LASF15:
 1988 024d 63686172 		.ascii	"char\000"
 1988      00
 1989              	.LASF47:
 1990 0252 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1990      4320342E 
 1990      392E3320 
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccUFJMnK.s 			page 66


 1990      32303135 
 1990      30333033 
 1991 0285 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 1991      20726576 
 1991      6973696F 
 1991      6E203232 
 1991      31323230 
 1992 02b8 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1992      66756E63 
 1992      74696F6E 
 1992      2D736563 
 1992      74696F6E 
 1993              	.LASF40:
 1994 02e0 7265744D 		.ascii	"retMode\000"
 1994      6F646500 
 1995              	.LASF26:
 1996 02e8 55415254 		.ascii	"UART_1_WriteTxData\000"
 1996      5F315F57 
 1996      72697465 
 1996      54784461 
 1996      746100
 1997              	.LASF38:
 1998 02fb 55415254 		.ascii	"UART_1_ClearTxBuffer\000"
 1998      5F315F43 
 1998      6C656172 
 1998      54784275 
 1998      66666572 
 1999              	.LASF49:
 2000 0310 433A5C55 		.ascii	"C:\\Users\\Alexandre\\Documents\\GitHub\\CoRo_PW_PS"
 2000      73657273 
 2000      5C416C65 
 2000      78616E64 
 2000      72655C44 
 2001 033e 4F435C50 		.ascii	"OC\\PSOC_CapSense_2_BLE\\PSOC_CapSense_2_BLE.cydsn\000"
 2001      534F435F 
 2001      43617053 
 2001      656E7365 
 2001      5F325F42 
 2002              	.LASF4:
 2003 036f 6C6F6E67 		.ascii	"long int\000"
 2003      20696E74 
 2003      00
 2004              	.LASF23:
 2005 0378 55415254 		.ascii	"UART_1_SetTxInterruptMode\000"
 2005      5F315F53 
 2005      65745478 
 2005      496E7465 
 2005      72727570 
 2006              	.LASF18:
 2007 0392 55415254 		.ascii	"UART_1_Enable\000"
 2007      5F315F45 
 2007      6E61626C 
 2007      6500
 2008              	.LASF48:
 2009 03a0 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\UART_1.c\000"
 2009      6E657261 
 2009      7465645F 
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\ccUFJMnK.s 			page 67


 2009      536F7572 
 2009      63655C50 
 2010              	.LASF0:
 2011 03c2 7369676E 		.ascii	"signed char\000"
 2011      65642063 
 2011      68617200 
 2012              	.LASF31:
 2013 03ce 55415254 		.ascii	"UART_1_PutString\000"
 2013      5F315F50 
 2013      75745374 
 2013      72696E67 
 2013      00
 2014              	.LASF37:
 2015 03df 73697A65 		.ascii	"size\000"
 2015      00
 2016              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
