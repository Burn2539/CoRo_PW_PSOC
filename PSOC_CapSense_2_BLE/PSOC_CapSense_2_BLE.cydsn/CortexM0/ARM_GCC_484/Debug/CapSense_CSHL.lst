ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CapSense_CSHL.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.CapSense_BaseInit,"ax",%progbits
  18              		.align	2
  19              		.global	CapSense_BaseInit
  20              		.code	16
  21              		.thumb_func
  22              		.type	CapSense_BaseInit, %function
  23              	CapSense_BaseInit:
  24              	.LFB35:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\CapSense_CSHL.c"
   1:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * File Name: CapSense_CSHL.c
   3:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Version 2.20
   4:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
   5:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Description:
   6:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CSD component.
   8:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
   9:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Note:
  10:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
  11:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Copyright 2014, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  18:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_CSHL.h"
  19:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_PVT.h"
  20:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  21:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /* SmartSense functions */
  22:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  23:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     extern void CapSense_UpdateThresholds(uint32 sensor);
  24:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  25:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  26:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /* Storage of filters data */
  27:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
  28:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) )
  29:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  30:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  31:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData2[CapSense_TOTAL_SENSOR_COUNT];
  32:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 2


  33:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #elif ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER))   || \
  34:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER))   || \
  35:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
  36:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))   || \
  37:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)) )
  38:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
  39:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  40:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
  41:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         *    (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) )
  42:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         */
  43:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  44:.\Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint16 CapSense_sensorRaw[CapSense_TOTAL_SENSOR_COUNT];
  45:.\Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint8 CapSense_sensorEnableMask[CapSense_TOTAL_SENSOR_MASK];
  46:.\Generated_Source\PSoC4/CapSense_CSHL.c **** extern const uint8 CapSense_widgetNumber[CapSense_TOTAL_SENSOR_COUNT];
  47:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  48:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
  49:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	extern uint32 CapSense_widgetResolution[CapSense_RESOLUTIONS_TBL_SIZE];	
  50:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
  51:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  52:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_sensorBaseline[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  53:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorBaselineLow[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  54:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_sensorSignal[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  55:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorOnMask[CapSense_TOTAL_SENSOR_MASK] = {0u};
  56:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  57:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineResetCnt[CapSense_TOTAL_SENSOR_COUNT];
  58:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineReset[CapSense_TOTAL_SENSOR_COUNT] = {
  59:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     5u, 5u, 5u, 5u, 5u, 
  60:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  61:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  62:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  63:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  64:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  65:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	extern CapSense_CONFIG_TYPE_P4_v2_20 CapSense_config;
  66:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  67:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  68:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
  69:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
  70:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
  71:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  72:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /* Generated by Customizer */
  73:.\Generated_Source\PSoC4/CapSense_CSHL.c **** const uint16 CapSense_fingerThreshold[] = {
  74:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     100u, 
  75:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  76:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  77:.\Generated_Source\PSoC4/CapSense_CSHL.c **** const uint16 CapSense_noiseThreshold[] = {
  78:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     30u, 
  79:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  80:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  81:.\Generated_Source\PSoC4/CapSense_CSHL.c **** const uint16 CapSense_hysteresis[] = {
  82:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, 
  83:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  84:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  85:.\Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_debounce[] = {
  86:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, 
  87:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  88:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  89:.\Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_rawDataIndex[] = {
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 3


  90:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, /* LinearSlider0__LS */
  91:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  92:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  93:.\Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_numberOfSensors[] = {
  94:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     5u, /* LinearSlider0__LS */
  95:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  96:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  97:.\Generated_Source\PSoC4/CapSense_CSHL.c **** static const uint16 CapSense_centroidMult[] = {
  98:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     6400u, 
  99:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
 100:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 101:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 102:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 103:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 104:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 105:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_BaseInit
 106:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 107:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 108:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 109:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an 
 110:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value. 
 111:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Resets to zero CapSense_sensorBaselineLow[sensor] and 
 112:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[sensor] array element.
 113:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_rawFilterData2[sensor] and 
 114:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[sensor] array element with an 
 115:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value if the raw data filter is enabled.
 116:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 117:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 118:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 119:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 120:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 121:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 122:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 123:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 124:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store the baseline value.
 125:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store the fraction byte of 
 126:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the baseline value.
 127:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store a difference between 
 128:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and the previous value of the baseline.
 129:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store a previous sample of 
 130:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
 131:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before a previous sample
 132:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  of the enabled raw data filter. Required only for median or average filters.
 133:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 134:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 135:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 136:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 137:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 138:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_BaseInit(uint32 sensor)
 139:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
  26              		.loc 1 139 0
  27              		.cfi_startproc
  28              	.LVL0:
 140:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((CapSense_TOTAL_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || \
 141:.\Generated_Source\PSoC4/CapSense_CSHL.c ****          (CapSense_TOTAL_GENERICS_COUNT))
 142:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 widget = CapSense_widgetNumber[sensor];
 143:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* ((CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 4


 144:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 145:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)
 146:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 debounceIndex;
 147:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) */
 148:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 149:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 150:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 151:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 152:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 153:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 154:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 155:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline */
 156:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaseline[sensor] = CapSense_sensorRaw[sensor];
  29              		.loc 1 156 0
  30 0000 4300     		lsl	r3, r0, #1
  31 0002 054A     		ldr	r2, .L2
  32 0004 995A     		ldrh	r1, [r3, r2]
  33 0006 054A     		ldr	r2, .L2+4
  34 0008 9952     		strh	r1, [r3, r2]
 157:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaselineLow[sensor] = 0u;
  35              		.loc 1 157 0
  36 000a 1018     		add	r0, r2, r0
  37              	.LVL1:
  38 000c 0021     		mov	r1, #0
  39 000e 0173     		strb	r1, [r0, #12]
 158:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = 0u;
  40              		.loc 1 158 0
  41 0010 D318     		add	r3, r2, r3
  42 0012 9982     		strh	r1, [r3, #20]
 159:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
 160:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 161:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 162:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) ||\
 163:.\Generated_Source\PSoC4/CapSense_CSHL.c ****          (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)))
 164:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 165:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
 166:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_sensorRaw[sensor];
 167:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 168:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #elif ((CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER) ||\
 169:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER) ||\
 170:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER) ||\
 171:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER) ||\
 172:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
 173:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             
 174:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
 175:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 176:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 177:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* No Raw filters */
 178:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* ((CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
 179:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             *   (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER))
 180:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             */
 181:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 182:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 183:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 184:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 185:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 186:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 5


  43              		.loc 1 186 0
  44              		@ sp needed
  45 0014 7047     		bx	lr
  46              	.L3:
  47 0016 C046     		.align	2
  48              	.L2:
  49 0018 00000000 		.word	CapSense_sensorRaw
  50 001c 00000000 		.word	.LANCHOR0
  51              		.cfi_endproc
  52              	.LFE35:
  53              		.size	CapSense_BaseInit, .-CapSense_BaseInit
  54              		.section	.text.CapSense_InitializeSensorBaseline,"ax",%progbits
  55              		.align	2
  56              		.global	CapSense_InitializeSensorBaseline
  57              		.code	16
  58              		.thumb_func
  59              		.type	CapSense_InitializeSensorBaseline, %function
  60              	CapSense_InitializeSensorBaseline:
  61              	.LFB36:
 187:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 188:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 189:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 190:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeSensorBaseline
 191:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 192:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 193:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 194:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an 
 195:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or a pair 
 196:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the 
 197:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if 
 198:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  enabled.
 199:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 200:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 201:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 202:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 203:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 204:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 205:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 206:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 207:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 208:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 209:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 210:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 211:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 212:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 213:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeSensorBaseline(uint32 sensor)
 214:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
  62              		.loc 1 214 0
  63              		.cfi_startproc
  64              	.LVL2:
  65 0000 10B5     		push	{r4, lr}
  66              		.cfi_def_cfa_offset 8
  67              		.cfi_offset 4, -8
  68              		.cfi_offset 14, -4
  69 0002 041C     		mov	r4, r0
 215:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Scan sensor */
 216:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanSensor(sensor);
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 6


  70              		.loc 1 216 0
  71 0004 FFF7FEFF 		bl	CapSense_ScanSensor
  72              	.LVL3:
  73              	.L5:
 217:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
  74              		.loc 1 217 0 discriminator 1
  75 0008 FFF7FEFF 		bl	CapSense_IsBusy
  76              	.LVL4:
  77 000c 0028     		cmp	r0, #0
  78 000e FBD1     		bne	.L5
 218:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 219:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
 220:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 221:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 222:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline, Signal and debounce counters */       
 223:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_BaseInit(sensor);
  79              		.loc 1 223 0
  80 0010 201C     		mov	r0, r4
  81 0012 FFF7FEFF 		bl	CapSense_BaseInit
  82              	.LVL5:
 224:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
  83              		.loc 1 224 0
  84              		@ sp needed
  85              	.LVL6:
  86 0016 10BD     		pop	{r4, pc}
  87              		.cfi_endproc
  88              	.LFE36:
  89              		.size	CapSense_InitializeSensorBaseline, .-CapSense_InitializeSensorBaseline
  90              		.section	.text.CapSense_InitializeAllBaselines,"ax",%progbits
  91              		.align	2
  92              		.global	CapSense_InitializeAllBaselines
  93              		.code	16
  94              		.thumb_func
  95              		.type	CapSense_InitializeAllBaselines, %function
  96              	CapSense_InitializeAllBaselines:
  97              	.LFB37:
 225:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 226:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 227:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 228:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeAllBaselines
 229:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 230:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 231:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 232:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Uses the CapSense_InitializeSensorBaseline function to load the 
 233:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] array with an initial values by scanning 
 234:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw count values are copied into the baseline array for 
 235:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw data filters are initialized if enabled.
 236:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 237:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 238:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 239:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 240:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 241:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 242:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 243:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 244:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 245:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 7


 246:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 247:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 248:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 249:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 250:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeAllBaselines(void)
 251:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
  98              		.loc 1 251 0
  99              		.cfi_startproc
 100 0000 10B5     		push	{r4, lr}
 101              		.cfi_def_cfa_offset 8
 102              		.cfi_offset 4, -8
 103              		.cfi_offset 14, -4
 104              	.LVL7:
 252:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 253:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 254:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 105              		.loc 1 254 0
 106 0002 0024     		mov	r4, #0
 107 0004 03E0     		b	.L8
 108              	.LVL8:
 109              	.L9:
 255:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 256:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     	CapSense_InitializeSensorBaseline(i);
 110              		.loc 1 256 0 discriminator 2
 111 0006 201C     		mov	r0, r4
 112 0008 FFF7FEFF 		bl	CapSense_InitializeSensorBaseline
 113              	.LVL9:
 254:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 114              		.loc 1 254 0 discriminator 2
 115 000c 0134     		add	r4, r4, #1
 116              	.LVL10:
 117              	.L8:
 254:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 118              		.loc 1 254 0 is_stmt 0 discriminator 1
 119 000e 042C     		cmp	r4, #4
 120 0010 F9D9     		bls	.L9
 257:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 258:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 121              		.loc 1 258 0 is_stmt 1
 122              		@ sp needed
 123              	.LVL11:
 124 0012 10BD     		pop	{r4, pc}
 125              		.cfi_endproc
 126              	.LFE37:
 127              		.size	CapSense_InitializeAllBaselines, .-CapSense_InitializeAllBaselines
 128              		.section	.text.CapSense_InitializeEnabledBaselines,"ax",%progbits
 129              		.align	2
 130              		.global	CapSense_InitializeEnabledBaselines
 131              		.code	16
 132              		.thumb_func
 133              		.type	CapSense_InitializeEnabledBaselines, %function
 134              	CapSense_InitializeEnabledBaselines:
 135              	.LFB38:
 259:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 260:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 261:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 262:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeEnabledBaselines
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 8


 263:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 264:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 265:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 266:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Scans all the enabled widgets and the raw count values are copied into the 
 267:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for all the sensors enabled in the scanning process. The baselines 
 268:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  are initialized with zero values for sensors disabled from the scanning process. 
 269:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  The raw data filters are initialized if enabled.
 270:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 271:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 272:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 273:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 274:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 275:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 276:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 277:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 278:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorRaw[] - used to store the sensors raw data.
 279:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[ ] - used to store bit masks of the enabled sensors.
 280:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 281:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 282:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 283:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 284:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 285:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeEnabledBaselines(void)
 286:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 136              		.loc 1 286 0
 137              		.cfi_startproc
 138 0000 38B5     		push	{r3, r4, r5, lr}
 139              		.cfi_def_cfa_offset 16
 140              		.cfi_offset 3, -16
 141              		.cfi_offset 4, -12
 142              		.cfi_offset 5, -8
 143              		.cfi_offset 14, -4
 287:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 288:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 289:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 290:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanEnabledWidgets();
 144              		.loc 1 290 0
 145 0002 FFF7FEFF 		bl	CapSense_ScanEnabledWidgets
 146              	.LVL12:
 147              	.L11:
 291:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 148              		.loc 1 291 0 discriminator 1
 149 0006 FFF7FEFF 		bl	CapSense_IsBusy
 150              	.LVL13:
 151 000a 0028     		cmp	r0, #0
 152 000c FBD1     		bne	.L11
 153 000e 0024     		mov	r4, #0
 292:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 293:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
 294:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 295:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 296:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 297:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 298:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 154              		.loc 1 298 0
 155 0010 074D     		ldr	r5, .L16
 156 0012 09E0     		b	.L12
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 9


 157              	.LVL14:
 158              	.L14:
 159 0014 281C     		mov	r0, r5
 160 0016 211C     		mov	r1, r4
 161 0018 FFF7FEFF 		bl	CapSense_GetBitValue
 162              	.LVL15:
 299:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
 300:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 301:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(isSensorEnabled != 0u)
 163              		.loc 1 301 0
 164 001c 0028     		cmp	r0, #0
 165 001e 02D0     		beq	.L13
 302:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 303:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Initialize baselines */
 304:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(i);
 166              		.loc 1 304 0
 167 0020 201C     		mov	r0, r4
 168              	.LVL16:
 169 0022 FFF7FEFF 		bl	CapSense_BaseInit
 170              	.LVL17:
 171              	.L13:
 296:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 172              		.loc 1 296 0
 173 0026 0134     		add	r4, r4, #1
 174              	.LVL18:
 175              	.L12:
 296:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 176              		.loc 1 296 0 is_stmt 0 discriminator 1
 177 0028 042C     		cmp	r4, #4
 178 002a F3D9     		bls	.L14
 305:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 306:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 307:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }  
 179              		.loc 1 307 0 is_stmt 1
 180              		@ sp needed
 181              	.LVL19:
 182 002c 38BD     		pop	{r3, r4, r5, pc}
 183              	.L17:
 184 002e C046     		.align	2
 185              	.L16:
 186 0030 00000000 		.word	CapSense_sensorEnableMask
 187              		.cfi_endproc
 188              	.LFE38:
 189              		.size	CapSense_InitializeEnabledBaselines, .-CapSense_InitializeEnabledBaselines
 190              		.section	.text.CapSense_UpdateBaselineNoThreshold,"ax",%progbits
 191              		.align	2
 192              		.global	CapSense_UpdateBaselineNoThreshold
 193              		.code	16
 194              		.thumb_func
 195              		.type	CapSense_UpdateBaselineNoThreshold, %function
 196              	CapSense_UpdateBaselineNoThreshold:
 197              	.LFB39:
 308:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 309:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 310:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 311:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateBaselineNoThreshold
 312:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 10


 313:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 314:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 315:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the 
 316:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by 
 317:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 318:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor]. 
 319:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold. 
 320:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating; baseline is loaded 
 321:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  with a raw count value if a signal is greater than zero and if signal is less 
 322:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  than noise threshold.
 323:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline 
 324:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 325:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 326:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API does not update the thresholds in the Smartsense Mode.
 327:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 328:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 329:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 330:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 331:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 332:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 333:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 334:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 335:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
 336:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store baseline value.
 337:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store fraction byte of 
 338:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline value.
 339:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store difference between 
 340:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
 341:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store previous sample of 
 342:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
 343:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before previous sample
 344:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 345:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 346:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 347:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 348:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 349:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 350:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateBaselineNoThreshold(uint32 sensor)
 351:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 198              		.loc 1 351 0
 199              		.cfi_startproc
 200              	.LVL20:
 201 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 202              		.cfi_def_cfa_offset 24
 203              		.cfi_offset 3, -24
 204              		.cfi_offset 4, -20
 205              		.cfi_offset 5, -16
 206              		.cfi_offset 6, -12
 207              		.cfi_offset 7, -8
 208              		.cfi_offset 14, -4
 209 0002 4F46     		mov	r7, r9
 210 0004 4646     		mov	r6, r8
 211 0006 C0B4     		push	{r6, r7}
 212              		.cfi_def_cfa_offset 32
 213              		.cfi_offset 8, -32
 214              		.cfi_offset 9, -28
 215 0008 041C     		mov	r4, r0
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 11


 216              	.LVL21:
 352:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 calc;
 353:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint32 sign;
 354:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 tempRaw;
 355:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 filteredRawData;
 356:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 widget = CapSense_widgetNumber[sensor];
 357:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 noiseThreshold = CapSense_noiseThreshold[widget];
 358:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 359:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 360:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 361:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 362:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 363:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 364:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 365:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     filteredRawData = CapSense_sensorRaw[sensor];
 217              		.loc 1 365 0
 218 000a 4300     		lsl	r3, r0, #1
 219 000c 274A     		ldr	r2, .L27
 220 000e 9A5A     		ldrh	r2, [r3, r2]
 221              	.LVL22:
 366:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 367:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#if (CapSense_RAW_FILTER_MASK != 0u)
 368:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	if(CapSense_enableRawFilters != 0u)
 369:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 370:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#if (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)
 371:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			tempRaw = filteredRawData;
 372:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_MedianFilter(filteredRawData, CapSense_rawFilterData1[sensor], 
 373:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 															CapSense_rawFilterData2[sensor]);
 374:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 375:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = tempRaw;
 376:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 377:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)
 378:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			tempRaw = filteredRawData;
 379:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_AveragingFilter(filteredRawData, CapSense_rawFilterData1[sensor],
 380:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 															   CapSense_rawFilterData2[sensor]);
 381:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 382:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = tempRaw;
 383:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 384:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)
 385:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_IIR2Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 386:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = filteredRawData;
 387:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 388:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)
 389:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_IIR4Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 390:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = filteredRawData;
 391:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 				
 392:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)
 393:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_JitterFilter(filteredRawData, CapSense_rawFilterData1[sensor]);
 394:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = filteredRawData;
 395:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 396:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)
 397:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_IIR8Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 398:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = filteredRawData;
 399:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 400:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)
 401:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_IIR16Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 402:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = filteredRawData;
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 12


 403:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 404:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#else
 405:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			/* No Raw filters */
 406:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#endif  /* (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) */
 407:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 408:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
 409:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
 410:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
 411:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	    MeasureNoiseEnvelope_P4_v2_20(&CapSense_config, (uint8)sensor, CapSense_sensorRaw);
 412:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 413:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 414:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Baseline calculation */
 415:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 416:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if(filteredRawData >= CapSense_sensorBaseline[sensor])
 222              		.loc 1 416 0
 223 0010 2749     		ldr	r1, .L27+4
 224 0012 5B5A     		ldrh	r3, [r3, r1]
 225              	.LVL23:
 226 0014 9342     		cmp	r3, r2
 227 0016 06D8     		bhi	.L19
 417:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 418:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_lowBaselineResetCnt[sensor] = 0u;	
 228              		.loc 1 418 0
 229 0018 0020     		mov	r0, #0
 230              	.LVL24:
 231 001a 2649     		ldr	r1, .L27+8
 232 001c 0855     		strb	r0, [r1, r4]
 419:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = filteredRawData - CapSense_sensorBaseline[sensor];
 233              		.loc 1 419 0
 234 001e D51A     		sub	r5, r2, r3
 235 0020 ADB2     		uxth	r5, r5
 236              	.LVL25:
 420:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 237              		.loc 1 420 0
 238 0022 0126     		mov	r6, #1
 239 0024 02E0     		b	.L20
 240              	.LVL26:
 241              	.L19:
 421:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 422:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 423:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 424:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = CapSense_sensorBaseline[sensor] - filteredRawData;
 242              		.loc 1 424 0
 243 0026 9D1A     		sub	r5, r3, r2
 244 0028 ADB2     		uxth	r5, r5
 245              	.LVL27:
 425:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 246              		.loc 1 425 0
 247 002a 0026     		mov	r6, #0
 248              	.LVL28:
 249              	.L20:
 426:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 427:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 428:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 429:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	if((sign == 0u) && (tempRaw > (uint16) CapSense_negativeNoiseThreshold[widget]))
 430:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#else
 431:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	if((sign == 0u) && (tempRaw > (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD))
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 13


 250              		.loc 1 431 0
 251 002c 002E     		cmp	r6, #0
 252 002e 12D1     		bne	.L21
 253              		.loc 1 431 0 is_stmt 0 discriminator 1
 254 0030 142D     		cmp	r5, #20
 255 0032 10D9     		bls	.L21
 432:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */ 
 433:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 434:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_lowBaselineResetCnt[sensor] >= CapSense_lowBaselineReset[sensor])
 256              		.loc 1 434 0 is_stmt 1
 257 0034 1F4B     		ldr	r3, .L27+8
 258 0036 1B5D     		ldrb	r3, [r3, r4]
 259 0038 1F4A     		ldr	r2, .L27+12
 260 003a 125D     		ldrb	r2, [r2, r4]
 261 003c 9342     		cmp	r3, r2
 262 003e 06D3     		bcc	.L22
 435:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 436:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(sensor);
 263              		.loc 1 436 0
 264 0040 201C     		mov	r0, r4
 265 0042 FFF7FEFF 		bl	CapSense_BaseInit
 266              	.LVL29:
 437:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor] = 0u;
 267              		.loc 1 437 0
 268 0046 0022     		mov	r2, #0
 269 0048 1A4B     		ldr	r3, .L27+8
 270 004a 1A55     		strb	r2, [r3, r4]
 271 004c 1CE0     		b	.L23
 272              	.LVL30:
 273              	.L22:
 438:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 439:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
 440:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 441:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor]++;
 274              		.loc 1 441 0
 275 004e 0133     		add	r3, r3, #1
 276 0050 184A     		ldr	r2, .L27+8
 277 0052 1355     		strb	r3, [r2, r4]
 278 0054 18E0     		b	.L23
 279              	.L21:
 442:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 443:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 444:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 445:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 446:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 447:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)			
 448:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			/* Update Baseline if lower than noiseThreshold */
 449:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			if ( (tempRaw <= noiseThreshold) || 
 450:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			 ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 451:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			   && (sign == 0u)))
 452:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			{
 453:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#else
 454:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			/* Update Baseline if lower than noiseThreshold */
 455:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			if ( (tempRaw <= noiseThreshold) || 
 280              		.loc 1 455 0
 281 0056 1E2D     		cmp	r5, #30
 282 0058 03D9     		bls	.L24
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 14


 283              		.loc 1 455 0 is_stmt 0 discriminator 1
 284 005a 132D     		cmp	r5, #19
 285 005c 14D8     		bhi	.L23
 456:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 				 ((tempRaw < (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD)
 457:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 				   && (sign == 0u)))
 286              		.loc 1 457 0 is_stmt 1
 287 005e 002E     		cmp	r6, #0
 288 0060 12D1     		bne	.L23
 289              	.L24:
 458:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			{
 459:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */ 
 460:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 461:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make full Baseline 23 bits */
 462:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc = (uint32) CapSense_sensorBaseline[sensor] << 8u;
 290              		.loc 1 462 0
 291 0062 1902     		lsl	r1, r3, #8
 292 0064 8846     		mov	r8, r1
 293              	.LVL31:
 463:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc |= (uint32) CapSense_sensorBaselineLow[sensor];
 294              		.loc 1 463 0
 295 0066 1248     		ldr	r0, .L27+4
 296 0068 0719     		add	r7, r0, r4
 297 006a B946     		mov	r9, r7
 298 006c 397B     		ldrb	r1, [r7, #12]
 299              	.LVL32:
 300 006e 4746     		mov	r7, r8
 301 0070 0F43     		orr	r7, r1
 302 0072 BC46     		mov	ip, r7
 303              	.LVL33:
 464:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 465:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Add Raw Data to Baseline */
 466:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc += filteredRawData;
 304              		.loc 1 466 0
 305 0074 6244     		add	r2, r2, ip
 306              	.LVL34:
 467:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 468:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Sub the high Baseline */
 469:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc -= CapSense_sensorBaseline[sensor];
 307              		.loc 1 469 0
 308 0076 D31A     		sub	r3, r2, r3
 309              	.LVL35:
 470:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 471:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Put Baseline and BaselineLow */
 472:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 310              		.loc 1 472 0
 311 0078 1F0A     		lsr	r7, r3, #8
 312 007a 6200     		lsl	r2, r4, #1
 313 007c 8752     		strh	r7, [r0, r2]
 473:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaselineLow[sensor] = ((uint8) calc);
 314              		.loc 1 473 0
 315 007e 4946     		mov	r1, r9
 316 0080 0B73     		strb	r3, [r1, #12]
 474:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 475:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_lowBaselineResetCnt[sensor] = 0u;
 317              		.loc 1 475 0
 318 0082 0022     		mov	r2, #0
 319 0084 0B4B     		ldr	r3, .L27+8
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 15


 320              	.LVL36:
 321 0086 1A55     		strb	r2, [r3, r4]
 322              	.LVL37:
 323              	.L23:
 476:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 477:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 478:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 479:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 480:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 481:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate Signal if positive difference > noiseThreshold */
 482:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (sign != 0u))
 324              		.loc 1 482 0
 325 0088 1E2D     		cmp	r5, #30
 326 008a 06D9     		bls	.L25
 327              		.loc 1 482 0 is_stmt 0 discriminator 1
 328 008c 002E     		cmp	r6, #0
 329 008e 04D0     		beq	.L25
 483:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 484:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8)
 485:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Over flow defence for uint8 */
 486:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (tempRaw > 0xFFu)
 487:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 488:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = 0xFFu;
 489:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }    
 490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else 
 491:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 492:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = ((uint8) tempRaw);
 493:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 494:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 495:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_sensorSignal[sensor] = ((uint16) tempRaw);
 330              		.loc 1 495 0 is_stmt 1
 331 0090 6400     		lsl	r4, r4, #1
 332              	.LVL38:
 333 0092 074B     		ldr	r3, .L27+4
 334 0094 1C19     		add	r4, r3, r4
 335 0096 A582     		strh	r5, [r4, #20]
 336 0098 04E0     		b	.L18
 337              	.LVL39:
 338              	.L25:
 496:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8) */
 497:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 498:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 499:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 500:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Signal is zero */
 501:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_sensorSignal[sensor] = 0u;
 339              		.loc 1 501 0
 340 009a 6400     		lsl	r4, r4, #1
 341              	.LVL40:
 342 009c 044B     		ldr	r3, .L27+4
 343 009e 1C19     		add	r4, r3, r4
 344 00a0 0023     		mov	r3, #0
 345 00a2 A382     		strh	r3, [r4, #20]
 346              	.L18:
 502:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 503:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 504:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 505:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 16


 506:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 507:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 508:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 347              		.loc 1 508 0
 348              		@ sp needed
 349              	.LVL41:
 350              	.LVL42:
 351 00a4 0CBC     		pop	{r2, r3}
 352 00a6 9046     		mov	r8, r2
 353 00a8 9946     		mov	r9, r3
 354 00aa F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 355              	.L28:
 356              		.align	2
 357              	.L27:
 358 00ac 00000000 		.word	CapSense_sensorRaw
 359 00b0 00000000 		.word	.LANCHOR0
 360 00b4 00000000 		.word	CapSense_lowBaselineResetCnt
 361 00b8 00000000 		.word	.LANCHOR1
 362              		.cfi_endproc
 363              	.LFE39:
 364              		.size	CapSense_UpdateBaselineNoThreshold, .-CapSense_UpdateBaselineNoThreshold
 365              		.section	.text.CapSense_UpdateSensorBaseline,"ax",%progbits
 366              		.align	2
 367              		.global	CapSense_UpdateSensorBaseline
 368              		.code	16
 369              		.thumb_func
 370              		.type	CapSense_UpdateSensorBaseline, %function
 371              	CapSense_UpdateSensorBaseline:
 372              	.LFB40:
 509:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 510:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 511:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 512:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateSensorBaseline
 513:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 514:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 515:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 516:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the 
 517:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by 
 518:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 519:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor]. 
 520:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold. 
 521:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating. 
 522:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Baseline is loaded with raw count value if a signal is greater than zero and  
 523:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  if signal is less than noise threshold.
 524:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline 
 525:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 526:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API updates the thresholds in the Smartsense Mode.
 527:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 528:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 529:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 530:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 531:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 532:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 533:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 534:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 535:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
 536:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 17


 537:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 538:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 539:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 540:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 541:.\Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateSensorBaseline(uint32 sensor)
 542:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 373              		.loc 1 542 0
 374              		.cfi_startproc
 375              	.LVL43:
 376 0000 08B5     		push	{r3, lr}
 377              		.cfi_def_cfa_offset 8
 378              		.cfi_offset 3, -8
 379              		.cfi_offset 14, -4
 543:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 544:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		uint32 widget;
 545:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		
 546:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		widget = CapSense_widgetNumber[sensor];
 547:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
 548:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 549:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 550:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 551:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 552:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 553:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
 554:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     	CapSense_UpdateThresholds(sensor);
 555:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 556:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 557:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_UpdateBaselineNoThreshold(sensor);
 380              		.loc 1 557 0
 381 0002 FFF7FEFF 		bl	CapSense_UpdateBaselineNoThreshold
 382              	.LVL44:
 558:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 559:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 560:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 561:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 562:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 563:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 383              		.loc 1 563 0
 384              		@ sp needed
 385 0006 08BD     		pop	{r3, pc}
 386              		.cfi_endproc
 387              	.LFE40:
 388              		.size	CapSense_UpdateSensorBaseline, .-CapSense_UpdateSensorBaseline
 389              		.section	.text.CapSense_UpdateEnabledBaselines,"ax",%progbits
 390              		.align	2
 391              		.global	CapSense_UpdateEnabledBaselines
 392              		.code	16
 393              		.thumb_func
 394              		.type	CapSense_UpdateEnabledBaselines, %function
 395              	CapSense_UpdateEnabledBaselines:
 396              	.LFB41:
 564:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 565:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 566:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 567:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateEnabledBaselines
 568:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 569:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 18


 570:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 571:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the 
 572:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines 
 573:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors.
 574:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 575:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 576:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 577:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 578:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 579:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 580:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 581:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 582:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
 583:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 584:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
 585:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 586:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
 587:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 588:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 589:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 590:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 591:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 592:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 593:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 594:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 595:.\Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateEnabledBaselines(void)
 596:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 397              		.loc 1 596 0
 398              		.cfi_startproc
 399 0000 38B5     		push	{r3, r4, r5, lr}
 400              		.cfi_def_cfa_offset 16
 401              		.cfi_offset 3, -16
 402              		.cfi_offset 4, -12
 403              		.cfi_offset 5, -8
 404              		.cfi_offset 14, -4
 405              	.LVL45:
 597:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 598:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 599:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 600:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 406              		.loc 1 600 0
 407 0002 0024     		mov	r4, #0
 601:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 602:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 408              		.loc 1 602 0
 409 0004 074D     		ldr	r5, .L34
 600:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 410              		.loc 1 600 0
 411 0006 09E0     		b	.L31
 412              	.LVL46:
 413              	.L33:
 414              		.loc 1 602 0
 415 0008 281C     		mov	r0, r5
 416 000a 211C     		mov	r1, r4
 417 000c FFF7FEFF 		bl	CapSense_GetBitValue
 418              	.LVL47:
 603:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 19


 604:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 419              		.loc 1 604 0
 420 0010 0028     		cmp	r0, #0
 421 0012 02D0     		beq	.L32
 605:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 606:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 422              		.loc 1 606 0
 423 0014 201C     		mov	r0, r4
 424              	.LVL48:
 425 0016 FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 426              	.LVL49:
 427              	.L32:
 600:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 428              		.loc 1 600 0
 429 001a 0134     		add	r4, r4, #1
 430              	.LVL50:
 431              	.L31:
 600:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 432              		.loc 1 600 0 is_stmt 0 discriminator 1
 433 001c 042C     		cmp	r4, #4
 434 001e F3D9     		bls	.L33
 607:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 608:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 609:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 435              		.loc 1 609 0 is_stmt 1
 436              		@ sp needed
 437              	.LVL51:
 438 0020 38BD     		pop	{r3, r4, r5, pc}
 439              	.L35:
 440 0022 C046     		.align	2
 441              	.L34:
 442 0024 00000000 		.word	CapSense_sensorEnableMask
 443              		.cfi_endproc
 444              	.LFE41:
 445              		.size	CapSense_UpdateEnabledBaselines, .-CapSense_UpdateEnabledBaselines
 446              		.section	.text.CapSense_UpdateWidgetBaseline,"ax",%progbits
 447              		.align	2
 448              		.global	CapSense_UpdateWidgetBaseline
 449              		.code	16
 450              		.thumb_func
 451              		.type	CapSense_UpdateWidgetBaseline, %function
 452              	CapSense_UpdateWidgetBaseline:
 453              	.LFB42:
 610:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 611:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 612:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateWidgetBaseline
 613:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 614:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 615:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 616:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the 
 617:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines 
 618:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors that belong to widget.
 619:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 620:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 621:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  Widget number.
 622:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 623:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 20


 624:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 625:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 626:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 627:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
 628:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 629:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
 630:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 631:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
 632:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 633:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 634:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 635:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 636:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 637:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 638:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 639:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 640:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateWidgetBaseline(uint32 widget)
 641:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 454              		.loc 1 641 0
 455              		.cfi_startproc
 456              	.LVL52:
 457 0000 38B5     		push	{r3, r4, r5, lr}
 458              		.cfi_def_cfa_offset 16
 459              		.cfi_offset 3, -16
 460              		.cfi_offset 4, -12
 461              		.cfi_offset 5, -8
 462              		.cfi_offset 14, -4
 463              	.LVL53:
 642:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sensorsPerWidget;
 643:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 firstSensor;
 644:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 lastSensor;
 645:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 646:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 647:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 648:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/* Get number of sensors in widget */
 649:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	sensorsPerWidget = CapSense_numberOfSensors[widget];
 650:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 651:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/* Get first sensor in widget */
 652:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	firstSensor = CapSense_rawDataIndex[widget];
 653:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
 654:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/* Get last sensor in widget */
 655:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	lastSensor = (CapSense_rawDataIndex[widget] + sensorsPerWidget);
 656:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
 657:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 464              		.loc 1 657 0
 465 0002 0024     		mov	r4, #0
 658:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 659:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 466              		.loc 1 659 0
 467 0004 074D     		ldr	r5, .L40
 657:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 468              		.loc 1 657 0
 469 0006 09E0     		b	.L37
 470              	.LVL54:
 471              	.L39:
 472              		.loc 1 659 0
 473 0008 281C     		mov	r0, r5
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 21


 474 000a 211C     		mov	r1, r4
 475 000c FFF7FEFF 		bl	CapSense_GetBitValue
 476              	.LVL55:
 660:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
 661:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 477              		.loc 1 661 0
 478 0010 0028     		cmp	r0, #0
 479 0012 02D0     		beq	.L38
 662:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 663:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 480              		.loc 1 663 0
 481 0014 201C     		mov	r0, r4
 482              	.LVL56:
 483 0016 FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 484              	.LVL57:
 485              	.L38:
 657:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 486              		.loc 1 657 0
 487 001a 0134     		add	r4, r4, #1
 488              	.LVL58:
 489              	.L37:
 657:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 490              		.loc 1 657 0 is_stmt 0 discriminator 1
 491 001c 042C     		cmp	r4, #4
 492 001e F3D9     		bls	.L39
 664:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 665:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 666:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 493              		.loc 1 666 0 is_stmt 1
 494              		@ sp needed
 495              	.LVL59:
 496 0020 38BD     		pop	{r3, r4, r5, pc}
 497              	.L41:
 498 0022 C046     		.align	2
 499              	.L40:
 500 0024 00000000 		.word	CapSense_sensorEnableMask
 501              		.cfi_endproc
 502              	.LFE42:
 503              		.size	CapSense_UpdateWidgetBaseline, .-CapSense_UpdateWidgetBaseline
 504              		.section	.text.CapSense_GetBaselineData,"ax",%progbits
 505              		.align	2
 506              		.global	CapSense_GetBaselineData
 507              		.code	16
 508              		.thumb_func
 509              		.type	CapSense_GetBaselineData, %function
 510              	CapSense_GetBaselineData:
 511              	.LFB43:
 667:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 668:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 669:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 670:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetBaselineData
 671:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 672:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 673:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 674:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the sensor baseline from the component.
 675:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 676:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 22


 677:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 678:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 679:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 680:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the baseline value of the sensor indicated by an argument.
 681:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 682:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 683:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with an initial values by scanning
 684:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 685:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 686:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 687:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 688:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 689:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_GetBaselineData(uint32 sensor)
 690:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 512              		.loc 1 690 0
 513              		.cfi_startproc
 514              	.LVL60:
 691:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return (CapSense_sensorBaseline[sensor]);
 515              		.loc 1 691 0
 516 0000 4000     		lsl	r0, r0, #1
 517              	.LVL61:
 518 0002 014B     		ldr	r3, .L43
 519 0004 185A     		ldrh	r0, [r3, r0]
 692:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 520              		.loc 1 692 0
 521              		@ sp needed
 522 0006 7047     		bx	lr
 523              	.L44:
 524              		.align	2
 525              	.L43:
 526 0008 00000000 		.word	.LANCHOR0
 527              		.cfi_endproc
 528              	.LFE43:
 529              		.size	CapSense_GetBaselineData, .-CapSense_GetBaselineData
 530              		.section	.text.CapSense_SetBaselineData,"ax",%progbits
 531              		.align	2
 532              		.global	CapSense_SetBaselineData
 533              		.code	16
 534              		.thumb_func
 535              		.type	CapSense_SetBaselineData, %function
 536              	CapSense_SetBaselineData:
 537              	.LFB44:
 693:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 694:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 695:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 696:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetBaselineData
 697:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 698:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 699:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 700:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor baseline array.
 701:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 702:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 703:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 704:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  data:    Sensor baseline.
 705:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 706:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 707:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 23


 708:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 709:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 710:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with initial values by scanning
 711:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 712:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 713:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 714:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 715:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 716:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetBaselineData(uint32 sensor, uint16 data)
 717:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 538              		.loc 1 717 0
 539              		.cfi_startproc
 540              	.LVL62:
 718:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	CapSense_sensorBaseline[sensor] = data;
 541              		.loc 1 718 0
 542 0000 4000     		lsl	r0, r0, #1
 543              	.LVL63:
 544 0002 014B     		ldr	r3, .L46
 545 0004 C152     		strh	r1, [r0, r3]
 719:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 546              		.loc 1 719 0
 547              		@ sp needed
 548 0006 7047     		bx	lr
 549              	.L47:
 550              		.align	2
 551              	.L46:
 552 0008 00000000 		.word	.LANCHOR0
 553              		.cfi_endproc
 554              	.LFE44:
 555              		.size	CapSense_SetBaselineData, .-CapSense_SetBaselineData
 556              		.section	.text.CapSense_GetDiffCountData,"ax",%progbits
 557              		.align	2
 558              		.global	CapSense_GetDiffCountData
 559              		.code	16
 560              		.thumb_func
 561              		.type	CapSense_GetDiffCountData, %function
 562              	CapSense_GetDiffCountData:
 563              	.LFB45:
 720:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 721:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 722:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 723:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDiffCountData
 724:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 725:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 726:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 727:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function returns the Sensor Signal from the component.
 728:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 729:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 730:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 731:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 732:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 733:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the difference count value of the sensor indicated by the 
 734:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  argument. 
 735:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 736:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 737:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 738:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 24


 739:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 740:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 741:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 742:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 743:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_GetDiffCountData(uint32 sensor)
 744:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 564              		.loc 1 744 0
 565              		.cfi_startproc
 566              	.LVL64:
 745:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return (CapSense_sensorSignal[sensor]);
 567              		.loc 1 745 0
 568 0000 4000     		lsl	r0, r0, #1
 569              	.LVL65:
 570 0002 024B     		ldr	r3, .L49
 571 0004 1818     		add	r0, r3, r0
 572 0006 808A     		ldrh	r0, [r0, #20]
 746:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 573              		.loc 1 746 0
 574              		@ sp needed
 575 0008 7047     		bx	lr
 576              	.L50:
 577 000a C046     		.align	2
 578              	.L49:
 579 000c 00000000 		.word	.LANCHOR0
 580              		.cfi_endproc
 581              	.LFE45:
 582              		.size	CapSense_GetDiffCountData, .-CapSense_GetDiffCountData
 583              		.section	.text.CapSense_SetDiffCountData,"ax",%progbits
 584              		.align	2
 585              		.global	CapSense_SetDiffCountData
 586              		.code	16
 587              		.thumb_func
 588              		.type	CapSense_SetDiffCountData, %function
 589              	CapSense_SetDiffCountData:
 590              	.LFB46:
 747:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 748:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 749:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 750:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetDiffCountData
 751:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 752:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 753:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 754:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor signal array.
 755:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 756:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 757:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 758:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  value:   Sensor signal.
 759:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 760:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 761:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None. 
 762:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 763:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 764:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 765:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 766:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 767:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 768:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 25


 769:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 770:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetDiffCountData(uint32 sensor, uint16 value)
 771:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 591              		.loc 1 771 0
 592              		.cfi_startproc
 593              	.LVL66:
 772:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = value;
 594              		.loc 1 772 0
 595 0000 4000     		lsl	r0, r0, #1
 596              	.LVL67:
 597 0002 024B     		ldr	r3, .L52
 598 0004 1818     		add	r0, r3, r0
 599 0006 8182     		strh	r1, [r0, #20]
 773:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 600              		.loc 1 773 0
 601              		@ sp needed
 602 0008 7047     		bx	lr
 603              	.L53:
 604 000a C046     		.align	2
 605              	.L52:
 606 000c 00000000 		.word	.LANCHOR0
 607              		.cfi_endproc
 608              	.LFE46:
 609              		.size	CapSense_SetDiffCountData, .-CapSense_SetDiffCountData
 610              		.section	.text.CapSense_GetFingerThreshold,"ax",%progbits
 611              		.align	2
 612              		.global	CapSense_GetFingerThreshold
 613              		.code	16
 614              		.thumb_func
 615              		.type	CapSense_GetFingerThreshold, %function
 616              	CapSense_GetFingerThreshold:
 617              	.LFB47:
 774:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 775:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 776:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 777:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerThreshold
 778:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 779:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 780:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 781:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the finger threshold from the component.
 782:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 783:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 784:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 785:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 786:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 787:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the finger threshold of the widget indicated by the argument. 
 788:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 789:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 790:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_fingerThreshold[] - This array contains the level of signal 
 791:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that is determined if a finger is present on the widget.
 792:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 793:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 794:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 795:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 796:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 797:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_GetFingerThreshold(uint32 widget)
 798:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 26


 618              		.loc 1 798 0
 619              		.cfi_startproc
 620              	.LVL68:
 799:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_fingerThreshold[widget]);
 800:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 621              		.loc 1 800 0
 622 0000 6420     		mov	r0, #100
 623              	.LVL69:
 624              		@ sp needed
 625 0002 7047     		bx	lr
 626              		.cfi_endproc
 627              	.LFE47:
 628              		.size	CapSense_GetFingerThreshold, .-CapSense_GetFingerThreshold
 629              		.section	.text.CapSense_GetNoiseThreshold,"ax",%progbits
 630              		.align	2
 631              		.global	CapSense_GetNoiseThreshold
 632              		.code	16
 633              		.thumb_func
 634              		.type	CapSense_GetNoiseThreshold, %function
 635              	CapSense_GetNoiseThreshold:
 636              	.LFB48:
 801:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 802:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 803:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 804:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNoiseThreshold
 805:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 806:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 807:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 808:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the noise threshold from the component.
 809:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 810:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 811:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 812:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 813:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 814:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the noise threshold of the widget indicated by the argument. 
 815:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 816:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 817:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_noiseThreshold[] - This array contains the level of signal 
 818:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that determines the level of noise in the capacitive scan.
 819:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 820:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 821:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 822:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 823:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 824:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_GetNoiseThreshold(uint32 widget)
 825:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 637              		.loc 1 825 0
 638              		.cfi_startproc
 639              	.LVL70:
 826:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return (CapSense_noiseThreshold[widget]);
 827:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 640              		.loc 1 827 0
 641 0000 1E20     		mov	r0, #30
 642              	.LVL71:
 643              		@ sp needed
 644 0002 7047     		bx	lr
 645              		.cfi_endproc
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 27


 646              	.LFE48:
 647              		.size	CapSense_GetNoiseThreshold, .-CapSense_GetNoiseThreshold
 648              		.section	.text.CapSense_GetFingerHysteresis,"ax",%progbits
 649              		.align	2
 650              		.global	CapSense_GetFingerHysteresis
 651              		.code	16
 652              		.thumb_func
 653              		.type	CapSense_GetFingerHysteresis, %function
 654              	CapSense_GetFingerHysteresis:
 655              	.LFB49:
 828:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 829:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 830:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 831:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerHysteresis
 832:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 833:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 834:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 835:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the Hysteresis value from the component.
 836:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 837:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 838:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 839:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 840:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 841:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the Hysteresis of the widget indicated by the argument. 
 842:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 843:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 844:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_hysteresis[] - This array contains the hysteresis value 
 845:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   for each widget.
 846:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 847:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 848:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 849:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 850:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 851:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 852:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_GetFingerHysteresis(uint32 widget)
 853:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 656              		.loc 1 853 0
 657              		.cfi_startproc
 658              	.LVL72:
 854:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_hysteresis[widget]);
 855:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 659              		.loc 1 855 0
 660 0000 0020     		mov	r0, #0
 661              	.LVL73:
 662              		@ sp needed
 663 0002 7047     		bx	lr
 664              		.cfi_endproc
 665              	.LFE49:
 666              		.size	CapSense_GetFingerHysteresis, .-CapSense_GetFingerHysteresis
 667              		.section	.text.CapSense_GetNegativeNoiseThreshold,"ax",%progbits
 668              		.align	2
 669              		.global	CapSense_GetNegativeNoiseThreshold
 670              		.code	16
 671              		.thumb_func
 672              		.type	CapSense_GetNegativeNoiseThreshold, %function
 673              	CapSense_GetNegativeNoiseThreshold:
 674              	.LFB50:
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 28


 856:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 857:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 858:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 859:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNegativeNoiseThreshold
 860:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 861:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 862:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 863:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the negative noise threshold from the component.
 864:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 865:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters: 
 866:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 867:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 868:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return Value: 
 869:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the negative noise threshold
 870:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 871:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 872:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_negativeNoiseThreshold - This variable specifies the negative 
 873:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   difference between the raw count and baseline levels for Baseline resetting
 874:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   to the raw count level.
 875:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 876:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 877:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 878:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 879:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 880:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_GetNegativeNoiseThreshold(uint32 widget)
 881:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 675              		.loc 1 881 0
 676              		.cfi_startproc
 677              	.LVL74:
 882:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 883:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_negativeNoiseThreshold[widget]);
 884:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #else
 885:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_NEGATIVE_NOISE_THRESHOLD);
 886:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */ 
 887:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 678              		.loc 1 887 0
 679 0000 1420     		mov	r0, #20
 680              	.LVL75:
 681              		@ sp needed
 682 0002 7047     		bx	lr
 683              		.cfi_endproc
 684              	.LFE50:
 685              		.size	CapSense_GetNegativeNoiseThreshold, .-CapSense_GetNegativeNoiseThreshold
 686              		.section	.text.CapSense_CheckIsSensorActive,"ax",%progbits
 687              		.align	2
 688              		.global	CapSense_CheckIsSensorActive
 689              		.code	16
 690              		.thumb_func
 691              		.type	CapSense_CheckIsSensorActive, %function
 692              	CapSense_CheckIsSensorActive:
 693              	.LFB51:
 888:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 889:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 890:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 891:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
 892:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetFingerThreshold
 893:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 29


 894:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 895:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
 896:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the finger threshold value for a widget. 
 897:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 898:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters: 
 899:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  sensorNumber:  widget index. 
 900:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value:  Finger threshold value for the widget.
 901:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 902:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
 903:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 904:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 905:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
 906:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_fingerThreshold[] - This array contains the level of signal 
 907:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*   for each widget that determines if a finger is present on the widget.
 908:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
 909:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
 910:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 911:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 912:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
 913:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetFingerThreshold(uint32 widget, uint16 value)
 914:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{	
 915:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_fingerThreshold[widget] = value;
 916:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 917:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 918:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 919:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
 920:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetNoiseThreshold
 921:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
 922:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 923:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
 924:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the Noise Threshold value for each widget.
 925:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 926:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters:
 927:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  widget:  Sensor index number.
 928:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value:   Noise Threshold value for widget.
 929:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 930:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
 931:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 932:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 933:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
 934:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_noiseThreshold[] - This array contains the level of signal 
 935:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*   for each widget that determines the level of noise in the capacitive scan.
 936:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
 937:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
 938:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 939:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 940:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
 941:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetNoiseThreshold(uint32 widget, uint16 value)
 942:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 943:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_noiseThreshold[widget] = value;
 944:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 945:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 946:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 947:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
 948:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetFingerHysteresis
 949:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
 950:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 30


 951:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
 952:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the Hysteresis value of a widget
 953:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 954:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters: 
 955:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value:  Hysteresis value for widgets.
 956:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  widget:  widget number
 957:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 958:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
 959:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 960:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 961:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
 962:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_hysteresis[] - This array contains the hysteresis value for each widget.
 963:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 964:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 965:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
 966:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 967:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 968:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
 969:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetFingerHysteresis(uint32 widget, uint16 value)
 970:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 971:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_hysteresis[widget] = value;
 972:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 973:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 974:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 975:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
 976:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetNegativeNoiseThreshold
 977:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
 978:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 979:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
 980:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the Negative Noise Threshold value of a widget
 981:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 982:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters: 
 983:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value:  Negative Noise Threshold value for widgets.
 984:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  widget: widget number
 985:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 986:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
 987:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 988:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 989:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
 990:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_negativeNoiseThreshold  - This parameter specifies the negative 
 991:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*   difference between the raw count and baseline levels for Baseline resetting to 
 992:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*   the raw count level.
 993:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
 994:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
 995:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 996:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 997:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
 998:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetNegativeNoiseThreshold(uint32 widget, uint16 value)
 999:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
1000:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_negativeNoiseThreshold[widget] = value;
1001:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
1002:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1003:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1004:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
1005:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetDebounce
1006:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
1007:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 31


1008:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
1009:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the debounce value for a widget.
1010:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1011:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters: 
1012:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value:  Debounce value for widget.
1013:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  widget: widget index.
1014:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1015:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
1016:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1017:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1018:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
1019:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_debounce[] - This array contains the debounce value for each widget.
1020:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
1021:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1022:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
1023:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1024:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1025:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
1026:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetDebounce(uint32 widget, uint8 value)
1027:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
1028:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_debounce[widget] = value;
1029:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
1030:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1031:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1032:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
1033:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetLowBaselineReset
1034:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
1035:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1036:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
1037:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the low baseline reset threshold value for the sensor.
1038:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1039:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters: 
1040:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value: low baseline reset threshold value.
1041:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  sensor: Sensor index.
1042:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1043:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
1044:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1045:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1046:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
1047:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_lowBaselineReset[] - This array contains the Baseline update 
1048:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  threshold value for each sensor.
1049:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
1050:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
1051:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1052:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1053:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
1054:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetLowBaselineReset(uint32 sensor, uint8 value)
1055:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
1056:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_lowBaselineReset[sensor] = value;
1057:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
1058:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
1059:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1060:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1061:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1062:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsSensorActive
1063:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1064:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 32


1065:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1066:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[sensor] array element to the finger
1067:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold of the widget it belongs to. The hysteresis and debounce are taken into 
1068:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold 
1069:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  based on whether the sensor is currently active. 
1070:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
1071:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
1072:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  The debounce counter is added to the sensor active transition.
1073:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function updates the CapSense_sensorOnMask[] array element.
1074:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1075:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1076:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
1077:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1078:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1079:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
1080:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1081:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1082:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - used to store the difference between 
1083:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and a previous value of the baseline.
1084:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounceCounter[]   - used to store the current debounce 
1085:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  counter of the sensor. the widget which have this parameter are buttons, matrix 
1086:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  buttons, proximity, and guard. All other widgets don't have the  debounce parameter
1087:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
1088:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[] - used to store the sensors on/off state.
1089:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[0] contains the masked bits for sensors 
1090:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1091:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
1092:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1093:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor is inactive.
1094:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is active.
1095:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
1096:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1097:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1098:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1099:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1100:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsSensorActive(uint32 sensor)
1101:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {	
 694              		.loc 1 1101 0
 695              		.cfi_startproc
 696              	.LVL76:
 697 0000 38B5     		push	{r3, r4, r5, lr}
 698              		.cfi_def_cfa_offset 16
 699              		.cfi_offset 3, -16
 700              		.cfi_offset 4, -12
 701              		.cfi_offset 5, -8
 702              		.cfi_offset 14, -4
 703 0002 041C     		mov	r4, r0
 704              	.LVL77:
1102:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint8 widget;
1103:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint8 debounce;
1104:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint8 debounceIndex;
1105:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1106:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint16 fingerThreshold;
1107:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint16 hysteresis;
1108:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	static uint8 CapSense_debounceCounter[] = {
1109:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, 
1110:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 33


1111:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1112:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1113:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
1114:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Prepare to find debounce counter index */
1115:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     widget = CapSense_widgetNumber[sensor];
1116:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
1117:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     fingerThreshold = CapSense_fingerThreshold[widget];
1118:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	hysteresis = CapSense_hysteresis[widget];
1119:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	debounce = CapSense_debounce[widget];	
1120:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
1121:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	    debounceIndex = CapSense_UNUSED_DEBOUNCE_COUNTER_INDEX;
1122:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_debounceCounter[debounceIndex] = 1u;
 705              		.loc 1 1122 0
 706 0004 1F48     		ldr	r0, .L64
 707              	.LVL78:
 708 0006 0122     		mov	r2, #1
 709 0008 2023     		mov	r3, #32
 710 000a C254     		strb	r2, [r0, r3]
1123:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1124:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
1125:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Was on */
1126:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if (0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor))
 711              		.loc 1 1126 0
 712 000c 2430     		add	r0, r0, #36
 713 000e 211C     		mov	r1, r4
 714 0010 FFF7FEFF 		bl	CapSense_GetBitValue
 715              	.LVL79:
 716 0014 0028     		cmp	r0, #0
 717 0016 10D0     		beq	.L59
1127:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1128:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis minus */
1129:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 718              		.loc 1 1129 0
 719 0018 6300     		lsl	r3, r4, #1
 720 001a 1A4A     		ldr	r2, .L64
 721 001c D318     		add	r3, r2, r3
 722 001e 9B8A     		ldrh	r3, [r3, #20]
 723 0020 632B     		cmp	r3, #99
 724 0022 23DC     		bgt	.L60
1130:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1131:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	   		CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 0u);
 725              		.loc 1 1131 0
 726 0024 151C     		mov	r5, r2
 727 0026 101C     		mov	r0, r2
 728 0028 2430     		add	r0, r0, #36
 729 002a 211C     		mov	r1, r4
 730 002c 0022     		mov	r2, #0
 731 002e FFF7FEFF 		bl	CapSense_SetBitValue
 732              	.LVL80:
1132:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			/* Sensor inactive - reset Debounce counter */
1133:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 733              		.loc 1 1133 0
 734 0032 0122     		mov	r2, #1
 735 0034 2023     		mov	r3, #32
 736 0036 EA54     		strb	r2, [r5, r3]
 737 0038 18E0     		b	.L60
 738              	.L59:
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 34


1134:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1135:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1136:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else    /* Was off */
1137:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1138:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis plus */
1139:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] >= (fingerThreshold + hysteresis))
 739              		.loc 1 1139 0
 740 003a 6300     		lsl	r3, r4, #1
 741 003c 114A     		ldr	r2, .L64
 742 003e D318     		add	r3, r2, r3
 743 0040 9B8A     		ldrh	r3, [r3, #20]
 744 0042 632B     		cmp	r3, #99
 745 0044 0EDD     		ble	.L61
1140:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1141:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_debounceCounter[debounceIndex]--;
 746              		.loc 1 1141 0
 747 0046 111C     		mov	r1, r2
 748 0048 2022     		mov	r2, #32
 749 004a 8B5C     		ldrb	r3, [r1, r2]
 750 004c 013B     		sub	r3, r3, #1
 751 004e DBB2     		uxtb	r3, r3
 752 0050 8B54     		strb	r3, [r1, r2]
1142:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor active, decrement debounce counter */
1143:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(CapSense_debounceCounter[debounceIndex] == 0u)
 753              		.loc 1 1143 0
 754 0052 002B     		cmp	r3, #0
 755 0054 0AD1     		bne	.L60
1144:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1145:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 1u); 
 756              		.loc 1 1145 0
 757 0056 081C     		mov	r0, r1
 758 0058 2430     		add	r0, r0, #36
 759 005a 211C     		mov	r1, r4
 760 005c 0122     		mov	r2, #1
 761 005e FFF7FEFF 		bl	CapSense_SetBitValue
 762              	.LVL81:
 763 0062 03E0     		b	.L60
 764              	.L61:
1146:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1147:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1148:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1149:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1150:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1151:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 765              		.loc 1 1151 0
 766 0064 0121     		mov	r1, #1
 767 0066 2023     		mov	r3, #32
 768 0068 064A     		ldr	r2, .L64
 769 006a D154     		strb	r1, [r2, r3]
 770              	.L60:
1152:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1153:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1154:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1155:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return ((uint32)((0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor)) ? 1u : 0u));
 771              		.loc 1 1155 0
 772 006c 0548     		ldr	r0, .L64
 773 006e 2430     		add	r0, r0, #36
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 35


 774 0070 211C     		mov	r1, r4
 775 0072 FFF7FEFF 		bl	CapSense_GetBitValue
 776              	.LVL82:
 777 0076 0028     		cmp	r0, #0
 778 0078 01D0     		beq	.L63
 779 007a 0120     		mov	r0, #1
 780 007c 00E0     		b	.L62
 781              	.L63:
 782 007e 0020     		mov	r0, #0
 783              	.L62:
1156:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 784              		.loc 1 1156 0 discriminator 3
 785              		@ sp needed
 786              	.LVL83:
 787 0080 38BD     		pop	{r3, r4, r5, pc}
 788              	.L65:
 789 0082 C046     		.align	2
 790              	.L64:
 791 0084 00000000 		.word	.LANCHOR0
 792              		.cfi_endproc
 793              	.LFE51:
 794              		.size	CapSense_CheckIsSensorActive, .-CapSense_CheckIsSensorActive
 795              		.section	.text.CapSense_CheckIsWidgetActive,"ax",%progbits
 796              		.align	2
 797              		.global	CapSense_CheckIsWidgetActive
 798              		.code	16
 799              		.thumb_func
 800              		.type	CapSense_CheckIsWidgetActive, %function
 801              	CapSense_CheckIsWidgetActive:
 802              	.LFB52:
1157:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1158:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1159:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1160:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsWidgetActive
1161:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1162:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1163:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1164:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[] array element to the finger threshold of 
1165:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * the widget it belongs to. The hysteresis and debounce are taken into account. 
1166:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * The hysteresis is added or subtracted from the finger threshold based on whether
1167:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the sensor is currently active. If the sensor is active, the threshold is 
1168:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  lowered by the hysteresis amount. If the sensor is inactive, the threshold 
1169:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  is raised by the hysteresis amount. 
1170:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * The debounce counter added to the sensor active transition. 
1171:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * This function updates CapSense_sensorOnMask[] array element
1172:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1173:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1174:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1175:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1176:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1177:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are 
1178:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
1179:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1180:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1181:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  rawDataIndex[]: Contains the  1st sensor position in the widget
1182:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
1183:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 36


1184:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1185:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1186:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1187:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsWidgetActive(uint32 widget)
1188:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 803              		.loc 1 1188 0
 804              		.cfi_startproc
 805              	.LVL84:
 806 0000 70B5     		push	{r4, r5, r6, lr}
 807              		.cfi_def_cfa_offset 16
 808              		.cfi_offset 4, -16
 809              		.cfi_offset 5, -12
 810              		.cfi_offset 6, -8
 811              		.cfi_offset 14, -4
 812              	.LVL85:
1189:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 rawIndex = (uint32)CapSense_rawDataIndex[widget];
1190:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 numOfSensors = (uint32)CapSense_numberOfSensors[widget] + rawIndex;
1191:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
 813              		.loc 1 1191 0
 814 0002 0025     		mov	r5, #0
1189:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 rawIndex = (uint32)CapSense_rawDataIndex[widget];
 815              		.loc 1 1189 0
 816 0004 0024     		mov	r4, #0
1192:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1193:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Check all sensors of widget */
1194:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1195:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1196:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_CheckIsSensorActive((uint32)rawIndex) != 0u)
1197:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1198:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_SENSOR_IS_ACTIVE;
 817              		.loc 1 1198 0
 818 0006 0126     		mov	r6, #1
 819              	.LVL86:
 820              	.L68:
1196:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_CheckIsSensorActive((uint32)rawIndex) != 0u)
 821              		.loc 1 1196 0
 822 0008 201C     		mov	r0, r4
 823 000a FFF7FEFF 		bl	CapSense_CheckIsSensorActive
 824              	.LVL87:
 825 000e 0028     		cmp	r0, #0
 826 0010 00D0     		beq	.L67
 827              		.loc 1 1198 0
 828 0012 351C     		mov	r5, r6
 829              	.LVL88:
 830              	.L67:
1199:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1200:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 831              		.loc 1 1200 0
 832 0014 0134     		add	r4, r4, #1
 833              	.LVL89:
1201:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1202:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 834              		.loc 1 1202 0
 835 0016 042C     		cmp	r4, #4
 836 0018 F6D9     		bls	.L68
1203:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1204:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 37


1205:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1206:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
1207:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 837              		.loc 1 1207 0
 838 001a 281C     		mov	r0, r5
 839              		@ sp needed
 840              	.LVL90:
 841              	.LVL91:
 842 001c 70BD     		pop	{r4, r5, r6, pc}
 843              		.cfi_endproc
 844              	.LFE52:
 845              		.size	CapSense_CheckIsWidgetActive, .-CapSense_CheckIsWidgetActive
 846 001e C046     		.section	.text.CapSense_CheckIsAnyWidgetActive,"ax",%progbits
 847              		.align	2
 848              		.global	CapSense_CheckIsAnyWidgetActive
 849              		.code	16
 850              		.thumb_func
 851              		.type	CapSense_CheckIsAnyWidgetActive, %function
 852              	CapSense_CheckIsAnyWidgetActive:
 853              	.LFB53:
1208:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1209:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1210:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1211:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsAnyWidgetActive
1212:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1213:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1214:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1215:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares all the sensors of the CapSense_Signal[] array to their finger 
1216:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold. Calls CapSense_CheckIsWidgetActive() for each widget so 
1217:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the CapSense_sensorOnMask[] array is up to date after calling this 
1218:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  function.
1219:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1220:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1221:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1222:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1223:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1224:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
1225:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1226:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1227:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1228:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
1229:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1230:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1231:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1232:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1233:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsAnyWidgetActive(void)
1234:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 854              		.loc 1 1234 0
 855              		.cfi_startproc
 856 0000 70B5     		push	{r4, r5, r6, lr}
 857              		.cfi_def_cfa_offset 16
 858              		.cfi_offset 4, -16
 859              		.cfi_offset 5, -12
 860              		.cfi_offset 6, -8
 861              		.cfi_offset 14, -4
 862              	.LVL92:
1235:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 38


1236:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	    uint32 i;
1237:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
 863              		.loc 1 1237 0
 864 0002 0025     		mov	r5, #0
1238:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1239:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 865              		.loc 1 1239 0
 866 0004 0024     		mov	r4, #0
1240:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1241:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(i) != 0u)
1242:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1243:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_WIDGET_IS_ACTIVE;
 867              		.loc 1 1243 0
 868 0006 0126     		mov	r6, #1
1239:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 869              		.loc 1 1239 0
 870 0008 06E0     		b	.L72
 871              	.LVL93:
 872              	.L74:
1241:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(i) != 0u)
 873              		.loc 1 1241 0
 874 000a 201C     		mov	r0, r4
 875 000c FFF7FEFF 		bl	CapSense_CheckIsWidgetActive
 876              	.LVL94:
 877 0010 0028     		cmp	r0, #0
 878 0012 00D0     		beq	.L73
 879              		.loc 1 1243 0
 880 0014 351C     		mov	r5, r6
 881              	.LVL95:
 882              	.L73:
1239:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 883              		.loc 1 1239 0
 884 0016 0134     		add	r4, r4, #1
 885              	.LVL96:
 886              	.L72:
1239:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 887              		.loc 1 1239 0 is_stmt 0 discriminator 1
 888 0018 002C     		cmp	r4, #0
 889 001a F6D0     		beq	.L74
1244:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1245:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1246:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1247:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1248:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1249:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
1250:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 890              		.loc 1 1250 0 is_stmt 1
 891 001c 281C     		mov	r0, r5
 892              		@ sp needed
 893              	.LVL97:
 894              	.LVL98:
 895 001e 70BD     		pop	{r4, r5, r6, pc}
 896              		.cfi_endproc
 897              	.LFE53:
 898              		.size	CapSense_CheckIsAnyWidgetActive, .-CapSense_CheckIsAnyWidgetActive
 899              		.section	.text.CapSense_EnableWidget,"ax",%progbits
 900              		.align	2
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 39


 901              		.global	CapSense_EnableWidget
 902              		.code	16
 903              		.thumb_func
 904              		.type	CapSense_EnableWidget, %function
 905              	CapSense_EnableWidget:
 906              	.LFB54:
1251:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1252:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1253:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1254:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_EnableWidget
1255:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1256:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1257:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1258:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Enables all the widget elements (sensors) to the scanning process.
1259:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1260:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1261:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1262:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1263:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1264:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1265:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1266:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1267:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
1268:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1269:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
1270:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1271:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
1272:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1273:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
1274:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
1275:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
1276:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1277:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1278:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1279:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1280:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_EnableWidget(uint32 widget)
1281:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 907              		.loc 1 1281 0
 908              		.cfi_startproc
 909              	.LVL99:
 910 0000 38B5     		push	{r3, r4, r5, lr}
 911              		.cfi_def_cfa_offset 16
 912              		.cfi_offset 3, -16
 913              		.cfi_offset 4, -12
 914              		.cfi_offset 5, -8
 915              		.cfi_offset 14, -4
 916              	.LVL100:
1282:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1283:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 917              		.loc 1 1283 0
 918 0002 0024     		mov	r4, #0
1284:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
1285:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1286:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Enable all sensors of widget */
1287:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1288:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1289:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 1u);
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 40


 919              		.loc 1 1289 0
 920 0004 054D     		ldr	r5, .L79
 921              	.LVL101:
 922              	.L77:
 923              		.loc 1 1289 0 is_stmt 0 discriminator 1
 924 0006 281C     		mov	r0, r5
 925 0008 211C     		mov	r1, r4
 926 000a 0122     		mov	r2, #1
 927 000c FFF7FEFF 		bl	CapSense_SetBitValue
 928              	.LVL102:
1290:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 929              		.loc 1 1290 0 is_stmt 1 discriminator 1
 930 0010 0134     		add	r4, r4, #1
 931              	.LVL103:
 932 0012 E4B2     		uxtb	r4, r4
 933              	.LVL104:
1291:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1292:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 934              		.loc 1 1292 0 discriminator 1
 935 0014 042C     		cmp	r4, #4
 936 0016 F6D9     		bls	.L77
1293:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 937              		.loc 1 1293 0
 938              		@ sp needed
 939              	.LVL105:
 940 0018 38BD     		pop	{r3, r4, r5, pc}
 941              	.L80:
 942 001a C046     		.align	2
 943              	.L79:
 944 001c 00000000 		.word	CapSense_sensorEnableMask
 945              		.cfi_endproc
 946              	.LFE54:
 947              		.size	CapSense_EnableWidget, .-CapSense_EnableWidget
 948              		.section	.text.CapSense_DisableWidget,"ax",%progbits
 949              		.align	2
 950              		.global	CapSense_DisableWidget
 951              		.code	16
 952              		.thumb_func
 953              		.type	CapSense_DisableWidget, %function
 954              	CapSense_DisableWidget:
 955              	.LFB55:
1294:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1295:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1296:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1297:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_DisableWidget
1298:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1299:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1300:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1301:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Disables all the widget elements (sensors) from the scanning process.
1302:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1303:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1304:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1305:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1306:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1307:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1308:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1309:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 41


1310:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
1311:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1312:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
1313:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1314:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
1315:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1316:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor isn't scanned by CapSense_ScanEnabledWidgets().
1317:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is scanned by CapSense_ScanEnabledWidgets().
1318:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
1319:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1320:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1321:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1322:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1323:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_DisableWidget(uint32 widget)
1324:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 956              		.loc 1 1324 0
 957              		.cfi_startproc
 958              	.LVL106:
 959 0000 38B5     		push	{r3, r4, r5, lr}
 960              		.cfi_def_cfa_offset 16
 961              		.cfi_offset 3, -16
 962              		.cfi_offset 4, -12
 963              		.cfi_offset 5, -8
 964              		.cfi_offset 14, -4
 965              	.LVL107:
1325:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 966              		.loc 1 1325 0
 967 0002 0024     		mov	r4, #0
1326:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
1327:.\Generated_Source\PSoC4/CapSense_CSHL.c ****    
1328:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Disable all sensors of widget */
1329:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1330:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1331:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1332:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 0u);
 968              		.loc 1 1332 0
 969 0004 054D     		ldr	r5, .L84
 970              	.LVL108:
 971              	.L82:
 972              		.loc 1 1332 0 is_stmt 0 discriminator 1
 973 0006 281C     		mov	r0, r5
 974 0008 211C     		mov	r1, r4
 975 000a 0022     		mov	r2, #0
 976 000c FFF7FEFF 		bl	CapSense_SetBitValue
 977              	.LVL109:
1333:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 978              		.loc 1 1333 0 is_stmt 1 discriminator 1
 979 0010 0134     		add	r4, r4, #1
 980              	.LVL110:
 981 0012 E4B2     		uxtb	r4, r4
 982              	.LVL111:
1334:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1335:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 983              		.loc 1 1335 0 discriminator 1
 984 0014 042C     		cmp	r4, #4
 985 0016 F6D9     		bls	.L82
1336:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 42


 986              		.loc 1 1336 0
 987              		@ sp needed
 988              	.LVL112:
 989 0018 38BD     		pop	{r3, r4, r5, pc}
 990              	.L85:
 991 001a C046     		.align	2
 992              	.L84:
 993 001c 00000000 		.word	CapSense_sensorEnableMask
 994              		.cfi_endproc
 995              	.LFE55:
 996              		.size	CapSense_DisableWidget, .-CapSense_DisableWidget
 997              		.section	.text.CapSense_FindMaximum,"ax",%progbits
 998              		.align	2
 999              		.global	CapSense_FindMaximum
 1000              		.code	16
 1001              		.thumb_func
 1002              		.type	CapSense_FindMaximum, %function
 1003              	CapSense_FindMaximum:
 1004              	.LFB56:
1337:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1338:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1339:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1340:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1341:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_FindMaximum
1342:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1343:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1344:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1345:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Finds the index of the maximum element within a defined centroid. Checks 
1346:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_sensorSignal[] within a defined centroid and 
1347:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  returns the index of the maximum element. The values below the finger threshold are 
1348:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  ignored.
1349:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The centroid is defined by offset of the first element and a number of elements - count.
1350:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The diplexed centroid requires at least two consecutive elements above
1351:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  FingerThreshold to find the index of the maximum element.
1352:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * 
1353:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1354:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:  Start index of centroid in CapSense_sensorSignal[] array.
1355:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:   number of elements within centroid.
1356:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  fingerThreshold:  Finger threshold.
1357:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:   pointer to diplex table.
1358:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * 
1359:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1360:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns the index of the maximum element within a defined centroid.
1361:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If the index of the maximum element isn't found it returns 0xFF.
1362:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1363:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
1364:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_startOfSlider[] - contains the index of the first slider element
1365:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
1366:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects: 
1367:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1368:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
1369:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1370:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#if (CapSense_IS_DIPLEX_SLIDER)
1371:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint16 fingerThreshold, const uint8 *diplex
1372:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#else 
1373:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint16 fingerThreshold)
1374:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#endif /* (CapSense_IS_DIPLEX_SLIDER) */
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 43


1375:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1005              		.loc 1 1375 0
 1006              		.cfi_startproc
 1007              	.LVL113:
 1008 0000 70B5     		push	{r4, r5, r6, lr}
 1009              		.cfi_def_cfa_offset 16
 1010              		.cfi_offset 4, -16
 1011              		.cfi_offset 5, -12
 1012              		.cfi_offset 6, -8
 1013              		.cfi_offset 14, -4
 1014              	.LVL114:
1376:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
1377:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)        
1378:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curPos = 0u;
1379:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* No centroid at Start */
1380:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCntrdSize = 0u;
1381:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1382:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Biggest centroid is zero */
1383:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdSize = 0u;
1384:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
1385:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1386:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum = CapSense_MAXIMUM_CENTROID;
1387:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		
1388:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 temp = 0u;
1389:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 *startOfSlider = &CapSense_sensorSignal[offset];
 1015              		.loc 1 1389 0
 1016 0002 4000     		lsl	r0, r0, #1
 1017              	.LVL115:
 1018 0004 094D     		ldr	r5, .L91
 1019 0006 1435     		add	r5, r5, #20
 1020 0008 2D18     		add	r5, r5, r0
 1021              	.LVL116:
1388:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 temp = 0u;
 1022              		.loc 1 1388 0
 1023 000a 0026     		mov	r6, #0
1386:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum = CapSense_MAXIMUM_CENTROID;
 1024              		.loc 1 1386 0
 1025 000c FF20     		mov	r0, #255
1390:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1391:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)        
1392:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(diplex != 0u)
1393:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1394:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Initialize */
1395:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 i = 0u;
1396:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 
1397:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make slider x2 as Diplexed */
1398:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 count <<= 1u;
1399:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 while(1u)
1400:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 { 
1401:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
1402:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1403:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (curCtrdStartPos == CapSense_MAXIMUM_CENTROID)
1404:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1405:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Start of centroid */
1406:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = i;
1407:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
1408:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 44


1409:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
1410:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1411:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
1412:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1413:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1414:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else   /* Select biggest and indicate zero start */
1415:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {          
1416:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(curCntrdSize > 0u)
1417:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1418:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* We are at the end of current */
1419:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
1420:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1421:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
1422:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
1423:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1424:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             
1425:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize = 0u;
1426:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1427:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1428:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1429:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     
1430:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     i++; 
1431:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     curPos = diplex[i];
1432:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(i == count)
1433:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1434:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         break;
1435:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }            
1436:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1437:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     
1438:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Find biggest centroid if two are same size, last one wins
1439:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                        We are at the end of current */
1440:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize) 
1441:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1442:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
1443:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
1444:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1445:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1446:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1447:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1448:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Without diplexing */ 
1449:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 biggestCtrdSize = count;
1450:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1451:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
1452:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1453:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Check centroid size */
1454:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_NON_DIPLEX_SLIDER)
1455:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
1456:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #else                    
1457:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(biggestCtrdSize >= 2u)
1458:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_NON_DIPLEX_SLIDER) */
1459:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1460:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
1461:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1462:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)
1463:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (diplex == 0u)
1464:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1465:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = i;
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 45


1466:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1467:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             else
1468:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1469:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = diplex[i];
1470:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }                    
1471:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #elif (CapSense_IS_DIPLEX_SLIDER)                    
1472:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curPos = diplex[i];                    
1473:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1474:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Looking for greater element within centroid */
1475:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
1476:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1477:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(startOfSlider[curPos] > temp)
1478:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1479:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 maximum = i;
1480:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 temp = startOfSlider[curPos];
1481:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1482:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1483:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1484:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 } 
1485:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1486:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for (i = 0u; i < count; i++)
 1026              		.loc 1 1486 0
 1027 000e 0023     		mov	r3, #0
 1028 0010 09E0     		b	.L87
 1029              	.LVL117:
 1030              	.L89:
1487:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {                      
1488:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Looking for greater element within centroid */
1489:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
 1031              		.loc 1 1489 0
 1032 0012 5C00     		lsl	r4, r3, #1
 1033 0014 645B     		ldrh	r4, [r4, r5]
 1034 0016 9442     		cmp	r4, r2
 1035 0018 03D9     		bls	.L88
1490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1491:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(startOfSlider[i] > temp)
 1036              		.loc 1 1491 0
 1037 001a A642     		cmp	r6, r4
 1038 001c 01D2     		bcs	.L88
1492:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1493:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         maximum = i;
1494:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         temp = startOfSlider[i];
 1039              		.loc 1 1494 0
 1040 001e 261C     		mov	r6, r4
 1041              	.LVL118:
1493:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         maximum = i;
 1042              		.loc 1 1493 0
 1043 0020 181C     		mov	r0, r3
 1044              	.LVL119:
 1045              	.L88:
1486:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for (i = 0u; i < count; i++)
 1046              		.loc 1 1486 0
 1047 0022 0133     		add	r3, r3, #1
 1048              	.LVL120:
 1049 0024 DBB2     		uxtb	r3, r3
 1050              	.LVL121:
 1051              	.L87:
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 46


1486:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for (i = 0u; i < count; i++)
 1052              		.loc 1 1486 0 is_stmt 0 discriminator 1
 1053 0026 8B42     		cmp	r3, r1
 1054 0028 F3D3     		bcc	.L89
1495:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1496:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1497:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }    
1498:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1499:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (maximum);
1500:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1055              		.loc 1 1500 0 is_stmt 1
 1056              		@ sp needed
 1057              	.LVL122:
 1058              	.LVL123:
 1059 002a 70BD     		pop	{r4, r5, r6, pc}
 1060              	.L92:
 1061              		.align	2
 1062              	.L91:
 1063 002c 00000000 		.word	.LANCHOR0
 1064              		.cfi_endproc
 1065              	.LFE56:
 1066              		.size	CapSense_FindMaximum, .-CapSense_FindMaximum
 1067              		.global	__aeabi_idiv
 1068              		.section	.text.CapSense_CalcCentroid,"ax",%progbits
 1069              		.align	2
 1070              		.global	CapSense_CalcCentroid
 1071              		.code	16
 1072              		.thumb_func
 1073              		.type	CapSense_CalcCentroid, %function
 1074              	CapSense_CalcCentroid:
 1075              	.LFB57:
1501:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1502:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1503:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1504:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_CalcCentroid
1505:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1506:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1507:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1508:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value calculated according to the index of the maximum element and API
1509:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution.
1510:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1511:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1512:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  type:  widget type.
1513:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:  pointer to diplex table.
1514:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
1515:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:   Start index of centroid in CapSense_sensorSignal[] array.
1516:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:    Number of elements within centroid.
1517:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
1518:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  API resolution.
1519:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  noiseThreshold:  Noise threshold.
1520:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * 
1521:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1522:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the slider.
1523:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1524:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects: 
1525:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1526:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 47


1527:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1528:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u)
1529:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset, 
1530:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint32 resolution, uint16 noiseThreshold)
1531:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #else								
1532:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset, 
1533:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint16 resolution, uint16 noiseThreshold)					
1534:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u) */
1535:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1076              		.loc 1 1535 0
 1077              		.cfi_startproc
 1078              	.LVL124:
 1079 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1080              		.cfi_def_cfa_offset 20
 1081              		.cfi_offset 4, -20
 1082              		.cfi_offset 5, -16
 1083              		.cfi_offset 6, -12
 1084              		.cfi_offset 7, -8
 1085              		.cfi_offset 14, -4
 1086 0002 4746     		mov	r7, r8
 1087 0004 80B4     		push	{r7}
 1088              		.cfi_def_cfa_offset 24
 1089              		.cfi_offset 8, -24
 1090 0006 041C     		mov	r4, r0
 1091 0008 1E1C     		mov	r6, r3
 1092 000a 06AB     		add	r3, sp, #24
 1093              	.LVL125:
 1094 000c 1888     		ldrh	r0, [r3]
 1095              	.LVL126:
1536:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1537:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posPrev;
1538:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posNext;
1539:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1540:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1541:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Helps during centroid calculation */
1542:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1543:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		    static uint16 CapSense_centroid[3u];
1544:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1545:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                
1546:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)                
1547:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 pos;
1548:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1549:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1550:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 position;
1551:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 numerator;
1552:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         int32 denominator;
1553:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		
1554:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		uint16  *startOfSlider = &CapSense_sensorSignal[offset];
 1096              		.loc 1 1554 0
 1097 000e 4900     		lsl	r1, r1, #1
 1098              	.LVL127:
 1099 0010 2E4B     		ldr	r3, .L103
 1100              	.LVL128:
 1101 0012 1433     		add	r3, r3, #20
 1102 0014 5918     		add	r1, r3, r1
 1103              	.LVL129:
1555:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 48


1556:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1557:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             posPrev = 0u;
1558:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1559:.\Generated_Source\PSoC4/CapSense_CSHL.c ****      
1560:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1561:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(type == CapSense_TYPE_RADIAL_SLIDER)
1562:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1563:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1564:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1565:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)                
1566:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1567:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
1568:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                  
1569:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for ROTARY Slider */
1570:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1571:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 { 
1572:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[count - 1u];
1573:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[1u];
1574:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1575:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1576:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1577:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1578:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[0u];
1579:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1580:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1581:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1582:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1583:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[maximum + 1u];
1584:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1585:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1586:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1587:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1588:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1589:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1590:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1591:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1592:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1593:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1594:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)                   
1595:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1596:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(diplex == 0u)
1597:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1598:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = maximum;
1599:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1600:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = maximum + 1u; 
1601:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1602:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1603:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1604:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = diplex[maximum];
1605:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1606:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = diplex[maximum + 1u];
1607:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         count <<= 1u;
1608:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }                    
1609:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #elif (CapSense_IS_DIPLEX_SLIDER)
1610:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1611:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     pos     = diplex[maximum];
1612:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posPrev = diplex[maximum - 1u];
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 49


1613:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = diplex[maximum + 1u];
1614:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     count <<= 1u;                    
1615:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else                    
1616:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1617:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (maximum >= 1u)
 1104              		.loc 1 1617 0
 1105 0016 002C     		cmp	r4, #0
 1106 0018 03D0     		beq	.L102
1618:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1619:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
 1107              		.loc 1 1619 0
 1108 001a 631E     		sub	r3, r4, #1
 1109 001c DBB2     		uxtb	r3, r3
 1110 001e 9846     		mov	r8, r3
 1111              	.LVL130:
 1112 0020 01E0     		b	.L94
 1113              	.LVL131:
 1114              	.L102:
1557:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             posPrev = 0u;
 1115              		.loc 1 1557 0
 1116 0022 0023     		mov	r3, #0
 1117 0024 9846     		mov	r8, r3
 1118              	.LVL132:
 1119              	.L94:
1620:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1621:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = maximum + 1u;
 1120              		.loc 1 1621 0
 1121 0026 631C     		add	r3, r4, #1
 1122 0028 DBB2     		uxtb	r3, r3
 1123 002a 9C46     		mov	ip, r3
 1124              	.LVL133:
1622:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1623:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
1624:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1625:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER)
1626:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[pos];
1627:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else
1628:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
 1125              		.loc 1 1628 0
 1126 002c 6500     		lsl	r5, r4, #1
 1127 002e 6F5A     		ldrh	r7, [r5, r1]
 1128 0030 264D     		ldr	r5, .L103
 1129 0032 6F85     		strh	r7, [r5, #42]
1629:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1630:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     
1631:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for LINEAR Slider */
1632:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
 1130              		.loc 1 1632 0
 1131 0034 002C     		cmp	r4, #0
 1132 0036 06D1     		bne	.L95
1633:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 { 
1634:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = 0u;
 1133              		.loc 1 1634 0
 1134 0038 2A1C     		mov	r2, r5
 1135              	.LVL134:
 1136 003a 1485     		strh	r4, [r2, #40]
1635:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 50


 1137              		.loc 1 1635 0
 1138 003c 6546     		mov	r5, ip
 1139 003e 6B00     		lsl	r3, r5, #1
 1140              	.LVL135:
 1141 0040 5B5A     		ldrh	r3, [r3, r1]
 1142 0042 9385     		strh	r3, [r2, #44]
 1143 0044 13E0     		b	.L96
 1144              	.LVL136:
 1145              	.L95:
1636:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1637:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
 1146              		.loc 1 1637 0
 1147 0046 013A     		sub	r2, r2, #1
 1148              	.LVL137:
 1149 0048 9442     		cmp	r4, r2
 1150 004a 07D1     		bne	.L97
1638:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1639:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
 1151              		.loc 1 1639 0
 1152 004c 4246     		mov	r2, r8
 1153 004e 5300     		lsl	r3, r2, #1
 1154              	.LVL138:
 1155 0050 5A5A     		ldrh	r2, [r3, r1]
 1156 0052 1E4B     		ldr	r3, .L103
 1157 0054 1A85     		strh	r2, [r3, #40]
1640:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = 0u;
 1158              		.loc 1 1640 0
 1159 0056 0022     		mov	r2, #0
 1160 0058 9A85     		strh	r2, [r3, #44]
 1161 005a 08E0     		b	.L96
 1162              	.LVL139:
 1163              	.L97:
1641:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1642:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1643:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1644:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
 1164              		.loc 1 1644 0
 1165 005c 4546     		mov	r5, r8
 1166 005e 6B00     		lsl	r3, r5, #1
 1167              	.LVL140:
 1168 0060 5B5A     		ldrh	r3, [r3, r1]
 1169 0062 1A4A     		ldr	r2, .L103
 1170 0064 1385     		strh	r3, [r2, #40]
1645:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
 1171              		.loc 1 1645 0
 1172 0066 6546     		mov	r5, ip
 1173 0068 6B00     		lsl	r3, r5, #1
 1174 006a 5B5A     		ldrh	r3, [r3, r1]
 1175 006c 9385     		strh	r3, [r2, #44]
 1176              	.L96:
1646:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1647:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_TOTAL_TOUCH_PADS_BASIC_C
1648:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1649:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1650:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1651:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1652:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 51


1653:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1654:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_PREV] > noiseThreshold)
 1177              		.loc 1 1654 0
 1178 006e 174B     		ldr	r3, .L103
 1179 0070 1B8D     		ldrh	r3, [r3, #40]
 1180 0072 8342     		cmp	r3, r0
 1181 0074 03D9     		bls	.L98
1655:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1656:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] -= noiseThreshold;
 1182              		.loc 1 1656 0
 1183 0076 1B1A     		sub	r3, r3, r0
 1184 0078 144A     		ldr	r2, .L103
 1185 007a 1385     		strh	r3, [r2, #40]
 1186 007c 02E0     		b	.L99
 1187              	.L98:
1657:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1658:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1659:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1660:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] = 0u;
 1188              		.loc 1 1660 0
 1189 007e 0022     		mov	r2, #0
 1190 0080 124B     		ldr	r3, .L103
 1191 0082 1A85     		strh	r2, [r3, #40]
 1192              	.L99:
1661:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1662:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1663:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Maximum always greater than fingerThreshold, so greater than noiseThreshold */
1664:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_centroid[CapSense_POS] -= noiseThreshold;
 1193              		.loc 1 1664 0
 1194 0084 114A     		ldr	r2, .L103
 1195 0086 518D     		ldrh	r1, [r2, #42]
 1196              	.LVL141:
 1197 0088 091A     		sub	r1, r1, r0
 1198 008a 89B2     		uxth	r1, r1
 1199 008c 5185     		strh	r1, [r2, #42]
1665:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1666:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1667:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_NEXT] > noiseThreshold)
 1200              		.loc 1 1667 0
 1201 008e 938D     		ldrh	r3, [r2, #44]
 1202 0090 8342     		cmp	r3, r0
 1203 0092 02D9     		bls	.L100
1668:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1669:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] -= noiseThreshold;
 1204              		.loc 1 1669 0
 1205 0094 181A     		sub	r0, r3, r0
 1206 0096 9085     		strh	r0, [r2, #44]
 1207 0098 02E0     		b	.L101
 1208              	.L100:
1670:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1671:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1672:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1673:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] = 0u;
 1209              		.loc 1 1673 0
 1210 009a 0022     		mov	r2, #0
 1211 009c 0B4B     		ldr	r3, .L103
 1212 009e 9A85     		strh	r2, [r3, #44]
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 52


 1213              	.L101:
1674:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1675:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1676:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1677:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 - Si-1 */
1678:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         numerator = (uint32) CapSense_centroid[CapSense_POS_NEXT] -
 1214              		.loc 1 1678 0
 1215 00a0 0A4B     		ldr	r3, .L103
 1216 00a2 9A8D     		ldrh	r2, [r3, #44]
1679:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     (uint32) CapSense_centroid[CapSense_POS_PREV];
 1217              		.loc 1 1679 0
 1218 00a4 1D8D     		ldrh	r5, [r3, #40]
1678:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         numerator = (uint32) CapSense_centroid[CapSense_POS_NEXT] -
 1219              		.loc 1 1678 0
 1220 00a6 501B     		sub	r0, r2, r5
 1221              	.LVL142:
1680:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1681:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 + Si + Si-1 */
1682:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (int32) CapSense_centroid[CapSense_POS_PREV] + 
 1222              		.loc 1 1682 0
 1223 00a8 6918     		add	r1, r5, r1
 1224 00aa 8918     		add	r1, r1, r2
 1225              	.LVL143:
1683:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS] + 
1684:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS_NEXT];
1685:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1686:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* (numerator/denominator) + maximum */
1687:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
 1226              		.loc 1 1687 0
 1227 00ac 0002     		lsl	r0, r0, #8
 1228              	.LVL144:
 1229 00ae FFF7FEFF 		bl	__aeabi_idiv
 1230              	.LVL145:
 1231 00b2 2402     		lsl	r4, r4, #8
 1232              	.LVL146:
 1233 00b4 0019     		add	r0, r0, r4
 1234              	.LVL147:
1688:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1689:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if(CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1690:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Only required for RADIAL Slider */
1691:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(denominator < 0)
1692:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1693:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
1694:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1695:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1696:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1697:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator *= (int16)resolution;
 1235              		.loc 1 1697 0
 1236 00b6 36B2     		sxth	r6, r6
 1237 00b8 7043     		mul	r0, r6
 1238              	.LVL148:
1698:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1699:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Round result and put it to uint8 */
1700:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + CapSense_CENTROID_ROUND_VALUE));
 1239              		.loc 1 1700 0
 1240 00ba FE22     		mov	r2, #254
 1241 00bc D201     		lsl	r2, r2, #7
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 53


 1242 00be 8018     		add	r0, r0, r2
 1243              	.LVL149:
 1244 00c0 000C     		lsr	r0, r0, #16
 1245              	.LVL150:
 1246 00c2 C0B2     		uxtb	r0, r0
 1247              	.LVL151:
1701:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1702:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
1703:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }    
 1248              		.loc 1 1703 0
 1249              		@ sp needed
 1250              	.LVL152:
 1251 00c4 04BC     		pop	{r2}
 1252 00c6 9046     		mov	r8, r2
 1253 00c8 F0BD     		pop	{r4, r5, r6, r7, pc}
 1254              	.L104:
 1255 00ca C046     		.align	2
 1256              	.L103:
 1257 00cc 00000000 		.word	.LANCHOR0
 1258              		.cfi_endproc
 1259              	.LFE57:
 1260              		.size	CapSense_CalcCentroid, .-CapSense_CalcCentroid
 1261              		.section	.text.CapSense_GetCentroidPos,"ax",%progbits
 1262              		.align	2
 1263              		.global	CapSense_GetCentroidPos
 1264              		.code	16
 1265              		.thumb_func
 1266              		.type	CapSense_GetCentroidPos, %function
 1267              	CapSense_GetCentroidPos:
 1268              	.LFB58:
1704:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1705:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1706:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1707:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1708:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1709:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetCentroidPos
1710:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1711:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1712:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1713:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1714:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1715:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1716:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1717:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1718:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1719:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1720:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1721:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__LS           5
1722:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * 
1723:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1724:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the linear slider.
1725:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1726:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
1727:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1728:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1729:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1730:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 54


1731:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1732:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1733:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1734:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1735:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1736:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1737:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1738:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1739:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1740:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1741:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1742:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1743:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_GetCentroidPos(uint32 widget)
1744:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1269              		.loc 1 1744 0
 1270              		.cfi_startproc
 1271              	.LVL153:
 1272 0000 00B5     		push	{lr}
 1273              		.cfi_def_cfa_offset 4
 1274              		.cfi_offset 14, -4
 1275 0002 83B0     		sub	sp, sp, #12
 1276              		.cfi_def_cfa_offset 16
 1277              	.LVL154:
1745:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1746:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             const uint8 *diplex;
1747:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1748:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 
1749:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1750:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1751:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1752:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];  
1753:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1754:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1755:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1756:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1757:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1758:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1759:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1760:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1761:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1762:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1763:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1764:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
1765:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
1766:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
1767:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1768:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(widget < CapSense_TOTAL_DIPLEXED_SLIDERS_COUNT)
1769:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1770:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 maximum = CapSense_diplexTable[widget];
1771:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = &CapSense_diplexTable[maximum];
1772:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1773:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1774:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1775:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = 0u;
1776:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1777:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1778:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 55


1779:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		/* Find Maximum within centroid */      
1780:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#if (CapSense_IS_DIPLEX_SLIDER)        
1781:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			maximum = CapSense_FindMaximum(offset, count, (uint16)CapSense_fingerThreshold[widget], diplex);
1782:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#else
1783:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			maximum = CapSense_FindMaximum(offset, count, (uint16)CapSense_fingerThreshold[widget]);
 1278              		.loc 1 1783 0
 1279 0004 0020     		mov	r0, #0
 1280              	.LVL155:
 1281 0006 0521     		mov	r1, #5
 1282 0008 6422     		mov	r2, #100
 1283 000a FFF7FEFF 		bl	CapSense_FindMaximum
 1284              	.LVL156:
1784:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#endif /* (CapSense_IS_DIPLEX_SLIDER) */
1785:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1786:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != 0xFFu)
 1285              		.loc 1 1786 0
 1286 000e FF28     		cmp	r0, #255
 1287 0010 08D0     		beq	.L107
1787:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1788:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
1789:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum, 
 1288              		.loc 1 1789 0
 1289 0012 1E23     		mov	r3, #30
 1290 0014 0093     		str	r3, [sp]
 1291 0016 0021     		mov	r1, #0
 1292 0018 0522     		mov	r2, #5
 1293 001a C823     		mov	r3, #200
 1294 001c 5B01     		lsl	r3, r3, #5
 1295 001e FFF7FEFF 		bl	CapSense_CalcCentroid
 1296              	.LVL157:
 1297 0022 00E0     		b	.L106
 1298              	.LVL158:
 1299              	.L107:
1790:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1791:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1792:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1793:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1794:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1795:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1796:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
1797:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1798:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     
1799:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1800:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1801:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
1802:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1803:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1804:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1805:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1806:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1807:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1808:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) || 
1809:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1810:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1811:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
1812:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1813:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 56


1814:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1815:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
1816:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1817:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1818:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
1819:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
1820:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1821:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1822:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1823:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
1824:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1825:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
1826:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1827:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1828:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
1829:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1830:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1831:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] =
1832:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
1833:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1834:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1835:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /*(0u != (CapSense_MEDIAN_FILTER &
1836:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *         CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1837:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1838:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1839:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if(0u!=(CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1840:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) 
1841:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1842:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1843:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
1844:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1845:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1846:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]=CapSense_posFiltersData[posInd
1847:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1848:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1849:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
1850:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1851:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1852:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1853:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1854:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER)) 
1855:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1856:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
1857:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1858:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1859:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1860:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER & \
1861:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1862:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1863:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1864:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1865:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
1866:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1867:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
1868:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1869:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1870:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }                                
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 57


1871:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER & \
1872:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1873:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1874:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1875:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1876:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
1877:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1878:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position,
1879:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1880:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1881:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1882:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER & \
1883:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1884:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1885:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1886:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1887:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1888:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1889:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1890:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1891:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1892:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum wasn't found */
1893:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
 1300              		.loc 1 1893 0
 1301 0024 0148     		ldr	r0, .L108
 1302              	.LVL159:
 1303              	.L106:
1894:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1895:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if(0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1896:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
1897:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1898:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1899:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
1900:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1901:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1902:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1903:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1904:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1905:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
1906:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1304              		.loc 1 1906 0
 1305 0026 03B0     		add	sp, sp, #12
 1306              		@ sp needed
 1307 0028 00BD     		pop	{pc}
 1308              	.L109:
 1309 002a C046     		.align	2
 1310              	.L108:
 1311 002c FFFF0000 		.word	65535
 1312              		.cfi_endproc
 1313              	.LFE58:
 1314              		.size	CapSense_GetCentroidPos, .-CapSense_GetCentroidPos
 1315              		.section	.text.CapSense_GetRadialCentroidPos,"ax",%progbits
 1316              		.align	2
 1317              		.global	CapSense_GetRadialCentroidPos
 1318              		.code	16
 1319              		.thumb_func
 1320              		.type	CapSense_GetRadialCentroidPos, %function
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 58


 1321              	CapSense_GetRadialCentroidPos:
 1322              	.LFB59:
1907:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
1908:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1909:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1910:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1911:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1912:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetRadialCentroidPos
1913:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1914:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1915:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1916:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1917:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1918:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1919:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1920:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1921:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1922:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1923:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every radial slider widget there are defines in this format:
1924:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__RS           5
1925:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * 
1926:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1927:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the radial slider.
1928:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1929:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
1930:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
1931:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1932:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1933:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1934:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1935:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF.
1936:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1937:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1938:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1939:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1940:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1941:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1942:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so 
1943:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1944:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1945:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1946:.\Generated_Source\PSoC4/CapSense_CSHL.c ****      uint16 CapSense_GetRadialCentroidPos(uint32 widget)
1947:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1323              		.loc 1 1947 0
 1324              		.cfi_startproc
 1325              	.LVL160:
 1326 0000 00B5     		push	{lr}
 1327              		.cfi_def_cfa_offset 4
 1328              		.cfi_offset 14, -4
 1329 0002 83B0     		sub	sp, sp, #12
 1330              		.cfi_def_cfa_offset 16
 1331              	.LVL161:
1948:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1949:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1950:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1951:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget]; 
1952:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 59


1953:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1954:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1955:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1956:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1957:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1958:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1959:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1960:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1961:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1962:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1963:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
1964:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
1965:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1966:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		/* Find Maximum within centroid */      
1967:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#if (CapSense_IS_DIPLEX_SLIDER)        
1968:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			maximum = CapSense_FindMaximum(offset, count, (uint16)CapSense_fingerThreshold[widget], 0u);
1969:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#else
1970:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			maximum = CapSense_FindMaximum(offset, count, (uint16)CapSense_fingerThreshold[widget]);
 1332              		.loc 1 1970 0
 1333 0004 0020     		mov	r0, #0
 1334              	.LVL162:
 1335 0006 0521     		mov	r1, #5
 1336 0008 6422     		mov	r2, #100
 1337 000a FFF7FEFF 		bl	CapSense_FindMaximum
 1338              	.LVL163:
1971:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#endif /* (CapSense_IS_DIPLEX_SLIDER) */
1972:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1973:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != CapSense_MAXIMUM_CENTROID)
 1339              		.loc 1 1973 0
 1340 000e FF28     		cmp	r0, #255
 1341 0010 08D0     		beq	.L112
1974:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1975:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
1976:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum, 
 1342              		.loc 1 1976 0
 1343 0012 1E23     		mov	r3, #30
 1344 0014 0093     		str	r3, [sp]
 1345 0016 0021     		mov	r1, #0
 1346 0018 0522     		mov	r2, #5
 1347 001a C823     		mov	r3, #200
 1348 001c 5B01     		lsl	r3, r3, #5
 1349 001e FFF7FEFF 		bl	CapSense_CalcCentroid
 1350              	.LVL164:
 1351 0022 00E0     		b	.L111
 1352              	.LVL165:
 1353              	.L112:
1977:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1978:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1979:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1980:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this Radial slider has enabled filters */
1981:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1982:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1983:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
1984:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1985:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     
1986:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1987:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 60


1988:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
1989:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1990:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1991:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1992:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1993:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1994:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1995:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))  || 
1996:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1997:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1998:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
1999:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2000:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
2001:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
2002:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
2003:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
2004:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2005:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
2006:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
2007:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2008:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
2009:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2010:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
2011:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2012:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2013:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2014:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2015:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
2016:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2017:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2018:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = 
2019:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                               CapSense_posFiltersDa
2020:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2021:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2022:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_MEDIAN_FILTER & 
2023:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2024:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2025:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2026:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_AVERAGING_FILTER & \
2027:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2028:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2029:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2030:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2031:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position, 
2032:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2033:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2034:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]= CapSense_posFiltersData[posIn
2035:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2036:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2037:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2038:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2039:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2040:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2041:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2042:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2043:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2044:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 61


2045:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2046:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2047:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2048:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER & 
2049:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2050:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2051:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2052:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2053:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
2054:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2055:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
2056:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2057:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2058:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2059:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER & 
2060:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2061:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2062:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2063:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2064:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2065:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2066:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position, 
2067:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                          CapSense_posFiltersData[po
2068:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2069:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2070:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER &
2071:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2072:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2073:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2074:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2075:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2076:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2077:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2078:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2079:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2080:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum was not found */
2081:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
 1354              		.loc 1 2081 0
 1355 0024 0148     		ldr	r0, .L113
 1356              	.LVL166:
 1357              	.L111:
2082:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2083:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
2084:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
2085:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2086:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2087:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2088:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2089:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2090:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2091:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2092:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
2093:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1358              		.loc 1 2093 0
 1359 0026 03B0     		add	sp, sp, #12
 1360              		@ sp needed
 1361 0028 00BD     		pop	{pc}
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 62


 1362              	.L114:
 1363 002a C046     		.align	2
 1364              	.L113:
 1365 002c FFFF0000 		.word	65535
 1366              		.cfi_endproc
 1367              	.LFE59:
 1368              		.size	CapSense_GetRadialCentroidPos, .-CapSense_GetRadialCentroidPos
 1369              		.section	.text.CapSense_GetWidgetNumber,"ax",%progbits
 1370              		.align	2
 1371              		.global	CapSense_GetWidgetNumber
 1372              		.code	16
 1373              		.thumb_func
 1374              		.type	CapSense_GetWidgetNumber, %function
 1375              	CapSense_GetWidgetNumber:
 1376              	.LFB60:
2094:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
2095:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2096:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2097:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u)
2098:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2099:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetTouchCentroidPos
2100:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2101:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2102:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2103:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If a finger is present on a touchpad, this function calculates the X and Y
2104:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  position of the finger by calculating the centroids within touchpad specified
2105:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  range. The X and Y positions are calculated according to the API resolutions set in the
2106:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense customizer. Returns 1 if a finger is on the touchpad.
2107:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The position filter is applied to the result if enabled.
2108:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This function is available only if a touch pad is defined by the CapSense
2109:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  customizer.
2110:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2111:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2112:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number. 
2113:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every touchpad widget there are defines in this format:
2114:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__TP            5
2115:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2116:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     Pointer to the array of two uint16 elements, where result
2117:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result of calculation of X and Y position are stored.
2118:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[0u]  - position of X
2119:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[1u]  - position of Y
2120:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2121:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2122:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a 1 if a finger is on the touch pad, 0 - if not.
2123:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2124:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2125:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2126:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2127:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2128:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   There are no checks of the widget type argument provided to this function.
2129:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   The unproper widget type provided will cause unexpected position
2130:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   calculations.
2131:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2132:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2133:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetTouchCentroidPos(uint32 widget, uint16* pos)
2134:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2135:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 63


2136:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posXIndex;
2137:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posYIndex;
2138:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
2139:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
2140:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2141:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2142:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2143:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2144:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint16 tempPos;
2145:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2146:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2147:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                */
2148:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2149:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxX;
2150:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxY;
2151:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posX;
2152:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posY;
2153:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 touch = 0u;
2154:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
2155:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
2156:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2157:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within X centroid */
2158:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
2159:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget], 0u);
2160:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
2161:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget]);
2162:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2163:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2164:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (MaxX != CapSense_MAXIMUM_CENTROID)
2165:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2166:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             offset = CapSense_rawDataIndex[widget + 1u];
2167:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             count = CapSense_numberOfSensors[widget + 1u];
2168:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2169:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find Maximum within Y centroid */
2170:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_DIPLEX_SLIDER)
2171:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u], 0
2172:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #else
2173:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u]);
2174:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2175:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2176:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (MaxY != CapSense_MAXIMUM_CENTROID)
2177:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2178:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* X and Y maximums are found = true touch */
2179:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 touch = 1u;
2180:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 
2181:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate Y centroid */
2182:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 posY = CapSense_CalcCentroid(MaxY, offset, count, 
2183:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget + 1u], CapSense_noiseThreshold[widget + 1u
2184:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 
2185:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate X centroid */
2186:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 offset = CapSense_rawDataIndex[widget];
2187:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 count = CapSense_numberOfSensors[widget];
2188:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 
2189:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 posX = CapSense_CalcCentroid(MaxX, offset, count, 
2190:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget],CapSense_noiseThreshold[widget]);
2191:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
2192:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 64


2193:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Check if this TP has enabled filters */
2194:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
2195:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2196:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Calculate position to store filters data */
2197:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posXIndex  = firstTimeIndex + 1u;
2198:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posYIndex  = CapSense_posFiltersData[widget + 1u];
2199:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
2200:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (0u == CapSense_posFiltersData[firstTimeIndex])
2201:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2202:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Init filters */
2203:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posXIndex] = posX;
2204:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posYIndex] = posY;
2205:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2206:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if((0u != (CapSense_MEDIAN_FILTER & \
2207:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK))|| \
2208:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 (0u != (CapSense_AVERAGING_FILTER & \
2209:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2210:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2211:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) || 
2212:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
2213:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2214:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = posX;
2215:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = posY;
2216:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2217:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
2218:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2219:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *    (0u != (CapSense_AVERAGING_FILTER & \
2220:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *            CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2221:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2222:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             
2223:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[firstTimeIndex] = 1u;
2224:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2225:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
2226:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2227:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Do filtering */
2228:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2229:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2230:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2231:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2232:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_MedianFilter(posX,
2233:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2234:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2235:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = 
2236:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2237:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2238:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     
2239:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2240:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_MedianFilter(posY,
2241:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2242:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2243:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = 
2244:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2245:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2246:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2247:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 
2248:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_MEDIAN_FILTER & \
2249:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 65


2250:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2251:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2252:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if(0u !=(CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_M
2253:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2254:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2255:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2256:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_AveragingFilter(posX,
2257:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2258:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2259:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = 
2260:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2261:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2262:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     
2263:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2264:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_AveragingFilter(posY, 
2265:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2266:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2267:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = 
2268:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2269:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2270:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2271:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2272:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2273:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2274:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2275:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2276:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR2_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2277:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2278:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2279:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR2Filter(posX, 
2280:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                            CapSense_posFiltersData[
2281:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2282:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     
2283:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR2Filter(posY, 
2284:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2285:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2286:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2287:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 
2288:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR2_FILTER & \
2289:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2290:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2291:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2292:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR4_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2293:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
2294:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2295:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR4Filter((uint16)posX,
2296:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2297:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2298:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2299:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR4Filter((uint16)posY,
2300:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2301:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2302:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2303:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 
2304:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR4_FILTER & \
2305:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2306:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 66


2307:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2308:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_JITTER_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2309:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2310:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     {
2311:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posX = (uint8) CapSense_JitterFilter(posX, 
2312:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2313:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posXIndex] = posX;
2314:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         
2315:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posY = (uint8) CapSense_JitterFilter(posY, 
2316:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2317:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posYIndex] = posY;
2318:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     }
2319:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_JITTER_FILTER & \
2320:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2321:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2322:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2323:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2324:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2325:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2326:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Save positions */
2327:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = posX;
2328:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = posY;
2329:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2330:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2331:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2332:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2333:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(touch == 0u)
2334:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2335:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
2336:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if ((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2337:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2338:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2339:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2340:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2341:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2342:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2343:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (touch);
2344:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2345:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u) */
2346:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2347:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2348:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2349:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2350:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) )
2351:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2352:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_MedianFilter
2353:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2354:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2355:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2356:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Median filter function. 
2357:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The median filter looks at the three most recent samples and reports the 
2358:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  median value.
2359:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2360:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2361:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2362:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2363:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 67


2364:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2365:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2366:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2367:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2368:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2369:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2370:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2371:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2372:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2373:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2374:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2375:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
2376:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2377:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 tmp;
2378:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2379:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
2380:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2381:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             tmp = x2;
2382:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x1;
2383:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x1 = tmp;
2384:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2385:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2386:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x2 > x3)
2387:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2388:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x3;
2389:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2390:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2391:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((x1 > x2) ? x1 : x2);
2392:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2393:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2394:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2395:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) ) */
2396:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2397:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2398:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) || \
2399:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER)) )
2400:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2401:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_AveragingFilter
2402:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2403:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2404:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2405:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Averaging filter function.
2406:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The averaging filter looks at the three most recent samples of a position and
2407:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  reports the averaging value.
2408:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2409:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2410:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2411:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2412:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2413:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2414:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2415:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2416:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2417:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2418:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2419:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2420:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 68


2421:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2422:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2423:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2424:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_AveragingFilter(uint16 x1, uint16 x2, uint16 x3)
2425:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2426:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp = ((uint32)x1 + (uint32)x2 + (uint32)x3) / 3u;
2427:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2428:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2429:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2430:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) || \
2431:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER) ) */
2432:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2433:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2434:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2435:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2436:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2437:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR2Filter
2438:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2439:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2440:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2441:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/2 filter function. IIR1/2 = 1/2current + 1/2previous.
2442:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2443:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2444:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2445:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2446:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2447:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2448:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2449:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2450:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2451:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2452:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2453:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2454:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2455:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2456:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2457:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR2Filter(uint16 x1, uint16 x2)
2458:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2459:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2460:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2461:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/2 Current Value+ 1/2 Previous Value */
2462:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
2463:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 1u;
2464:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
2465:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2466:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2467:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2468:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2469:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2470:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2471:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2472:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2473:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2474:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2475:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR4Filter
2476:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2477:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 69


2478:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2479:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/4 filter function. IIR1/4 = 1/4current + 3/4previous.
2480:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2481:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2482:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2483:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2484:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2485:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2486:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a filtered value.
2487:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2488:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2489:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2490:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2491:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2492:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2493:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2494:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2495:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR4Filter(uint16 x1, uint16 x2)
2496:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2497:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2498:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2499:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/4 Current Value + 3/4 Previous Value */
2500:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
2501:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += ((uint32)x2 << 1u);
2502:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 2u;
2503:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2504:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2505:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2506:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2507:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2508:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2509:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2510:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2511:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2512:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) || \
2513:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)))  
2514:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2515:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: uint16 CapSense_JitterFilter
2516:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2517:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2518:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2519:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Jitter filter function.
2520:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2521:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2522:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2523:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2524:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2525:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2526:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2527:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2528:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2529:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2530:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2531:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2532:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2533:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2534:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 70


2535:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_JitterFilter(uint16 x1, uint16 x2)
2536:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2537:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
2538:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2539:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x1--;
2540:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2541:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2542:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2543:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (x1 < x2)
2544:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2545:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 x1++;
2546:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2547:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2548:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
2549:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return x1;
2550:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2551:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2552:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2553:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	   *    (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2554:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2555:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2556:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2557:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))
2558:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2559:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR8Filter
2560:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2561:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2562:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2563:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/8 filter function. IIR1/8 = 1/8current + 7/8previous.
2564:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2565:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2566:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2567:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2568:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2569:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2570:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2571:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2572:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2573:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2574:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2575:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2576:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2577:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2578:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2579:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2580:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR8Filter(uint16 x1, uint16 x2)
2581:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2582:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2583:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2584:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/8 Current Value + 7/8 Previous Value */
2585:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2586:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 3u) - ((uint32)x2));
2587:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 3u;
2588:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
2589:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2590:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2591:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)) */
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 71


2592:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2593:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2594:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
2595:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2596:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR16Filter
2597:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2598:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2599:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2600:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/16 filter function. IIR1/16 = 1/16current + 15/16previous.
2601:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2602:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2603:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2604:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2605:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2606:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2607:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2608:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2609:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2610:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2611:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2612:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2613:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2614:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2615:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2616:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2617:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR16Filter(uint16 x1, uint16 x2)
2618:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2619:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2620:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2621:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/16 Current Value + 15/16 Previous Value */
2622:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2623:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 4u) - ((uint32)x2));
2624:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 4u;
2625:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2626:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2627:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2628:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER) */
2629:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2630:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2631:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT))
2632:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2633:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2634:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetMatrixButtonPos
2635:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2636:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2637:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2638:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Function calculates and returns a touch position (column and row) for the matrix
2639:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  button widget.
2640:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2641:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2642:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  widget number;
2643:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     pointer to an array of two uint8, where touch position will be 
2644:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *           stored:
2645:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[0] - column position;
2646:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[1] - raw position.
2647:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2648:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 72


2649:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns 1 if row and column sensors of matrix button are active, 0 - in other
2650:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  cases.
2651:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2652:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2653:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_fingerThreshold[ ] - used to store the finger threshold for all widgets.
2654:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_sensorSignal[ ] - used to store a difference between the current value of 
2655:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  raw data and a previous value of the baseline.
2656:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2657:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2658:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2659:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2660:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2661:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetMatrixButtonPos(uint32 widget, uint8* pos)
2662:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2663:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
2664:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 retVal = 0u;
2665:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 row_sig_max = 0u;
2666:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 col_sig_max = 0u;
2667:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 row_ind = 0u;
2668:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 col_ind = 0u;
2669:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2670:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(widget) == 1u)
2671:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2672:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2673:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget]; i < (CapSense_rawDataIndex[widget] + \
2674:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget]); i++)
2675:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2676:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > col_sig_max)
2677:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2678:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_ind = i;
2679:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_sig_max = CapSense_sensorSignal[i];
2680:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2681:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2682:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2683:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2684:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget+1u]; i < (CapSense_rawDataIndex[widget+1u] + \
2685:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget+1u]); i++)
2686:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2687:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > row_sig_max)
2688:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2689:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_ind = i;
2690:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_sig_max = CapSense_sensorSignal[i];
2691:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2692:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2693:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2694:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if((col_sig_max >= CapSense_fingerThreshold[widget]) && \
2695:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                (row_sig_max >= CapSense_fingerThreshold[widget+1u]))
2696:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2697:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = col_ind - CapSense_rawDataIndex[widget];
2698:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = row_ind - CapSense_rawDataIndex[widget+1u];
2699:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 retVal = 1u;
2700:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2701:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2702:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (retVal);
2703:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2704:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2705:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 73


2706:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2707:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2708:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetWidgetNumber
2709:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2710:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2711:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2712:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor.
2713:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2714:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2715:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be 
2716:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2717:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2718:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2719:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor. 
2720:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2721:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2722:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
2723:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
2724:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2725:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2726:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2727:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2728:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_GetWidgetNumber(uint32 sensor)
2729:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1377              		.loc 1 2729 0
 1378              		.cfi_startproc
 1379              	.LVL167:
2730:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return((uint32)CapSense_widgetNumber[sensor]);
 1380              		.loc 1 2730 0
 1381 0000 014B     		ldr	r3, .L116
 1382 0002 185C     		ldrb	r0, [r3, r0]
 1383              	.LVL168:
2731:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1384              		.loc 1 2731 0
 1385              		@ sp needed
 1386 0004 7047     		bx	lr
 1387              	.L117:
 1388 0006 C046     		.align	2
 1389              	.L116:
 1390 0008 00000000 		.word	CapSense_widgetNumber
 1391              		.cfi_endproc
 1392              	.LFE60:
 1393              		.size	CapSense_GetWidgetNumber, .-CapSense_GetWidgetNumber
 1394              		.section	.text.CapSense_GetLowBaselineReset,"ax",%progbits
 1395              		.align	2
 1396              		.global	CapSense_GetLowBaselineReset
 1397              		.code	16
 1398              		.thumb_func
 1399              		.type	CapSense_GetLowBaselineReset, %function
 1400              	CapSense_GetLowBaselineReset:
 1401              	.LFB61:
2732:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2733:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2734:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetLowBaselineReset
2735:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2736:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2737:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 74


2738:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the low baseline reset threshold value for the  sensor.
2739:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2740:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2741:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be 
2742:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2743:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2744:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2745:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  low baseline reset threshold value a sensor.
2746:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2747:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2748:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_lowBaselineReset[]  - stores low baseline reset values.
2749:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
2750:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2751:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2752:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2753:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2754:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetLowBaselineReset(uint32 sensor)
2755:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1402              		.loc 1 2755 0
 1403              		.cfi_startproc
 1404              	.LVL169:
2756:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_lowBaselineReset[sensor]);
 1405              		.loc 1 2756 0
 1406 0000 014B     		ldr	r3, .L119
 1407 0002 185C     		ldrb	r0, [r3, r0]
 1408              	.LVL170:
2757:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1409              		.loc 1 2757 0
 1410              		@ sp needed
 1411 0004 7047     		bx	lr
 1412              	.L120:
 1413 0006 C046     		.align	2
 1414              	.L119:
 1415 0008 00000000 		.word	.LANCHOR1
 1416              		.cfi_endproc
 1417              	.LFE61:
 1418              		.size	CapSense_GetLowBaselineReset, .-CapSense_GetLowBaselineReset
 1419              		.section	.text.CapSense_GetDebounce,"ax",%progbits
 1420              		.align	2
 1421              		.global	CapSense_GetDebounce
 1422              		.code	16
 1423              		.thumb_func
 1424              		.type	CapSense_GetDebounce, %function
 1425              	CapSense_GetDebounce:
 1426              	.LFB62:
2758:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2759:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2760:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDebounce
2761:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2762:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2763:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2764:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns a debounce value.
2765:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2766:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2767:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be 
2768:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2769:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 75


2770:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2771:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Debounce value 
2772:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2773:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2774:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounce[]  - stores the debounce value.
2775:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
2776:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2777:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2778:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2779:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2780:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetDebounce(uint32 widget)
2781:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1427              		.loc 1 2781 0
 1428              		.cfi_startproc
 1429              	.LVL171:
2782:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_debounce[widget]);
2783:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1430              		.loc 1 2783 0
 1431 0000 0120     		mov	r0, #1
 1432              	.LVL172:
 1433              		@ sp needed
 1434 0002 7047     		bx	lr
 1435              		.cfi_endproc
 1436              	.LFE62:
 1437              		.size	CapSense_GetDebounce, .-CapSense_GetDebounce
 1438              		.global	CapSense_numberOfSensors
 1439              		.global	CapSense_rawDataIndex
 1440              		.global	CapSense_debounce
 1441              		.global	CapSense_hysteresis
 1442              		.global	CapSense_noiseThreshold
 1443              		.global	CapSense_fingerThreshold
 1444              		.global	CapSense_lowBaselineReset
 1445              		.comm	CapSense_lowBaselineResetCnt,5,4
 1446              		.global	CapSense_sensorOnMask
 1447              		.global	CapSense_sensorSignal
 1448              		.global	CapSense_sensorBaselineLow
 1449              		.global	CapSense_sensorBaseline
 1450              		.section	.rodata
 1451              		.align	2
 1452              		.type	CapSense_numberOfSensors, %object
 1453              		.size	CapSense_numberOfSensors, 1
 1454              	CapSense_numberOfSensors:
 1455 0000 05       		.byte	5
 1456 0001 000000   		.space	3
 1457              		.type	CapSense_rawDataIndex, %object
 1458              		.size	CapSense_rawDataIndex, 1
 1459              	CapSense_rawDataIndex:
 1460 0004 00       		.space	1
 1461 0005 000000   		.space	3
 1462              		.type	CapSense_debounce, %object
 1463              		.size	CapSense_debounce, 1
 1464              	CapSense_debounce:
 1465 0008 01       		.byte	1
 1466 0009 000000   		.space	3
 1467              		.type	CapSense_hysteresis, %object
 1468              		.size	CapSense_hysteresis, 2
 1469              	CapSense_hysteresis:
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 76


 1470 000c 0000     		.space	2
 1471 000e 0000     		.space	2
 1472              		.type	CapSense_noiseThreshold, %object
 1473              		.size	CapSense_noiseThreshold, 2
 1474              	CapSense_noiseThreshold:
 1475 0010 1E00     		.short	30
 1476 0012 0000     		.space	2
 1477              		.type	CapSense_fingerThreshold, %object
 1478              		.size	CapSense_fingerThreshold, 2
 1479              	CapSense_fingerThreshold:
 1480 0014 6400     		.short	100
 1481 0016 0000     		.data
 1482              		.align	2
 1483              		.set	.LANCHOR1,. + 0
 1484              		.type	CapSense_lowBaselineReset, %object
 1485              		.size	CapSense_lowBaselineReset, 5
 1486              	CapSense_lowBaselineReset:
 1487 0000 05       		.byte	5
 1488 0001 05       		.byte	5
 1489 0002 05       		.byte	5
 1490 0003 05       		.byte	5
 1491 0004 05       		.byte	5
 1492 0005 000000   		.bss
 1493              		.align	2
 1494              		.set	.LANCHOR0,. + 0
 1495              		.type	CapSense_sensorBaseline, %object
 1496              		.size	CapSense_sensorBaseline, 10
 1497              	CapSense_sensorBaseline:
 1498 0000 00000000 		.space	10
 1498      00000000 
 1498      0000
 1499 000a 0000     		.space	2
 1500              		.type	CapSense_sensorBaselineLow, %object
 1501              		.size	CapSense_sensorBaselineLow, 5
 1502              	CapSense_sensorBaselineLow:
 1503 000c 00000000 		.space	5
 1503      00
 1504 0011 000000   		.space	3
 1505              		.type	CapSense_sensorSignal, %object
 1506              		.size	CapSense_sensorSignal, 10
 1507              	CapSense_sensorSignal:
 1508 0014 00000000 		.space	10
 1508      00000000 
 1508      0000
 1509 001e 0000     		.space	2
 1510              		.type	CapSense_debounceCounter.5299, %object
 1511              		.size	CapSense_debounceCounter.5299, 1
 1512              	CapSense_debounceCounter.5299:
 1513 0020 00       		.space	1
 1514 0021 000000   		.space	3
 1515              		.type	CapSense_sensorOnMask, %object
 1516              		.size	CapSense_sensorOnMask, 1
 1517              	CapSense_sensorOnMask:
 1518 0024 00       		.space	1
 1519 0025 000000   		.space	3
 1520              		.type	CapSense_centroid.5351, %object
 1521              		.size	CapSense_centroid.5351, 6
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 77


 1522              	CapSense_centroid.5351:
 1523 0028 00000000 		.space	6
 1523      0000
 1524 002e 0000     		.text
 1525              	.Letext0:
 1526              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1527              		.file 3 ".\\Generated_Source\\PSoC4\\CapSense.h"
 1528              		.file 4 ".\\Generated_Source\\PSoC4\\CapSense_PVT.h"
 1529              		.section	.debug_info,"",%progbits
 1530              	.Ldebug_info0:
 1531 0000 660C0000 		.4byte	0xc66
 1532 0004 0400     		.2byte	0x4
 1533 0006 00000000 		.4byte	.Ldebug_abbrev0
 1534 000a 04       		.byte	0x4
 1535 000b 01       		.uleb128 0x1
 1536 000c CB000000 		.4byte	.LASF95
 1537 0010 01       		.byte	0x1
 1538 0011 3D040000 		.4byte	.LASF96
 1539 0015 5E010000 		.4byte	.LASF97
 1540 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1541 001d 00000000 		.4byte	0
 1542 0021 00000000 		.4byte	.Ldebug_line0
 1543 0025 02       		.uleb128 0x2
 1544 0026 01       		.byte	0x1
 1545 0027 06       		.byte	0x6
 1546 0028 40020000 		.4byte	.LASF0
 1547 002c 02       		.uleb128 0x2
 1548 002d 01       		.byte	0x1
 1549 002e 08       		.byte	0x8
 1550 002f BC050000 		.4byte	.LASF1
 1551 0033 02       		.uleb128 0x2
 1552 0034 02       		.byte	0x2
 1553 0035 05       		.byte	0x5
 1554 0036 12060000 		.4byte	.LASF2
 1555 003a 02       		.uleb128 0x2
 1556 003b 02       		.byte	0x2
 1557 003c 07       		.byte	0x7
 1558 003d D1030000 		.4byte	.LASF3
 1559 0041 02       		.uleb128 0x2
 1560 0042 04       		.byte	0x4
 1561 0043 05       		.byte	0x5
 1562 0044 96020000 		.4byte	.LASF4
 1563 0048 02       		.uleb128 0x2
 1564 0049 04       		.byte	0x4
 1565 004a 07       		.byte	0x7
 1566 004b 7C030000 		.4byte	.LASF5
 1567 004f 02       		.uleb128 0x2
 1568 0050 08       		.byte	0x8
 1569 0051 05       		.byte	0x5
 1570 0052 32020000 		.4byte	.LASF6
 1571 0056 02       		.uleb128 0x2
 1572 0057 08       		.byte	0x8
 1573 0058 07       		.byte	0x7
 1574 0059 47010000 		.4byte	.LASF7
 1575 005d 03       		.uleb128 0x3
 1576 005e 04       		.byte	0x4
 1577 005f 05       		.byte	0x5
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 78


 1578 0060 696E7400 		.ascii	"int\000"
 1579 0064 02       		.uleb128 0x2
 1580 0065 04       		.byte	0x4
 1581 0066 07       		.byte	0x7
 1582 0067 66030000 		.4byte	.LASF8
 1583 006b 04       		.uleb128 0x4
 1584 006c D5020000 		.4byte	.LASF9
 1585 0070 02       		.byte	0x2
 1586 0071 C1       		.byte	0xc1
 1587 0072 2C000000 		.4byte	0x2c
 1588 0076 04       		.uleb128 0x4
 1589 0077 06000000 		.4byte	.LASF10
 1590 007b 02       		.byte	0x2
 1591 007c C2       		.byte	0xc2
 1592 007d 3A000000 		.4byte	0x3a
 1593 0081 04       		.uleb128 0x4
 1594 0082 12030000 		.4byte	.LASF11
 1595 0086 02       		.byte	0x2
 1596 0087 C3       		.byte	0xc3
 1597 0088 48000000 		.4byte	0x48
 1598 008c 04       		.uleb128 0x4
 1599 008d 11070000 		.4byte	.LASF12
 1600 0091 02       		.byte	0x2
 1601 0092 C5       		.byte	0xc5
 1602 0093 33000000 		.4byte	0x33
 1603 0097 04       		.uleb128 0x4
 1604 0098 6C020000 		.4byte	.LASF13
 1605 009c 02       		.byte	0x2
 1606 009d C6       		.byte	0xc6
 1607 009e 41000000 		.4byte	0x41
 1608 00a2 02       		.uleb128 0x2
 1609 00a3 04       		.byte	0x4
 1610 00a4 04       		.byte	0x4
 1611 00a5 7C050000 		.4byte	.LASF14
 1612 00a9 02       		.uleb128 0x2
 1613 00aa 08       		.byte	0x8
 1614 00ab 04       		.byte	0x4
 1615 00ac F5020000 		.4byte	.LASF15
 1616 00b0 02       		.uleb128 0x2
 1617 00b1 01       		.byte	0x1
 1618 00b2 08       		.byte	0x8
 1619 00b3 B1060000 		.4byte	.LASF16
 1620 00b7 02       		.uleb128 0x2
 1621 00b8 04       		.byte	0x4
 1622 00b9 07       		.byte	0x7
 1623 00ba A6040000 		.4byte	.LASF17
 1624 00be 05       		.uleb128 0x5
 1625 00bf 04       		.byte	0x4
 1626 00c0 6B000000 		.4byte	0x6b
 1627 00c4 05       		.uleb128 0x5
 1628 00c5 04       		.byte	0x4
 1629 00c6 CA000000 		.4byte	0xca
 1630 00ca 06       		.uleb128 0x6
 1631 00cb 6B000000 		.4byte	0x6b
 1632 00cf 07       		.uleb128 0x7
 1633 00d0 3B060000 		.4byte	.LASF18
 1634 00d4 01       		.byte	0x1
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 79


 1635 00d5 8A       		.byte	0x8a
 1636 00d6 00000000 		.4byte	.LFB35
 1637 00da 20000000 		.4byte	.LFE35-.LFB35
 1638 00de 01       		.uleb128 0x1
 1639 00df 9C       		.byte	0x9c
 1640 00e0 F4000000 		.4byte	0xf4
 1641 00e4 08       		.uleb128 0x8
 1642 00e5 E4030000 		.4byte	.LASF20
 1643 00e9 01       		.byte	0x1
 1644 00ea 8A       		.byte	0x8a
 1645 00eb 81000000 		.4byte	0x81
 1646 00ef 00000000 		.4byte	.LLST0
 1647 00f3 00       		.byte	0
 1648 00f4 07       		.uleb128 0x7
 1649 00f5 C5040000 		.4byte	.LASF19
 1650 00f9 01       		.byte	0x1
 1651 00fa D5       		.byte	0xd5
 1652 00fb 00000000 		.4byte	.LFB36
 1653 00ff 18000000 		.4byte	.LFE36-.LFB36
 1654 0103 01       		.uleb128 0x1
 1655 0104 9C       		.byte	0x9c
 1656 0105 46010000 		.4byte	0x146
 1657 0109 08       		.uleb128 0x8
 1658 010a E4030000 		.4byte	.LASF20
 1659 010e 01       		.byte	0x1
 1660 010f D5       		.byte	0xd5
 1661 0110 81000000 		.4byte	0x81
 1662 0114 21000000 		.4byte	.LLST1
 1663 0118 09       		.uleb128 0x9
 1664 0119 08000000 		.4byte	.LVL3
 1665 011d 150C0000 		.4byte	0xc15
 1666 0121 2C010000 		.4byte	0x12c
 1667 0125 0A       		.uleb128 0xa
 1668 0126 01       		.uleb128 0x1
 1669 0127 50       		.byte	0x50
 1670 0128 02       		.uleb128 0x2
 1671 0129 74       		.byte	0x74
 1672 012a 00       		.sleb128 0
 1673 012b 00       		.byte	0
 1674 012c 0B       		.uleb128 0xb
 1675 012d 0C000000 		.4byte	.LVL4
 1676 0131 260C0000 		.4byte	0xc26
 1677 0135 0C       		.uleb128 0xc
 1678 0136 16000000 		.4byte	.LVL5
 1679 013a CF000000 		.4byte	0xcf
 1680 013e 0A       		.uleb128 0xa
 1681 013f 01       		.uleb128 0x1
 1682 0140 50       		.byte	0x50
 1683 0141 02       		.uleb128 0x2
 1684 0142 74       		.byte	0x74
 1685 0143 00       		.sleb128 0
 1686 0144 00       		.byte	0
 1687 0145 00       		.byte	0
 1688 0146 07       		.uleb128 0x7
 1689 0147 CA050000 		.4byte	.LASF21
 1690 014b 01       		.byte	0x1
 1691 014c FA       		.byte	0xfa
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 80


 1692 014d 00000000 		.4byte	.LFB37
 1693 0151 14000000 		.4byte	.LFE37-.LFB37
 1694 0155 01       		.uleb128 0x1
 1695 0156 9C       		.byte	0x9c
 1696 0157 79010000 		.4byte	0x179
 1697 015b 0D       		.uleb128 0xd
 1698 015c 6900     		.ascii	"i\000"
 1699 015e 01       		.byte	0x1
 1700 015f FC       		.byte	0xfc
 1701 0160 81000000 		.4byte	0x81
 1702 0164 4D000000 		.4byte	.LLST2
 1703 0168 0C       		.uleb128 0xc
 1704 0169 0C000000 		.4byte	.LVL9
 1705 016d F4000000 		.4byte	0xf4
 1706 0171 0A       		.uleb128 0xa
 1707 0172 01       		.uleb128 0x1
 1708 0173 50       		.byte	0x50
 1709 0174 02       		.uleb128 0x2
 1710 0175 74       		.byte	0x74
 1711 0176 00       		.sleb128 0
 1712 0177 00       		.byte	0
 1713 0178 00       		.byte	0
 1714 0179 0E       		.uleb128 0xe
 1715 017a EE010000 		.4byte	.LASF22
 1716 017e 01       		.byte	0x1
 1717 017f 1D01     		.2byte	0x11d
 1718 0181 00000000 		.4byte	.LFB38
 1719 0185 34000000 		.4byte	.LFE38-.LFB38
 1720 0189 01       		.uleb128 0x1
 1721 018a 9C       		.byte	0x9c
 1722 018b EA010000 		.4byte	0x1ea
 1723 018f 0F       		.uleb128 0xf
 1724 0190 6900     		.ascii	"i\000"
 1725 0192 01       		.byte	0x1
 1726 0193 1F01     		.2byte	0x11f
 1727 0195 81000000 		.4byte	0x81
 1728 0199 6C000000 		.4byte	.LLST3
 1729 019d 10       		.uleb128 0x10
 1730 019e 2B060000 		.4byte	.LASF23
 1731 01a2 01       		.byte	0x1
 1732 01a3 2001     		.2byte	0x120
 1733 01a5 81000000 		.4byte	0x81
 1734 01a9 7F000000 		.4byte	.LLST4
 1735 01ad 0B       		.uleb128 0xb
 1736 01ae 06000000 		.4byte	.LVL12
 1737 01b2 310C0000 		.4byte	0xc31
 1738 01b6 0B       		.uleb128 0xb
 1739 01b7 0A000000 		.4byte	.LVL13
 1740 01bb 260C0000 		.4byte	0xc26
 1741 01bf 09       		.uleb128 0x9
 1742 01c0 1C000000 		.4byte	.LVL15
 1743 01c4 380C0000 		.4byte	0xc38
 1744 01c8 D9010000 		.4byte	0x1d9
 1745 01cc 0A       		.uleb128 0xa
 1746 01cd 01       		.uleb128 0x1
 1747 01ce 51       		.byte	0x51
 1748 01cf 02       		.uleb128 0x2
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 81


 1749 01d0 74       		.byte	0x74
 1750 01d1 00       		.sleb128 0
 1751 01d2 0A       		.uleb128 0xa
 1752 01d3 01       		.uleb128 0x1
 1753 01d4 50       		.byte	0x50
 1754 01d5 02       		.uleb128 0x2
 1755 01d6 75       		.byte	0x75
 1756 01d7 00       		.sleb128 0
 1757 01d8 00       		.byte	0
 1758 01d9 0C       		.uleb128 0xc
 1759 01da 26000000 		.4byte	.LVL17
 1760 01de CF000000 		.4byte	0xcf
 1761 01e2 0A       		.uleb128 0xa
 1762 01e3 01       		.uleb128 0x1
 1763 01e4 50       		.byte	0x50
 1764 01e5 02       		.uleb128 0x2
 1765 01e6 74       		.byte	0x74
 1766 01e7 00       		.sleb128 0
 1767 01e8 00       		.byte	0
 1768 01e9 00       		.byte	0
 1769 01ea 0E       		.uleb128 0xe
 1770 01eb A9030000 		.4byte	.LASF24
 1771 01ef 01       		.byte	0x1
 1772 01f0 5E01     		.2byte	0x15e
 1773 01f2 00000000 		.4byte	.LFB39
 1774 01f6 BC000000 		.4byte	.LFE39-.LFB39
 1775 01fa 01       		.uleb128 0x1
 1776 01fb 9C       		.byte	0x9c
 1777 01fc 7A020000 		.4byte	0x27a
 1778 0200 11       		.uleb128 0x11
 1779 0201 E4030000 		.4byte	.LASF20
 1780 0205 01       		.byte	0x1
 1781 0206 5E01     		.2byte	0x15e
 1782 0208 81000000 		.4byte	0x81
 1783 020c 92000000 		.4byte	.LLST5
 1784 0210 10       		.uleb128 0x10
 1785 0211 38040000 		.4byte	.LASF25
 1786 0215 01       		.byte	0x1
 1787 0216 6001     		.2byte	0x160
 1788 0218 81000000 		.4byte	0x81
 1789 021c ED000000 		.4byte	.LLST6
 1790 0220 10       		.uleb128 0x10
 1791 0221 FF060000 		.4byte	.LASF26
 1792 0225 01       		.byte	0x1
 1793 0226 6101     		.2byte	0x161
 1794 0228 81000000 		.4byte	0x81
 1795 022c 2C010000 		.4byte	.LLST7
 1796 0230 10       		.uleb128 0x10
 1797 0231 D5070000 		.4byte	.LASF27
 1798 0235 01       		.byte	0x1
 1799 0236 6201     		.2byte	0x162
 1800 0238 76000000 		.4byte	0x76
 1801 023c 57010000 		.4byte	.LLST8
 1802 0240 10       		.uleb128 0x10
 1803 0241 0D000000 		.4byte	.LASF28
 1804 0245 01       		.byte	0x1
 1805 0246 6301     		.2byte	0x163
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 82


 1806 0248 76000000 		.4byte	0x76
 1807 024c 75010000 		.4byte	.LLST9
 1808 0250 12       		.uleb128 0x12
 1809 0251 1C060000 		.4byte	.LASF33
 1810 0255 01       		.byte	0x1
 1811 0256 6401     		.2byte	0x164
 1812 0258 6B000000 		.4byte	0x6b
 1813 025c 13       		.uleb128 0x13
 1814 025d 03060000 		.4byte	.LASF29
 1815 0261 01       		.byte	0x1
 1816 0262 6501     		.2byte	0x165
 1817 0264 76000000 		.4byte	0x76
 1818 0268 1E       		.byte	0x1e
 1819 0269 0C       		.uleb128 0xc
 1820 026a 46000000 		.4byte	.LVL29
 1821 026e CF000000 		.4byte	0xcf
 1822 0272 0A       		.uleb128 0xa
 1823 0273 01       		.uleb128 0x1
 1824 0274 50       		.byte	0x50
 1825 0275 02       		.uleb128 0x2
 1826 0276 74       		.byte	0x74
 1827 0277 00       		.sleb128 0
 1828 0278 00       		.byte	0
 1829 0279 00       		.byte	0
 1830 027a 0E       		.uleb128 0xe
 1831 027b 1A040000 		.4byte	.LASF30
 1832 027f 01       		.byte	0x1
 1833 0280 1D02     		.2byte	0x21d
 1834 0282 00000000 		.4byte	.LFB40
 1835 0286 08000000 		.4byte	.LFE40-.LFB40
 1836 028a 01       		.uleb128 0x1
 1837 028b 9C       		.byte	0x9c
 1838 028c B2020000 		.4byte	0x2b2
 1839 0290 11       		.uleb128 0x11
 1840 0291 E4030000 		.4byte	.LASF20
 1841 0295 01       		.byte	0x1
 1842 0296 1D02     		.2byte	0x21d
 1843 0298 81000000 		.4byte	0x81
 1844 029c CF010000 		.4byte	.LLST10
 1845 02a0 0C       		.uleb128 0xc
 1846 02a1 06000000 		.4byte	.LVL44
 1847 02a5 EA010000 		.4byte	0x1ea
 1848 02a9 0A       		.uleb128 0xa
 1849 02aa 01       		.uleb128 0x1
 1850 02ab 50       		.byte	0x50
 1851 02ac 03       		.uleb128 0x3
 1852 02ad F3       		.byte	0xf3
 1853 02ae 01       		.uleb128 0x1
 1854 02af 50       		.byte	0x50
 1855 02b0 00       		.byte	0
 1856 02b1 00       		.byte	0
 1857 02b2 0E       		.uleb128 0xe
 1858 02b3 12020000 		.4byte	.LASF31
 1859 02b7 01       		.byte	0x1
 1860 02b8 5302     		.2byte	0x253
 1861 02ba 00000000 		.4byte	.LFB41
 1862 02be 28000000 		.4byte	.LFE41-.LFB41
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 83


 1863 02c2 01       		.uleb128 0x1
 1864 02c3 9C       		.byte	0x9c
 1865 02c4 11030000 		.4byte	0x311
 1866 02c8 0F       		.uleb128 0xf
 1867 02c9 6900     		.ascii	"i\000"
 1868 02cb 01       		.byte	0x1
 1869 02cc 5502     		.2byte	0x255
 1870 02ce 81000000 		.4byte	0x81
 1871 02d2 F0010000 		.4byte	.LLST11
 1872 02d6 10       		.uleb128 0x10
 1873 02d7 2B060000 		.4byte	.LASF23
 1874 02db 01       		.byte	0x1
 1875 02dc 5602     		.2byte	0x256
 1876 02de 81000000 		.4byte	0x81
 1877 02e2 0F020000 		.4byte	.LLST12
 1878 02e6 09       		.uleb128 0x9
 1879 02e7 10000000 		.4byte	.LVL47
 1880 02eb 380C0000 		.4byte	0xc38
 1881 02ef 00030000 		.4byte	0x300
 1882 02f3 0A       		.uleb128 0xa
 1883 02f4 01       		.uleb128 0x1
 1884 02f5 51       		.byte	0x51
 1885 02f6 02       		.uleb128 0x2
 1886 02f7 74       		.byte	0x74
 1887 02f8 00       		.sleb128 0
 1888 02f9 0A       		.uleb128 0xa
 1889 02fa 01       		.uleb128 0x1
 1890 02fb 50       		.byte	0x50
 1891 02fc 02       		.uleb128 0x2
 1892 02fd 75       		.byte	0x75
 1893 02fe 00       		.sleb128 0
 1894 02ff 00       		.byte	0
 1895 0300 0C       		.uleb128 0xc
 1896 0301 1A000000 		.4byte	.LVL49
 1897 0305 7A020000 		.4byte	0x27a
 1898 0309 0A       		.uleb128 0xa
 1899 030a 01       		.uleb128 0x1
 1900 030b 50       		.byte	0x50
 1901 030c 02       		.uleb128 0x2
 1902 030d 74       		.byte	0x74
 1903 030e 00       		.sleb128 0
 1904 030f 00       		.byte	0
 1905 0310 00       		.byte	0
 1906 0311 0E       		.uleb128 0xe
 1907 0312 90000000 		.4byte	.LASF32
 1908 0316 01       		.byte	0x1
 1909 0317 8002     		.2byte	0x280
 1910 0319 00000000 		.4byte	.LFB42
 1911 031d 28000000 		.4byte	.LFE42-.LFB42
 1912 0321 01       		.uleb128 0x1
 1913 0322 9C       		.byte	0x9c
 1914 0323 A7030000 		.4byte	0x3a7
 1915 0327 11       		.uleb128 0x11
 1916 0328 1C060000 		.4byte	.LASF33
 1917 032c 01       		.byte	0x1
 1918 032d 8002     		.2byte	0x280
 1919 032f 81000000 		.4byte	0x81
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 84


 1920 0333 22020000 		.4byte	.LLST13
 1921 0337 13       		.uleb128 0x13
 1922 0338 4D060000 		.4byte	.LASF34
 1923 033c 01       		.byte	0x1
 1924 033d 8202     		.2byte	0x282
 1925 033f 81000000 		.4byte	0x81
 1926 0343 05       		.byte	0x5
 1927 0344 13       		.uleb128 0x13
 1928 0345 E5060000 		.4byte	.LASF35
 1929 0349 01       		.byte	0x1
 1930 034a 8302     		.2byte	0x283
 1931 034c 81000000 		.4byte	0x81
 1932 0350 00       		.byte	0
 1933 0351 13       		.uleb128 0x13
 1934 0352 47030000 		.4byte	.LASF36
 1935 0356 01       		.byte	0x1
 1936 0357 8402     		.2byte	0x284
 1937 0359 81000000 		.4byte	0x81
 1938 035d 05       		.byte	0x5
 1939 035e 0F       		.uleb128 0xf
 1940 035f 6900     		.ascii	"i\000"
 1941 0361 01       		.byte	0x1
 1942 0362 8502     		.2byte	0x285
 1943 0364 81000000 		.4byte	0x81
 1944 0368 43020000 		.4byte	.LLST14
 1945 036c 10       		.uleb128 0x10
 1946 036d 2B060000 		.4byte	.LASF23
 1947 0371 01       		.byte	0x1
 1948 0372 8602     		.2byte	0x286
 1949 0374 81000000 		.4byte	0x81
 1950 0378 62020000 		.4byte	.LLST15
 1951 037c 09       		.uleb128 0x9
 1952 037d 10000000 		.4byte	.LVL55
 1953 0381 380C0000 		.4byte	0xc38
 1954 0385 96030000 		.4byte	0x396
 1955 0389 0A       		.uleb128 0xa
 1956 038a 01       		.uleb128 0x1
 1957 038b 51       		.byte	0x51
 1958 038c 02       		.uleb128 0x2
 1959 038d 74       		.byte	0x74
 1960 038e 00       		.sleb128 0
 1961 038f 0A       		.uleb128 0xa
 1962 0390 01       		.uleb128 0x1
 1963 0391 50       		.byte	0x50
 1964 0392 02       		.uleb128 0x2
 1965 0393 75       		.byte	0x75
 1966 0394 00       		.sleb128 0
 1967 0395 00       		.byte	0
 1968 0396 0C       		.uleb128 0xc
 1969 0397 1A000000 		.4byte	.LVL57
 1970 039b 7A020000 		.4byte	0x27a
 1971 039f 0A       		.uleb128 0xa
 1972 03a0 01       		.uleb128 0x1
 1973 03a1 50       		.byte	0x50
 1974 03a2 02       		.uleb128 0x2
 1975 03a3 74       		.byte	0x74
 1976 03a4 00       		.sleb128 0
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 85


 1977 03a5 00       		.byte	0
 1978 03a6 00       		.byte	0
 1979 03a7 14       		.uleb128 0x14
 1980 03a8 72020000 		.4byte	.LASF39
 1981 03ac 01       		.byte	0x1
 1982 03ad B102     		.2byte	0x2b1
 1983 03af 76000000 		.4byte	0x76
 1984 03b3 00000000 		.4byte	.LFB43
 1985 03b7 0C000000 		.4byte	.LFE43-.LFB43
 1986 03bb 01       		.uleb128 0x1
 1987 03bc 9C       		.byte	0x9c
 1988 03bd D2030000 		.4byte	0x3d2
 1989 03c1 11       		.uleb128 0x11
 1990 03c2 E4030000 		.4byte	.LASF20
 1991 03c6 01       		.byte	0x1
 1992 03c7 B102     		.2byte	0x2b1
 1993 03c9 81000000 		.4byte	0x81
 1994 03cd 75020000 		.4byte	.LLST16
 1995 03d1 00       		.byte	0
 1996 03d2 0E       		.uleb128 0xe
 1997 03d3 EA050000 		.4byte	.LASF37
 1998 03d7 01       		.byte	0x1
 1999 03d8 CC02     		.2byte	0x2cc
 2000 03da 00000000 		.4byte	.LFB44
 2001 03de 0C000000 		.4byte	.LFE44-.LFB44
 2002 03e2 01       		.uleb128 0x1
 2003 03e3 9C       		.byte	0x9c
 2004 03e4 07040000 		.4byte	0x407
 2005 03e8 11       		.uleb128 0x11
 2006 03e9 E4030000 		.4byte	.LASF20
 2007 03ed 01       		.byte	0x1
 2008 03ee CC02     		.2byte	0x2cc
 2009 03f0 81000000 		.4byte	0x81
 2010 03f4 96020000 		.4byte	.LLST17
 2011 03f8 15       		.uleb128 0x15
 2012 03f9 CC030000 		.4byte	.LASF38
 2013 03fd 01       		.byte	0x1
 2014 03fe CC02     		.2byte	0x2cc
 2015 0400 76000000 		.4byte	0x76
 2016 0404 01       		.uleb128 0x1
 2017 0405 51       		.byte	0x51
 2018 0406 00       		.byte	0
 2019 0407 14       		.uleb128 0x14
 2020 0408 83040000 		.4byte	.LASF40
 2021 040c 01       		.byte	0x1
 2022 040d E702     		.2byte	0x2e7
 2023 040f 76000000 		.4byte	0x76
 2024 0413 00000000 		.4byte	.LFB45
 2025 0417 10000000 		.4byte	.LFE45-.LFB45
 2026 041b 01       		.uleb128 0x1
 2027 041c 9C       		.byte	0x9c
 2028 041d 32040000 		.4byte	0x432
 2029 0421 11       		.uleb128 0x11
 2030 0422 E4030000 		.4byte	.LASF20
 2031 0426 01       		.byte	0x1
 2032 0427 E702     		.2byte	0x2e7
 2033 0429 81000000 		.4byte	0x81
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 86


 2034 042d B7020000 		.4byte	.LLST18
 2035 0431 00       		.byte	0
 2036 0432 0E       		.uleb128 0xe
 2037 0433 2A070000 		.4byte	.LASF41
 2038 0437 01       		.byte	0x1
 2039 0438 0203     		.2byte	0x302
 2040 043a 00000000 		.4byte	.LFB46
 2041 043e 10000000 		.4byte	.LFE46-.LFB46
 2042 0442 01       		.uleb128 0x1
 2043 0443 9C       		.byte	0x9c
 2044 0444 67040000 		.4byte	0x467
 2045 0448 11       		.uleb128 0x11
 2046 0449 E4030000 		.4byte	.LASF20
 2047 044d 01       		.byte	0x1
 2048 044e 0203     		.2byte	0x302
 2049 0450 81000000 		.4byte	0x81
 2050 0454 D8020000 		.4byte	.LLST19
 2051 0458 15       		.uleb128 0x15
 2052 0459 41030000 		.4byte	.LASF42
 2053 045d 01       		.byte	0x1
 2054 045e 0203     		.2byte	0x302
 2055 0460 76000000 		.4byte	0x76
 2056 0464 01       		.uleb128 0x1
 2057 0465 51       		.byte	0x51
 2058 0466 00       		.byte	0
 2059 0467 14       		.uleb128 0x14
 2060 0468 04050000 		.4byte	.LASF43
 2061 046c 01       		.byte	0x1
 2062 046d 1D03     		.2byte	0x31d
 2063 046f 76000000 		.4byte	0x76
 2064 0473 00000000 		.4byte	.LFB47
 2065 0477 04000000 		.4byte	.LFE47-.LFB47
 2066 047b 01       		.uleb128 0x1
 2067 047c 9C       		.byte	0x9c
 2068 047d 92040000 		.4byte	0x492
 2069 0481 11       		.uleb128 0x11
 2070 0482 1C060000 		.4byte	.LASF33
 2071 0486 01       		.byte	0x1
 2072 0487 1D03     		.2byte	0x31d
 2073 0489 81000000 		.4byte	0x81
 2074 048d F9020000 		.4byte	.LLST20
 2075 0491 00       		.byte	0
 2076 0492 14       		.uleb128 0x14
 2077 0493 D3010000 		.4byte	.LASF44
 2078 0497 01       		.byte	0x1
 2079 0498 3803     		.2byte	0x338
 2080 049a 76000000 		.4byte	0x76
 2081 049e 00000000 		.4byte	.LFB48
 2082 04a2 04000000 		.4byte	.LFE48-.LFB48
 2083 04a6 01       		.uleb128 0x1
 2084 04a7 9C       		.byte	0x9c
 2085 04a8 BD040000 		.4byte	0x4bd
 2086 04ac 11       		.uleb128 0x11
 2087 04ad 1C060000 		.4byte	.LASF33
 2088 04b1 01       		.byte	0x1
 2089 04b2 3803     		.2byte	0x338
 2090 04b4 81000000 		.4byte	0x81
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 87


 2091 04b8 1A030000 		.4byte	.LLST21
 2092 04bc 00       		.byte	0
 2093 04bd 14       		.uleb128 0x14
 2094 04be C8060000 		.4byte	.LASF45
 2095 04c2 01       		.byte	0x1
 2096 04c3 5403     		.2byte	0x354
 2097 04c5 76000000 		.4byte	0x76
 2098 04c9 00000000 		.4byte	.LFB49
 2099 04cd 04000000 		.4byte	.LFE49-.LFB49
 2100 04d1 01       		.uleb128 0x1
 2101 04d2 9C       		.byte	0x9c
 2102 04d3 E8040000 		.4byte	0x4e8
 2103 04d7 11       		.uleb128 0x11
 2104 04d8 1C060000 		.4byte	.LASF33
 2105 04dc 01       		.byte	0x1
 2106 04dd 5403     		.2byte	0x354
 2107 04df 81000000 		.4byte	0x81
 2108 04e3 3B030000 		.4byte	.LLST22
 2109 04e7 00       		.byte	0
 2110 04e8 14       		.uleb128 0x14
 2111 04e9 5D000000 		.4byte	.LASF46
 2112 04ed 01       		.byte	0x1
 2113 04ee 7003     		.2byte	0x370
 2114 04f0 76000000 		.4byte	0x76
 2115 04f4 00000000 		.4byte	.LFB50
 2116 04f8 04000000 		.4byte	.LFE50-.LFB50
 2117 04fc 01       		.uleb128 0x1
 2118 04fd 9C       		.byte	0x9c
 2119 04fe 13050000 		.4byte	0x513
 2120 0502 11       		.uleb128 0x11
 2121 0503 1C060000 		.4byte	.LASF33
 2122 0507 01       		.byte	0x1
 2123 0508 7003     		.2byte	0x370
 2124 050a 81000000 		.4byte	0x81
 2125 050e 5C030000 		.4byte	.LLST23
 2126 0512 00       		.byte	0
 2127 0513 14       		.uleb128 0x14
 2128 0514 E7040000 		.4byte	.LASF47
 2129 0518 01       		.byte	0x1
 2130 0519 4C04     		.2byte	0x44c
 2131 051b 81000000 		.4byte	0x81
 2132 051f 00000000 		.4byte	.LFB51
 2133 0523 88000000 		.4byte	.LFE51-.LFB51
 2134 0527 01       		.uleb128 0x1
 2135 0528 9C       		.byte	0x9c
 2136 0529 07060000 		.4byte	0x607
 2137 052d 11       		.uleb128 0x11
 2138 052e E4030000 		.4byte	.LASF20
 2139 0532 01       		.byte	0x1
 2140 0533 4C04     		.2byte	0x44c
 2141 0535 81000000 		.4byte	0x81
 2142 0539 7D030000 		.4byte	.LLST24
 2143 053d 12       		.uleb128 0x12
 2144 053e 1C060000 		.4byte	.LASF33
 2145 0542 01       		.byte	0x1
 2146 0543 4E04     		.2byte	0x44e
 2147 0545 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 88


 2148 0549 13       		.uleb128 0x13
 2149 054a 9D040000 		.4byte	.LASF48
 2150 054e 01       		.byte	0x1
 2151 054f 4F04     		.2byte	0x44f
 2152 0551 6B000000 		.4byte	0x6b
 2153 0555 01       		.byte	0x1
 2154 0556 13       		.uleb128 0x13
 2155 0557 F1060000 		.4byte	.LASF49
 2156 055b 01       		.byte	0x1
 2157 055c 5004     		.2byte	0x450
 2158 055e 6B000000 		.4byte	0x6b
 2159 0562 00       		.byte	0
 2160 0563 13       		.uleb128 0x13
 2161 0564 80000000 		.4byte	.LASF50
 2162 0568 01       		.byte	0x1
 2163 0569 5204     		.2byte	0x452
 2164 056b 76000000 		.4byte	0x76
 2165 056f 64       		.byte	0x64
 2166 0570 13       		.uleb128 0x13
 2167 0571 19030000 		.4byte	.LASF51
 2168 0575 01       		.byte	0x1
 2169 0576 5304     		.2byte	0x453
 2170 0578 76000000 		.4byte	0x76
 2171 057c 00       		.byte	0
 2172 057d 16       		.uleb128 0x16
 2173 057e BC070000 		.4byte	.LASF52
 2174 0582 01       		.byte	0x1
 2175 0583 5404     		.2byte	0x454
 2176 0585 07060000 		.4byte	0x607
 2177 0589 05       		.uleb128 0x5
 2178 058a 03       		.byte	0x3
 2179 058b 20000000 		.4byte	CapSense_debounceCounter.5299
 2180 058f 09       		.uleb128 0x9
 2181 0590 14000000 		.4byte	.LVL79
 2182 0594 380C0000 		.4byte	0xc38
 2183 0598 AC050000 		.4byte	0x5ac
 2184 059c 0A       		.uleb128 0xa
 2185 059d 01       		.uleb128 0x1
 2186 059e 51       		.byte	0x51
 2187 059f 02       		.uleb128 0x2
 2188 05a0 74       		.byte	0x74
 2189 05a1 00       		.sleb128 0
 2190 05a2 0A       		.uleb128 0xa
 2191 05a3 01       		.uleb128 0x1
 2192 05a4 50       		.byte	0x50
 2193 05a5 05       		.uleb128 0x5
 2194 05a6 03       		.byte	0x3
 2195 05a7 24000000 		.4byte	.LANCHOR0+36
 2196 05ab 00       		.byte	0
 2197 05ac 09       		.uleb128 0x9
 2198 05ad 32000000 		.4byte	.LVL80
 2199 05b1 520C0000 		.4byte	0xc52
 2200 05b5 CB050000 		.4byte	0x5cb
 2201 05b9 0A       		.uleb128 0xa
 2202 05ba 01       		.uleb128 0x1
 2203 05bb 52       		.byte	0x52
 2204 05bc 01       		.uleb128 0x1
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 89


 2205 05bd 30       		.byte	0x30
 2206 05be 0A       		.uleb128 0xa
 2207 05bf 01       		.uleb128 0x1
 2208 05c0 51       		.byte	0x51
 2209 05c1 02       		.uleb128 0x2
 2210 05c2 74       		.byte	0x74
 2211 05c3 00       		.sleb128 0
 2212 05c4 0A       		.uleb128 0xa
 2213 05c5 01       		.uleb128 0x1
 2214 05c6 50       		.byte	0x50
 2215 05c7 02       		.uleb128 0x2
 2216 05c8 75       		.byte	0x75
 2217 05c9 24       		.sleb128 36
 2218 05ca 00       		.byte	0
 2219 05cb 09       		.uleb128 0x9
 2220 05cc 62000000 		.4byte	.LVL81
 2221 05d0 520C0000 		.4byte	0xc52
 2222 05d4 ED050000 		.4byte	0x5ed
 2223 05d8 0A       		.uleb128 0xa
 2224 05d9 01       		.uleb128 0x1
 2225 05da 52       		.byte	0x52
 2226 05db 01       		.uleb128 0x1
 2227 05dc 31       		.byte	0x31
 2228 05dd 0A       		.uleb128 0xa
 2229 05de 01       		.uleb128 0x1
 2230 05df 51       		.byte	0x51
 2231 05e0 02       		.uleb128 0x2
 2232 05e1 74       		.byte	0x74
 2233 05e2 00       		.sleb128 0
 2234 05e3 0A       		.uleb128 0xa
 2235 05e4 01       		.uleb128 0x1
 2236 05e5 50       		.byte	0x50
 2237 05e6 05       		.uleb128 0x5
 2238 05e7 03       		.byte	0x3
 2239 05e8 24000000 		.4byte	.LANCHOR0+36
 2240 05ec 00       		.byte	0
 2241 05ed 0C       		.uleb128 0xc
 2242 05ee 76000000 		.4byte	.LVL82
 2243 05f2 380C0000 		.4byte	0xc38
 2244 05f6 0A       		.uleb128 0xa
 2245 05f7 01       		.uleb128 0x1
 2246 05f8 51       		.byte	0x51
 2247 05f9 02       		.uleb128 0x2
 2248 05fa 74       		.byte	0x74
 2249 05fb 00       		.sleb128 0
 2250 05fc 0A       		.uleb128 0xa
 2251 05fd 01       		.uleb128 0x1
 2252 05fe 50       		.byte	0x50
 2253 05ff 05       		.uleb128 0x5
 2254 0600 03       		.byte	0x3
 2255 0601 24000000 		.4byte	.LANCHOR0+36
 2256 0605 00       		.byte	0
 2257 0606 00       		.byte	0
 2258 0607 17       		.uleb128 0x17
 2259 0608 6B000000 		.4byte	0x6b
 2260 060c 17060000 		.4byte	0x617
 2261 0610 18       		.uleb128 0x18
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 90


 2262 0611 B7000000 		.4byte	0xb7
 2263 0615 00       		.byte	0
 2264 0616 00       		.byte	0
 2265 0617 14       		.uleb128 0x14
 2266 0618 9F050000 		.4byte	.LASF53
 2267 061c 01       		.byte	0x1
 2268 061d A304     		.2byte	0x4a3
 2269 061f 81000000 		.4byte	0x81
 2270 0623 00000000 		.4byte	.LFB52
 2271 0627 1E000000 		.4byte	.LFE52-.LFB52
 2272 062b 01       		.uleb128 0x1
 2273 062c 9C       		.byte	0x9c
 2274 062d 7F060000 		.4byte	0x67f
 2275 0631 11       		.uleb128 0x11
 2276 0632 1C060000 		.4byte	.LASF33
 2277 0636 01       		.byte	0x1
 2278 0637 A304     		.2byte	0x4a3
 2279 0639 81000000 		.4byte	0x81
 2280 063d A9030000 		.4byte	.LLST25
 2281 0641 10       		.uleb128 0x10
 2282 0642 63020000 		.4byte	.LASF54
 2283 0646 01       		.byte	0x1
 2284 0647 A504     		.2byte	0x4a5
 2285 0649 81000000 		.4byte	0x81
 2286 064d CA030000 		.4byte	.LLST26
 2287 0651 13       		.uleb128 0x13
 2288 0652 04070000 		.4byte	.LASF55
 2289 0656 01       		.byte	0x1
 2290 0657 A604     		.2byte	0x4a6
 2291 0659 81000000 		.4byte	0x81
 2292 065d 05       		.byte	0x5
 2293 065e 10       		.uleb128 0x10
 2294 065f 8B020000 		.4byte	.LASF56
 2295 0663 01       		.byte	0x1
 2296 0664 A704     		.2byte	0x4a7
 2297 0666 81000000 		.4byte	0x81
 2298 066a E9030000 		.4byte	.LLST27
 2299 066e 0C       		.uleb128 0xc
 2300 066f 0E000000 		.4byte	.LVL87
 2301 0673 13050000 		.4byte	0x513
 2302 0677 0A       		.uleb128 0xa
 2303 0678 01       		.uleb128 0x1
 2304 0679 50       		.byte	0x50
 2305 067a 02       		.uleb128 0x2
 2306 067b 74       		.byte	0x74
 2307 067c 00       		.sleb128 0
 2308 067d 00       		.byte	0
 2309 067e 00       		.byte	0
 2310 067f 14       		.uleb128 0x14
 2311 0680 A9020000 		.4byte	.LASF57
 2312 0684 01       		.byte	0x1
 2313 0685 D104     		.2byte	0x4d1
 2314 0687 81000000 		.4byte	0x81
 2315 068b 00000000 		.4byte	.LFB53
 2316 068f 20000000 		.4byte	.LFE53-.LFB53
 2317 0693 01       		.uleb128 0x1
 2318 0694 9C       		.byte	0x9c
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 91


 2319 0695 C8060000 		.4byte	0x6c8
 2320 0699 0F       		.uleb128 0xf
 2321 069a 6900     		.ascii	"i\000"
 2322 069c 01       		.byte	0x1
 2323 069d D404     		.2byte	0x4d4
 2324 069f 81000000 		.4byte	0x81
 2325 06a3 13040000 		.4byte	.LLST28
 2326 06a7 10       		.uleb128 0x10
 2327 06a8 8B020000 		.4byte	.LASF56
 2328 06ac 01       		.byte	0x1
 2329 06ad D504     		.2byte	0x4d5
 2330 06af 81000000 		.4byte	0x81
 2331 06b3 32040000 		.4byte	.LLST29
 2332 06b7 0C       		.uleb128 0xc
 2333 06b8 10000000 		.4byte	.LVL94
 2334 06bc 17060000 		.4byte	0x617
 2335 06c0 0A       		.uleb128 0xa
 2336 06c1 01       		.uleb128 0x1
 2337 06c2 50       		.byte	0x50
 2338 06c3 02       		.uleb128 0x2
 2339 06c4 74       		.byte	0x74
 2340 06c5 00       		.sleb128 0
 2341 06c6 00       		.byte	0
 2342 06c7 00       		.byte	0
 2343 06c8 0E       		.uleb128 0xe
 2344 06c9 AF040000 		.4byte	.LASF58
 2345 06cd 01       		.byte	0x1
 2346 06ce 0005     		.2byte	0x500
 2347 06d0 00000000 		.4byte	.LFB54
 2348 06d4 20000000 		.4byte	.LFE54-.LFB54
 2349 06d8 01       		.uleb128 0x1
 2350 06d9 9C       		.byte	0x9c
 2351 06da 27070000 		.4byte	0x727
 2352 06de 11       		.uleb128 0x11
 2353 06df 1C060000 		.4byte	.LASF33
 2354 06e3 01       		.byte	0x1
 2355 06e4 0005     		.2byte	0x500
 2356 06e6 81000000 		.4byte	0x81
 2357 06ea 5C040000 		.4byte	.LLST30
 2358 06ee 10       		.uleb128 0x10
 2359 06ef 63020000 		.4byte	.LASF54
 2360 06f3 01       		.byte	0x1
 2361 06f4 0305     		.2byte	0x503
 2362 06f6 6B000000 		.4byte	0x6b
 2363 06fa 7D040000 		.4byte	.LLST31
 2364 06fe 13       		.uleb128 0x13
 2365 06ff 04070000 		.4byte	.LASF55
 2366 0703 01       		.byte	0x1
 2367 0704 0405     		.2byte	0x504
 2368 0706 6B000000 		.4byte	0x6b
 2369 070a 05       		.byte	0x5
 2370 070b 0C       		.uleb128 0xc
 2371 070c 10000000 		.4byte	.LVL102
 2372 0710 520C0000 		.4byte	0xc52
 2373 0714 0A       		.uleb128 0xa
 2374 0715 01       		.uleb128 0x1
 2375 0716 52       		.byte	0x52
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 92


 2376 0717 01       		.uleb128 0x1
 2377 0718 31       		.byte	0x31
 2378 0719 0A       		.uleb128 0xa
 2379 071a 01       		.uleb128 0x1
 2380 071b 51       		.byte	0x51
 2381 071c 02       		.uleb128 0x2
 2382 071d 74       		.byte	0x74
 2383 071e 00       		.sleb128 0
 2384 071f 0A       		.uleb128 0xa
 2385 0720 01       		.uleb128 0x1
 2386 0721 50       		.byte	0x50
 2387 0722 02       		.uleb128 0x2
 2388 0723 75       		.byte	0x75
 2389 0724 00       		.sleb128 0
 2390 0725 00       		.byte	0
 2391 0726 00       		.byte	0
 2392 0727 0E       		.uleb128 0xe
 2393 0728 4C020000 		.4byte	.LASF59
 2394 072c 01       		.byte	0x1
 2395 072d 2B05     		.2byte	0x52b
 2396 072f 00000000 		.4byte	.LFB55
 2397 0733 20000000 		.4byte	.LFE55-.LFB55
 2398 0737 01       		.uleb128 0x1
 2399 0738 9C       		.byte	0x9c
 2400 0739 86070000 		.4byte	0x786
 2401 073d 11       		.uleb128 0x11
 2402 073e 1C060000 		.4byte	.LASF33
 2403 0742 01       		.byte	0x1
 2404 0743 2B05     		.2byte	0x52b
 2405 0745 81000000 		.4byte	0x81
 2406 0749 B4040000 		.4byte	.LLST32
 2407 074d 10       		.uleb128 0x10
 2408 074e 63020000 		.4byte	.LASF54
 2409 0752 01       		.byte	0x1
 2410 0753 2D05     		.2byte	0x52d
 2411 0755 6B000000 		.4byte	0x6b
 2412 0759 D5040000 		.4byte	.LLST33
 2413 075d 13       		.uleb128 0x13
 2414 075e 04070000 		.4byte	.LASF55
 2415 0762 01       		.byte	0x1
 2416 0763 2E05     		.2byte	0x52e
 2417 0765 6B000000 		.4byte	0x6b
 2418 0769 05       		.byte	0x5
 2419 076a 0C       		.uleb128 0xc
 2420 076b 10000000 		.4byte	.LVL109
 2421 076f 520C0000 		.4byte	0xc52
 2422 0773 0A       		.uleb128 0xa
 2423 0774 01       		.uleb128 0x1
 2424 0775 52       		.byte	0x52
 2425 0776 01       		.uleb128 0x1
 2426 0777 30       		.byte	0x30
 2427 0778 0A       		.uleb128 0xa
 2428 0779 01       		.uleb128 0x1
 2429 077a 51       		.byte	0x51
 2430 077b 02       		.uleb128 0x2
 2431 077c 74       		.byte	0x74
 2432 077d 00       		.sleb128 0
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 93


 2433 077e 0A       		.uleb128 0xa
 2434 077f 01       		.uleb128 0x1
 2435 0780 50       		.byte	0x50
 2436 0781 02       		.uleb128 0x2
 2437 0782 75       		.byte	0x75
 2438 0783 00       		.sleb128 0
 2439 0784 00       		.byte	0
 2440 0785 00       		.byte	0
 2441 0786 14       		.uleb128 0x14
 2442 0787 05040000 		.4byte	.LASF60
 2443 078b 01       		.byte	0x1
 2444 078c 5D05     		.2byte	0x55d
 2445 078e 6B000000 		.4byte	0x6b
 2446 0792 00000000 		.4byte	.LFB56
 2447 0796 30000000 		.4byte	.LFE56-.LFB56
 2448 079a 01       		.uleb128 0x1
 2449 079b 9C       		.byte	0x9c
 2450 079c 0B080000 		.4byte	0x80b
 2451 07a0 11       		.uleb128 0x11
 2452 07a1 24030000 		.4byte	.LASF61
 2453 07a5 01       		.byte	0x1
 2454 07a6 5D05     		.2byte	0x55d
 2455 07a8 6B000000 		.4byte	0x6b
 2456 07ac 0C050000 		.4byte	.LLST34
 2457 07b0 15       		.uleb128 0x15
 2458 07b1 00000000 		.4byte	.LASF62
 2459 07b5 01       		.byte	0x1
 2460 07b6 5D05     		.2byte	0x55d
 2461 07b8 6B000000 		.4byte	0x6b
 2462 07bc 01       		.uleb128 0x1
 2463 07bd 51       		.byte	0x51
 2464 07be 15       		.uleb128 0x15
 2465 07bf 80000000 		.4byte	.LASF50
 2466 07c3 01       		.byte	0x1
 2467 07c4 5D05     		.2byte	0x55d
 2468 07c6 76000000 		.4byte	0x76
 2469 07ca 01       		.uleb128 0x1
 2470 07cb 52       		.byte	0x52
 2471 07cc 0F       		.uleb128 0xf
 2472 07cd 6900     		.ascii	"i\000"
 2473 07cf 01       		.byte	0x1
 2474 07d0 6005     		.2byte	0x560
 2475 07d2 6B000000 		.4byte	0x6b
 2476 07d6 2D050000 		.4byte	.LLST35
 2477 07da 10       		.uleb128 0x10
 2478 07db 23060000 		.4byte	.LASF63
 2479 07df 01       		.byte	0x1
 2480 07e0 6A05     		.2byte	0x56a
 2481 07e2 6B000000 		.4byte	0x6b
 2482 07e6 64050000 		.4byte	.LLST36
 2483 07ea 10       		.uleb128 0x10
 2484 07eb 91020000 		.4byte	.LASF64
 2485 07ef 01       		.byte	0x1
 2486 07f0 6C05     		.2byte	0x56c
 2487 07f2 76000000 		.4byte	0x76
 2488 07f6 84050000 		.4byte	.LLST37
 2489 07fa 10       		.uleb128 0x10
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 94


 2490 07fb 33030000 		.4byte	.LASF65
 2491 07ff 01       		.byte	0x1
 2492 0800 6D05     		.2byte	0x56d
 2493 0802 0B080000 		.4byte	0x80b
 2494 0806 AE050000 		.4byte	.LLST38
 2495 080a 00       		.byte	0
 2496 080b 05       		.uleb128 0x5
 2497 080c 04       		.byte	0x4
 2498 080d 76000000 		.4byte	0x76
 2499 0811 19       		.uleb128 0x19
 2500 0812 44070000 		.4byte	.LASF66
 2501 0816 01       		.byte	0x1
 2502 0817 FC05     		.2byte	0x5fc
 2503 0819 6B000000 		.4byte	0x6b
 2504 081d 00000000 		.4byte	.LFB57
 2505 0821 D0000000 		.4byte	.LFE57-.LFB57
 2506 0825 01       		.uleb128 0x1
 2507 0826 9C       		.byte	0x9c
 2508 0827 EC080000 		.4byte	0x8ec
 2509 082b 11       		.uleb128 0x11
 2510 082c 23060000 		.4byte	.LASF63
 2511 0830 01       		.byte	0x1
 2512 0831 FC05     		.2byte	0x5fc
 2513 0833 6B000000 		.4byte	0x6b
 2514 0837 C1050000 		.4byte	.LLST39
 2515 083b 11       		.uleb128 0x11
 2516 083c 24030000 		.4byte	.LASF61
 2517 0840 01       		.byte	0x1
 2518 0841 FC05     		.2byte	0x5fc
 2519 0843 6B000000 		.4byte	0x6b
 2520 0847 E2050000 		.4byte	.LLST40
 2521 084b 11       		.uleb128 0x11
 2522 084c 00000000 		.4byte	.LASF62
 2523 0850 01       		.byte	0x1
 2524 0851 FD05     		.2byte	0x5fd
 2525 0853 6B000000 		.4byte	0x6b
 2526 0857 03060000 		.4byte	.LLST41
 2527 085b 11       		.uleb128 0x11
 2528 085c 5E060000 		.4byte	.LASF67
 2529 0860 01       		.byte	0x1
 2530 0861 FD05     		.2byte	0x5fd
 2531 0863 76000000 		.4byte	0x76
 2532 0867 3D060000 		.4byte	.LLST42
 2533 086b 11       		.uleb128 0x11
 2534 086c 03060000 		.4byte	.LASF29
 2535 0870 01       		.byte	0x1
 2536 0871 FD05     		.2byte	0x5fd
 2537 0873 76000000 		.4byte	0x76
 2538 0877 5E060000 		.4byte	.LLST43
 2539 087b 10       		.uleb128 0x10
 2540 087c C3000000 		.4byte	.LASF68
 2541 0880 01       		.byte	0x1
 2542 0881 0106     		.2byte	0x601
 2543 0883 6B000000 		.4byte	0x6b
 2544 0887 8A060000 		.4byte	.LLST44
 2545 088b 10       		.uleb128 0x10
 2546 088c 2B030000 		.4byte	.LASF69
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 95


 2547 0890 01       		.byte	0x1
 2548 0891 0206     		.2byte	0x602
 2549 0893 6B000000 		.4byte	0x6b
 2550 0897 C0060000 		.4byte	.LLST45
 2551 089b 16       		.uleb128 0x16
 2552 089c B6060000 		.4byte	.LASF70
 2553 08a0 01       		.byte	0x1
 2554 08a1 0706     		.2byte	0x607
 2555 08a3 EC080000 		.4byte	0x8ec
 2556 08a7 05       		.uleb128 0x5
 2557 08a8 03       		.byte	0x3
 2558 08a9 28000000 		.4byte	CapSense_centroid.5351
 2559 08ad 16       		.uleb128 0x16
 2560 08ae 73030000 		.4byte	.LASF71
 2561 08b2 01       		.byte	0x1
 2562 08b3 0E06     		.2byte	0x60e
 2563 08b5 6B000000 		.4byte	0x6b
 2564 08b9 01       		.uleb128 0x1
 2565 08ba 50       		.byte	0x50
 2566 08bb 10       		.uleb128 0x10
 2567 08bc 9F020000 		.4byte	.LASF72
 2568 08c0 01       		.byte	0x1
 2569 08c1 0F06     		.2byte	0x60f
 2570 08c3 81000000 		.4byte	0x81
 2571 08c7 17070000 		.4byte	.LLST46
 2572 08cb 10       		.uleb128 0x10
 2573 08cc C9020000 		.4byte	.LASF73
 2574 08d0 01       		.byte	0x1
 2575 08d1 1006     		.2byte	0x610
 2576 08d3 97000000 		.4byte	0x97
 2577 08d7 3A070000 		.4byte	.LLST47
 2578 08db 10       		.uleb128 0x10
 2579 08dc 33030000 		.4byte	.LASF65
 2580 08e0 01       		.byte	0x1
 2581 08e1 1206     		.2byte	0x612
 2582 08e3 0B080000 		.4byte	0x80b
 2583 08e7 67070000 		.4byte	.LLST48
 2584 08eb 00       		.byte	0
 2585 08ec 17       		.uleb128 0x17
 2586 08ed 76000000 		.4byte	0x76
 2587 08f1 FC080000 		.4byte	0x8fc
 2588 08f5 18       		.uleb128 0x18
 2589 08f6 B7000000 		.4byte	0xb7
 2590 08fa 02       		.byte	0x2
 2591 08fb 00       		.byte	0
 2592 08fc 14       		.uleb128 0x14
 2593 08fd 99060000 		.4byte	.LASF74
 2594 0901 01       		.byte	0x1
 2595 0902 CF06     		.2byte	0x6cf
 2596 0904 76000000 		.4byte	0x76
 2597 0908 00000000 		.4byte	.LFB58
 2598 090c 30000000 		.4byte	.LFE58-.LFB58
 2599 0910 01       		.uleb128 0x1
 2600 0911 9C       		.byte	0x9c
 2601 0912 A0090000 		.4byte	0x9a0
 2602 0916 11       		.uleb128 0x11
 2603 0917 1C060000 		.4byte	.LASF33
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 96


 2604 091b 01       		.byte	0x1
 2605 091c CF06     		.2byte	0x6cf
 2606 091e 81000000 		.4byte	0x81
 2607 0922 7A070000 		.4byte	.LLST49
 2608 0926 10       		.uleb128 0x10
 2609 0927 23060000 		.4byte	.LASF63
 2610 092b 01       		.byte	0x1
 2611 092c E206     		.2byte	0x6e2
 2612 092e 6B000000 		.4byte	0x6b
 2613 0932 9B070000 		.4byte	.LLST50
 2614 0936 10       		.uleb128 0x10
 2615 0937 73030000 		.4byte	.LASF71
 2616 093b 01       		.byte	0x1
 2617 093c E306     		.2byte	0x6e3
 2618 093e 76000000 		.4byte	0x76
 2619 0942 B9070000 		.4byte	.LLST51
 2620 0946 13       		.uleb128 0x13
 2621 0947 24030000 		.4byte	.LASF61
 2622 094b 01       		.byte	0x1
 2623 094c E406     		.2byte	0x6e4
 2624 094e 6B000000 		.4byte	0x6b
 2625 0952 00       		.byte	0
 2626 0953 13       		.uleb128 0x13
 2627 0954 00000000 		.4byte	.LASF62
 2628 0958 01       		.byte	0x1
 2629 0959 E506     		.2byte	0x6e5
 2630 095b 6B000000 		.4byte	0x6b
 2631 095f 05       		.byte	0x5
 2632 0960 09       		.uleb128 0x9
 2633 0961 0E000000 		.4byte	.LVL156
 2634 0965 86070000 		.4byte	0x786
 2635 0969 7E090000 		.4byte	0x97e
 2636 096d 0A       		.uleb128 0xa
 2637 096e 01       		.uleb128 0x1
 2638 096f 52       		.byte	0x52
 2639 0970 02       		.uleb128 0x2
 2640 0971 08       		.byte	0x8
 2641 0972 64       		.byte	0x64
 2642 0973 0A       		.uleb128 0xa
 2643 0974 01       		.uleb128 0x1
 2644 0975 51       		.byte	0x51
 2645 0976 01       		.uleb128 0x1
 2646 0977 35       		.byte	0x35
 2647 0978 0A       		.uleb128 0xa
 2648 0979 01       		.uleb128 0x1
 2649 097a 50       		.byte	0x50
 2650 097b 01       		.uleb128 0x1
 2651 097c 30       		.byte	0x30
 2652 097d 00       		.byte	0
 2653 097e 0C       		.uleb128 0xc
 2654 097f 22000000 		.4byte	.LVL157
 2655 0983 11080000 		.4byte	0x811
 2656 0987 0A       		.uleb128 0xa
 2657 0988 01       		.uleb128 0x1
 2658 0989 53       		.byte	0x53
 2659 098a 03       		.uleb128 0x3
 2660 098b 0A       		.byte	0xa
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 97


 2661 098c 0019     		.2byte	0x1900
 2662 098e 0A       		.uleb128 0xa
 2663 098f 01       		.uleb128 0x1
 2664 0990 52       		.byte	0x52
 2665 0991 01       		.uleb128 0x1
 2666 0992 35       		.byte	0x35
 2667 0993 0A       		.uleb128 0xa
 2668 0994 01       		.uleb128 0x1
 2669 0995 51       		.byte	0x51
 2670 0996 01       		.uleb128 0x1
 2671 0997 30       		.byte	0x30
 2672 0998 0A       		.uleb128 0xa
 2673 0999 02       		.uleb128 0x2
 2674 099a 7D       		.byte	0x7d
 2675 099b 00       		.sleb128 0
 2676 099c 01       		.uleb128 0x1
 2677 099d 4E       		.byte	0x4e
 2678 099e 00       		.byte	0
 2679 099f 00       		.byte	0
 2680 09a0 14       		.uleb128 0x14
 2681 09a1 7B060000 		.4byte	.LASF75
 2682 09a5 01       		.byte	0x1
 2683 09a6 9A07     		.2byte	0x79a
 2684 09a8 76000000 		.4byte	0x76
 2685 09ac 00000000 		.4byte	.LFB59
 2686 09b0 30000000 		.4byte	.LFE59-.LFB59
 2687 09b4 01       		.uleb128 0x1
 2688 09b5 9C       		.byte	0x9c
 2689 09b6 440A0000 		.4byte	0xa44
 2690 09ba 11       		.uleb128 0x11
 2691 09bb 1C060000 		.4byte	.LASF33
 2692 09bf 01       		.byte	0x1
 2693 09c0 9A07     		.2byte	0x79a
 2694 09c2 81000000 		.4byte	0x81
 2695 09c6 D7070000 		.4byte	.LLST52
 2696 09ca 10       		.uleb128 0x10
 2697 09cb 23060000 		.4byte	.LASF63
 2698 09cf 01       		.byte	0x1
 2699 09d0 A907     		.2byte	0x7a9
 2700 09d2 6B000000 		.4byte	0x6b
 2701 09d6 F8070000 		.4byte	.LLST53
 2702 09da 10       		.uleb128 0x10
 2703 09db 73030000 		.4byte	.LASF71
 2704 09df 01       		.byte	0x1
 2705 09e0 AA07     		.2byte	0x7aa
 2706 09e2 76000000 		.4byte	0x76
 2707 09e6 16080000 		.4byte	.LLST54
 2708 09ea 13       		.uleb128 0x13
 2709 09eb 24030000 		.4byte	.LASF61
 2710 09ef 01       		.byte	0x1
 2711 09f0 AB07     		.2byte	0x7ab
 2712 09f2 6B000000 		.4byte	0x6b
 2713 09f6 00       		.byte	0
 2714 09f7 13       		.uleb128 0x13
 2715 09f8 00000000 		.4byte	.LASF62
 2716 09fc 01       		.byte	0x1
 2717 09fd AC07     		.2byte	0x7ac
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 98


 2718 09ff 6B000000 		.4byte	0x6b
 2719 0a03 05       		.byte	0x5
 2720 0a04 09       		.uleb128 0x9
 2721 0a05 0E000000 		.4byte	.LVL163
 2722 0a09 86070000 		.4byte	0x786
 2723 0a0d 220A0000 		.4byte	0xa22
 2724 0a11 0A       		.uleb128 0xa
 2725 0a12 01       		.uleb128 0x1
 2726 0a13 52       		.byte	0x52
 2727 0a14 02       		.uleb128 0x2
 2728 0a15 08       		.byte	0x8
 2729 0a16 64       		.byte	0x64
 2730 0a17 0A       		.uleb128 0xa
 2731 0a18 01       		.uleb128 0x1
 2732 0a19 51       		.byte	0x51
 2733 0a1a 01       		.uleb128 0x1
 2734 0a1b 35       		.byte	0x35
 2735 0a1c 0A       		.uleb128 0xa
 2736 0a1d 01       		.uleb128 0x1
 2737 0a1e 50       		.byte	0x50
 2738 0a1f 01       		.uleb128 0x1
 2739 0a20 30       		.byte	0x30
 2740 0a21 00       		.byte	0
 2741 0a22 0C       		.uleb128 0xc
 2742 0a23 22000000 		.4byte	.LVL164
 2743 0a27 11080000 		.4byte	0x811
 2744 0a2b 0A       		.uleb128 0xa
 2745 0a2c 01       		.uleb128 0x1
 2746 0a2d 53       		.byte	0x53
 2747 0a2e 03       		.uleb128 0x3
 2748 0a2f 0A       		.byte	0xa
 2749 0a30 0019     		.2byte	0x1900
 2750 0a32 0A       		.uleb128 0xa
 2751 0a33 01       		.uleb128 0x1
 2752 0a34 52       		.byte	0x52
 2753 0a35 01       		.uleb128 0x1
 2754 0a36 35       		.byte	0x35
 2755 0a37 0A       		.uleb128 0xa
 2756 0a38 01       		.uleb128 0x1
 2757 0a39 51       		.byte	0x51
 2758 0a3a 01       		.uleb128 0x1
 2759 0a3b 30       		.byte	0x30
 2760 0a3c 0A       		.uleb128 0xa
 2761 0a3d 02       		.uleb128 0x2
 2762 0a3e 7D       		.byte	0x7d
 2763 0a3f 00       		.sleb128 0
 2764 0a40 01       		.uleb128 0x1
 2765 0a41 4E       		.byte	0x4e
 2766 0a42 00       		.byte	0
 2767 0a43 00       		.byte	0
 2768 0a44 14       		.uleb128 0x14
 2769 0a45 6F070000 		.4byte	.LASF76
 2770 0a49 01       		.byte	0x1
 2771 0a4a A80A     		.2byte	0xaa8
 2772 0a4c 81000000 		.4byte	0x81
 2773 0a50 00000000 		.4byte	.LFB60
 2774 0a54 0C000000 		.4byte	.LFE60-.LFB60
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 99


 2775 0a58 01       		.uleb128 0x1
 2776 0a59 9C       		.byte	0x9c
 2777 0a5a 6F0A0000 		.4byte	0xa6f
 2778 0a5e 11       		.uleb128 0x11
 2779 0a5f E4030000 		.4byte	.LASF20
 2780 0a63 01       		.byte	0x1
 2781 0a64 A80A     		.2byte	0xaa8
 2782 0a66 81000000 		.4byte	0x81
 2783 0a6a 34080000 		.4byte	.LLST55
 2784 0a6e 00       		.byte	0
 2785 0a6f 14       		.uleb128 0x14
 2786 0a70 82050000 		.4byte	.LASF77
 2787 0a74 01       		.byte	0x1
 2788 0a75 C20A     		.2byte	0xac2
 2789 0a77 6B000000 		.4byte	0x6b
 2790 0a7b 00000000 		.4byte	.LFB61
 2791 0a7f 0C000000 		.4byte	.LFE61-.LFB61
 2792 0a83 01       		.uleb128 0x1
 2793 0a84 9C       		.byte	0x9c
 2794 0a85 9A0A0000 		.4byte	0xa9a
 2795 0a89 11       		.uleb128 0x11
 2796 0a8a E4030000 		.4byte	.LASF20
 2797 0a8e 01       		.byte	0x1
 2798 0a8f C20A     		.2byte	0xac2
 2799 0a91 81000000 		.4byte	0x81
 2800 0a95 55080000 		.4byte	.LLST56
 2801 0a99 00       		.byte	0
 2802 0a9a 14       		.uleb128 0x14
 2803 0a9b AE000000 		.4byte	.LASF78
 2804 0a9f 01       		.byte	0x1
 2805 0aa0 DC0A     		.2byte	0xadc
 2806 0aa2 6B000000 		.4byte	0x6b
 2807 0aa6 00000000 		.4byte	.LFB62
 2808 0aaa 04000000 		.4byte	.LFE62-.LFB62
 2809 0aae 01       		.uleb128 0x1
 2810 0aaf 9C       		.byte	0x9c
 2811 0ab0 C50A0000 		.4byte	0xac5
 2812 0ab4 11       		.uleb128 0x11
 2813 0ab5 1C060000 		.4byte	.LASF33
 2814 0ab9 01       		.byte	0x1
 2815 0aba DC0A     		.2byte	0xadc
 2816 0abc 81000000 		.4byte	0x81
 2817 0ac0 76080000 		.4byte	.LLST57
 2818 0ac4 00       		.byte	0
 2819 0ac5 17       		.uleb128 0x17
 2820 0ac6 76000000 		.4byte	0x76
 2821 0aca D50A0000 		.4byte	0xad5
 2822 0ace 18       		.uleb128 0x18
 2823 0acf B7000000 		.4byte	0xb7
 2824 0ad3 00       		.byte	0
 2825 0ad4 00       		.byte	0
 2826 0ad5 1A       		.uleb128 0x1a
 2827 0ad6 66050000 		.4byte	.LASF79
 2828 0ada 01       		.byte	0x1
 2829 0adb 61       		.byte	0x61
 2830 0adc E00A0000 		.4byte	0xae0
 2831 0ae0 06       		.uleb128 0x6
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 100


 2832 0ae1 C50A0000 		.4byte	0xac5
 2833 0ae5 17       		.uleb128 0x17
 2834 0ae6 76000000 		.4byte	0x76
 2835 0aea F50A0000 		.4byte	0xaf5
 2836 0aee 18       		.uleb128 0x18
 2837 0aef B7000000 		.4byte	0xb7
 2838 0af3 04       		.byte	0x4
 2839 0af4 00       		.byte	0
 2840 0af5 1B       		.uleb128 0x1b
 2841 0af6 17070000 		.4byte	.LASF80
 2842 0afa 01       		.byte	0x1
 2843 0afb 2C       		.byte	0x2c
 2844 0afc E50A0000 		.4byte	0xae5
 2845 0b00 1B       		.uleb128 0x1b
 2846 0b01 EB030000 		.4byte	.LASF81
 2847 0b05 01       		.byte	0x1
 2848 0b06 2D       		.byte	0x2d
 2849 0b07 07060000 		.4byte	0x607
 2850 0b0b 17       		.uleb128 0x17
 2851 0b0c 6B000000 		.4byte	0x6b
 2852 0b10 1B0B0000 		.4byte	0xb1b
 2853 0b14 18       		.uleb128 0x18
 2854 0b15 B7000000 		.4byte	0xb7
 2855 0b19 04       		.byte	0x4
 2856 0b1a 00       		.byte	0
 2857 0b1b 1B       		.uleb128 0x1b
 2858 0b1c FC020000 		.4byte	.LASF82
 2859 0b20 01       		.byte	0x1
 2860 0b21 2E       		.byte	0x2e
 2861 0b22 260B0000 		.4byte	0xb26
 2862 0b26 06       		.uleb128 0x6
 2863 0b27 0B0B0000 		.4byte	0xb0b
 2864 0b2b 1C       		.uleb128 0x1c
 2865 0b2c A4070000 		.4byte	.LASF83
 2866 0b30 01       		.byte	0x1
 2867 0b31 34       		.byte	0x34
 2868 0b32 E50A0000 		.4byte	0xae5
 2869 0b36 05       		.uleb128 0x5
 2870 0b37 03       		.byte	0x3
 2871 0b38 00000000 		.4byte	CapSense_sensorBaseline
 2872 0b3c 1C       		.uleb128 0x1c
 2873 0b3d 8E030000 		.4byte	.LASF84
 2874 0b41 01       		.byte	0x1
 2875 0b42 35       		.byte	0x35
 2876 0b43 0B0B0000 		.4byte	0xb0b
 2877 0b47 05       		.uleb128 0x5
 2878 0b48 03       		.byte	0x3
 2879 0b49 00000000 		.4byte	CapSense_sensorBaselineLow
 2880 0b4d 1C       		.uleb128 0x1c
 2881 0b4e BD010000 		.4byte	.LASF85
 2882 0b52 01       		.byte	0x1
 2883 0b53 36       		.byte	0x36
 2884 0b54 E50A0000 		.4byte	0xae5
 2885 0b58 05       		.uleb128 0x5
 2886 0b59 03       		.byte	0x3
 2887 0b5a 00000000 		.4byte	CapSense_sensorSignal
 2888 0b5e 1C       		.uleb128 0x1c
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 101


 2889 0b5f 47000000 		.4byte	.LASF86
 2890 0b63 01       		.byte	0x1
 2891 0b64 37       		.byte	0x37
 2892 0b65 07060000 		.4byte	0x607
 2893 0b69 05       		.uleb128 0x5
 2894 0b6a 03       		.byte	0x3
 2895 0b6b 00000000 		.4byte	CapSense_sensorOnMask
 2896 0b6f 1C       		.uleb128 0x1c
 2897 0b70 66040000 		.4byte	.LASF87
 2898 0b74 01       		.byte	0x1
 2899 0b75 39       		.byte	0x39
 2900 0b76 0B0B0000 		.4byte	0xb0b
 2901 0b7a 05       		.uleb128 0x5
 2902 0b7b 03       		.byte	0x3
 2903 0b7c 00000000 		.4byte	CapSense_lowBaselineResetCnt
 2904 0b80 1C       		.uleb128 0x1c
 2905 0b81 DB020000 		.4byte	.LASF88
 2906 0b85 01       		.byte	0x1
 2907 0b86 3A       		.byte	0x3a
 2908 0b87 0B0B0000 		.4byte	0xb0b
 2909 0b8b 05       		.uleb128 0x5
 2910 0b8c 03       		.byte	0x3
 2911 0b8d 00000000 		.4byte	CapSense_lowBaselineReset
 2912 0b91 1C       		.uleb128 0x1c
 2913 0b92 38050000 		.4byte	.LASF89
 2914 0b96 01       		.byte	0x1
 2915 0b97 49       		.byte	0x49
 2916 0b98 A20B0000 		.4byte	0xba2
 2917 0b9c 05       		.uleb128 0x5
 2918 0b9d 03       		.byte	0x3
 2919 0b9e 00000000 		.4byte	CapSense_fingerThreshold
 2920 0ba2 06       		.uleb128 0x6
 2921 0ba3 C50A0000 		.4byte	0xac5
 2922 0ba7 1C       		.uleb128 0x1c
 2923 0ba8 20050000 		.4byte	.LASF90
 2924 0bac 01       		.byte	0x1
 2925 0bad 4D       		.byte	0x4d
 2926 0bae B80B0000 		.4byte	0xbb8
 2927 0bb2 05       		.uleb128 0x5
 2928 0bb3 03       		.byte	0x3
 2929 0bb4 00000000 		.4byte	CapSense_noiseThreshold
 2930 0bb8 06       		.uleb128 0x6
 2931 0bb9 C50A0000 		.4byte	0xac5
 2932 0bbd 1C       		.uleb128 0x1c
 2933 0bbe 1D000000 		.4byte	.LASF91
 2934 0bc2 01       		.byte	0x1
 2935 0bc3 51       		.byte	0x51
 2936 0bc4 CE0B0000 		.4byte	0xbce
 2937 0bc8 05       		.uleb128 0x5
 2938 0bc9 03       		.byte	0x3
 2939 0bca 00000000 		.4byte	CapSense_hysteresis
 2940 0bce 06       		.uleb128 0x6
 2941 0bcf C50A0000 		.4byte	0xac5
 2942 0bd3 1C       		.uleb128 0x1c
 2943 0bd4 69060000 		.4byte	.LASF92
 2944 0bd8 01       		.byte	0x1
 2945 0bd9 55       		.byte	0x55
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 102


 2946 0bda E40B0000 		.4byte	0xbe4
 2947 0bde 05       		.uleb128 0x5
 2948 0bdf 03       		.byte	0x3
 2949 0be0 00000000 		.4byte	CapSense_debounce
 2950 0be4 06       		.uleb128 0x6
 2951 0be5 07060000 		.4byte	0x607
 2952 0be9 1C       		.uleb128 0x1c
 2953 0bea 31000000 		.4byte	.LASF93
 2954 0bee 01       		.byte	0x1
 2955 0bef 59       		.byte	0x59
 2956 0bf0 FA0B0000 		.4byte	0xbfa
 2957 0bf4 05       		.uleb128 0x5
 2958 0bf5 03       		.byte	0x3
 2959 0bf6 00000000 		.4byte	CapSense_rawDataIndex
 2960 0bfa 06       		.uleb128 0x6
 2961 0bfb 07060000 		.4byte	0x607
 2962 0bff 1C       		.uleb128 0x1c
 2963 0c00 ED070000 		.4byte	.LASF94
 2964 0c04 01       		.byte	0x1
 2965 0c05 5D       		.byte	0x5d
 2966 0c06 100C0000 		.4byte	0xc10
 2967 0c0a 05       		.uleb128 0x5
 2968 0c0b 03       		.byte	0x3
 2969 0c0c 00000000 		.4byte	CapSense_numberOfSensors
 2970 0c10 06       		.uleb128 0x6
 2971 0c11 07060000 		.4byte	0x607
 2972 0c15 1D       		.uleb128 0x1d
 2973 0c16 52030000 		.4byte	.LASF98
 2974 0c1a 03       		.byte	0x3
 2975 0c1b A0       		.byte	0xa0
 2976 0c1c 260C0000 		.4byte	0xc26
 2977 0c20 1E       		.uleb128 0x1e
 2978 0c21 81000000 		.4byte	0x81
 2979 0c25 00       		.byte	0
 2980 0c26 1F       		.uleb128 0x1f
 2981 0c27 DD070000 		.4byte	.LASF99
 2982 0c2b 03       		.byte	0x3
 2983 0c2c 9F       		.byte	0x9f
 2984 0c2d 81000000 		.4byte	0x81
 2985 0c31 20       		.uleb128 0x20
 2986 0c32 88070000 		.4byte	.LASF100
 2987 0c36 03       		.byte	0x3
 2988 0c37 A2       		.byte	0xa2
 2989 0c38 21       		.uleb128 0x21
 2990 0c39 5A070000 		.4byte	.LASF101
 2991 0c3d 04       		.byte	0x4
 2992 0c3e 61       		.byte	0x61
 2993 0c3f 81000000 		.4byte	0x81
 2994 0c43 520C0000 		.4byte	0xc52
 2995 0c47 1E       		.uleb128 0x1e
 2996 0c48 C4000000 		.4byte	0xc4
 2997 0c4c 1E       		.uleb128 0x1e
 2998 0c4d 81000000 		.4byte	0x81
 2999 0c51 00       		.byte	0
 3000 0c52 22       		.uleb128 0x22
 3001 0c53 51050000 		.4byte	.LASF102
 3002 0c57 04       		.byte	0x4
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 103


 3003 0c58 62       		.byte	0x62
 3004 0c59 1E       		.uleb128 0x1e
 3005 0c5a BE000000 		.4byte	0xbe
 3006 0c5e 1E       		.uleb128 0x1e
 3007 0c5f 81000000 		.4byte	0x81
 3008 0c63 1E       		.uleb128 0x1e
 3009 0c64 81000000 		.4byte	0x81
 3010 0c68 00       		.byte	0
 3011 0c69 00       		.byte	0
 3012              		.section	.debug_abbrev,"",%progbits
 3013              	.Ldebug_abbrev0:
 3014 0000 01       		.uleb128 0x1
 3015 0001 11       		.uleb128 0x11
 3016 0002 01       		.byte	0x1
 3017 0003 25       		.uleb128 0x25
 3018 0004 0E       		.uleb128 0xe
 3019 0005 13       		.uleb128 0x13
 3020 0006 0B       		.uleb128 0xb
 3021 0007 03       		.uleb128 0x3
 3022 0008 0E       		.uleb128 0xe
 3023 0009 1B       		.uleb128 0x1b
 3024 000a 0E       		.uleb128 0xe
 3025 000b 55       		.uleb128 0x55
 3026 000c 17       		.uleb128 0x17
 3027 000d 11       		.uleb128 0x11
 3028 000e 01       		.uleb128 0x1
 3029 000f 10       		.uleb128 0x10
 3030 0010 17       		.uleb128 0x17
 3031 0011 00       		.byte	0
 3032 0012 00       		.byte	0
 3033 0013 02       		.uleb128 0x2
 3034 0014 24       		.uleb128 0x24
 3035 0015 00       		.byte	0
 3036 0016 0B       		.uleb128 0xb
 3037 0017 0B       		.uleb128 0xb
 3038 0018 3E       		.uleb128 0x3e
 3039 0019 0B       		.uleb128 0xb
 3040 001a 03       		.uleb128 0x3
 3041 001b 0E       		.uleb128 0xe
 3042 001c 00       		.byte	0
 3043 001d 00       		.byte	0
 3044 001e 03       		.uleb128 0x3
 3045 001f 24       		.uleb128 0x24
 3046 0020 00       		.byte	0
 3047 0021 0B       		.uleb128 0xb
 3048 0022 0B       		.uleb128 0xb
 3049 0023 3E       		.uleb128 0x3e
 3050 0024 0B       		.uleb128 0xb
 3051 0025 03       		.uleb128 0x3
 3052 0026 08       		.uleb128 0x8
 3053 0027 00       		.byte	0
 3054 0028 00       		.byte	0
 3055 0029 04       		.uleb128 0x4
 3056 002a 16       		.uleb128 0x16
 3057 002b 00       		.byte	0
 3058 002c 03       		.uleb128 0x3
 3059 002d 0E       		.uleb128 0xe
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 104


 3060 002e 3A       		.uleb128 0x3a
 3061 002f 0B       		.uleb128 0xb
 3062 0030 3B       		.uleb128 0x3b
 3063 0031 0B       		.uleb128 0xb
 3064 0032 49       		.uleb128 0x49
 3065 0033 13       		.uleb128 0x13
 3066 0034 00       		.byte	0
 3067 0035 00       		.byte	0
 3068 0036 05       		.uleb128 0x5
 3069 0037 0F       		.uleb128 0xf
 3070 0038 00       		.byte	0
 3071 0039 0B       		.uleb128 0xb
 3072 003a 0B       		.uleb128 0xb
 3073 003b 49       		.uleb128 0x49
 3074 003c 13       		.uleb128 0x13
 3075 003d 00       		.byte	0
 3076 003e 00       		.byte	0
 3077 003f 06       		.uleb128 0x6
 3078 0040 26       		.uleb128 0x26
 3079 0041 00       		.byte	0
 3080 0042 49       		.uleb128 0x49
 3081 0043 13       		.uleb128 0x13
 3082 0044 00       		.byte	0
 3083 0045 00       		.byte	0
 3084 0046 07       		.uleb128 0x7
 3085 0047 2E       		.uleb128 0x2e
 3086 0048 01       		.byte	0x1
 3087 0049 3F       		.uleb128 0x3f
 3088 004a 19       		.uleb128 0x19
 3089 004b 03       		.uleb128 0x3
 3090 004c 0E       		.uleb128 0xe
 3091 004d 3A       		.uleb128 0x3a
 3092 004e 0B       		.uleb128 0xb
 3093 004f 3B       		.uleb128 0x3b
 3094 0050 0B       		.uleb128 0xb
 3095 0051 27       		.uleb128 0x27
 3096 0052 19       		.uleb128 0x19
 3097 0053 11       		.uleb128 0x11
 3098 0054 01       		.uleb128 0x1
 3099 0055 12       		.uleb128 0x12
 3100 0056 06       		.uleb128 0x6
 3101 0057 40       		.uleb128 0x40
 3102 0058 18       		.uleb128 0x18
 3103 0059 9742     		.uleb128 0x2117
 3104 005b 19       		.uleb128 0x19
 3105 005c 01       		.uleb128 0x1
 3106 005d 13       		.uleb128 0x13
 3107 005e 00       		.byte	0
 3108 005f 00       		.byte	0
 3109 0060 08       		.uleb128 0x8
 3110 0061 05       		.uleb128 0x5
 3111 0062 00       		.byte	0
 3112 0063 03       		.uleb128 0x3
 3113 0064 0E       		.uleb128 0xe
 3114 0065 3A       		.uleb128 0x3a
 3115 0066 0B       		.uleb128 0xb
 3116 0067 3B       		.uleb128 0x3b
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 105


 3117 0068 0B       		.uleb128 0xb
 3118 0069 49       		.uleb128 0x49
 3119 006a 13       		.uleb128 0x13
 3120 006b 02       		.uleb128 0x2
 3121 006c 17       		.uleb128 0x17
 3122 006d 00       		.byte	0
 3123 006e 00       		.byte	0
 3124 006f 09       		.uleb128 0x9
 3125 0070 898201   		.uleb128 0x4109
 3126 0073 01       		.byte	0x1
 3127 0074 11       		.uleb128 0x11
 3128 0075 01       		.uleb128 0x1
 3129 0076 31       		.uleb128 0x31
 3130 0077 13       		.uleb128 0x13
 3131 0078 01       		.uleb128 0x1
 3132 0079 13       		.uleb128 0x13
 3133 007a 00       		.byte	0
 3134 007b 00       		.byte	0
 3135 007c 0A       		.uleb128 0xa
 3136 007d 8A8201   		.uleb128 0x410a
 3137 0080 00       		.byte	0
 3138 0081 02       		.uleb128 0x2
 3139 0082 18       		.uleb128 0x18
 3140 0083 9142     		.uleb128 0x2111
 3141 0085 18       		.uleb128 0x18
 3142 0086 00       		.byte	0
 3143 0087 00       		.byte	0
 3144 0088 0B       		.uleb128 0xb
 3145 0089 898201   		.uleb128 0x4109
 3146 008c 00       		.byte	0
 3147 008d 11       		.uleb128 0x11
 3148 008e 01       		.uleb128 0x1
 3149 008f 31       		.uleb128 0x31
 3150 0090 13       		.uleb128 0x13
 3151 0091 00       		.byte	0
 3152 0092 00       		.byte	0
 3153 0093 0C       		.uleb128 0xc
 3154 0094 898201   		.uleb128 0x4109
 3155 0097 01       		.byte	0x1
 3156 0098 11       		.uleb128 0x11
 3157 0099 01       		.uleb128 0x1
 3158 009a 31       		.uleb128 0x31
 3159 009b 13       		.uleb128 0x13
 3160 009c 00       		.byte	0
 3161 009d 00       		.byte	0
 3162 009e 0D       		.uleb128 0xd
 3163 009f 34       		.uleb128 0x34
 3164 00a0 00       		.byte	0
 3165 00a1 03       		.uleb128 0x3
 3166 00a2 08       		.uleb128 0x8
 3167 00a3 3A       		.uleb128 0x3a
 3168 00a4 0B       		.uleb128 0xb
 3169 00a5 3B       		.uleb128 0x3b
 3170 00a6 0B       		.uleb128 0xb
 3171 00a7 49       		.uleb128 0x49
 3172 00a8 13       		.uleb128 0x13
 3173 00a9 02       		.uleb128 0x2
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 106


 3174 00aa 17       		.uleb128 0x17
 3175 00ab 00       		.byte	0
 3176 00ac 00       		.byte	0
 3177 00ad 0E       		.uleb128 0xe
 3178 00ae 2E       		.uleb128 0x2e
 3179 00af 01       		.byte	0x1
 3180 00b0 3F       		.uleb128 0x3f
 3181 00b1 19       		.uleb128 0x19
 3182 00b2 03       		.uleb128 0x3
 3183 00b3 0E       		.uleb128 0xe
 3184 00b4 3A       		.uleb128 0x3a
 3185 00b5 0B       		.uleb128 0xb
 3186 00b6 3B       		.uleb128 0x3b
 3187 00b7 05       		.uleb128 0x5
 3188 00b8 27       		.uleb128 0x27
 3189 00b9 19       		.uleb128 0x19
 3190 00ba 11       		.uleb128 0x11
 3191 00bb 01       		.uleb128 0x1
 3192 00bc 12       		.uleb128 0x12
 3193 00bd 06       		.uleb128 0x6
 3194 00be 40       		.uleb128 0x40
 3195 00bf 18       		.uleb128 0x18
 3196 00c0 9742     		.uleb128 0x2117
 3197 00c2 19       		.uleb128 0x19
 3198 00c3 01       		.uleb128 0x1
 3199 00c4 13       		.uleb128 0x13
 3200 00c5 00       		.byte	0
 3201 00c6 00       		.byte	0
 3202 00c7 0F       		.uleb128 0xf
 3203 00c8 34       		.uleb128 0x34
 3204 00c9 00       		.byte	0
 3205 00ca 03       		.uleb128 0x3
 3206 00cb 08       		.uleb128 0x8
 3207 00cc 3A       		.uleb128 0x3a
 3208 00cd 0B       		.uleb128 0xb
 3209 00ce 3B       		.uleb128 0x3b
 3210 00cf 05       		.uleb128 0x5
 3211 00d0 49       		.uleb128 0x49
 3212 00d1 13       		.uleb128 0x13
 3213 00d2 02       		.uleb128 0x2
 3214 00d3 17       		.uleb128 0x17
 3215 00d4 00       		.byte	0
 3216 00d5 00       		.byte	0
 3217 00d6 10       		.uleb128 0x10
 3218 00d7 34       		.uleb128 0x34
 3219 00d8 00       		.byte	0
 3220 00d9 03       		.uleb128 0x3
 3221 00da 0E       		.uleb128 0xe
 3222 00db 3A       		.uleb128 0x3a
 3223 00dc 0B       		.uleb128 0xb
 3224 00dd 3B       		.uleb128 0x3b
 3225 00de 05       		.uleb128 0x5
 3226 00df 49       		.uleb128 0x49
 3227 00e0 13       		.uleb128 0x13
 3228 00e1 02       		.uleb128 0x2
 3229 00e2 17       		.uleb128 0x17
 3230 00e3 00       		.byte	0
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 107


 3231 00e4 00       		.byte	0
 3232 00e5 11       		.uleb128 0x11
 3233 00e6 05       		.uleb128 0x5
 3234 00e7 00       		.byte	0
 3235 00e8 03       		.uleb128 0x3
 3236 00e9 0E       		.uleb128 0xe
 3237 00ea 3A       		.uleb128 0x3a
 3238 00eb 0B       		.uleb128 0xb
 3239 00ec 3B       		.uleb128 0x3b
 3240 00ed 05       		.uleb128 0x5
 3241 00ee 49       		.uleb128 0x49
 3242 00ef 13       		.uleb128 0x13
 3243 00f0 02       		.uleb128 0x2
 3244 00f1 17       		.uleb128 0x17
 3245 00f2 00       		.byte	0
 3246 00f3 00       		.byte	0
 3247 00f4 12       		.uleb128 0x12
 3248 00f5 34       		.uleb128 0x34
 3249 00f6 00       		.byte	0
 3250 00f7 03       		.uleb128 0x3
 3251 00f8 0E       		.uleb128 0xe
 3252 00f9 3A       		.uleb128 0x3a
 3253 00fa 0B       		.uleb128 0xb
 3254 00fb 3B       		.uleb128 0x3b
 3255 00fc 05       		.uleb128 0x5
 3256 00fd 49       		.uleb128 0x49
 3257 00fe 13       		.uleb128 0x13
 3258 00ff 00       		.byte	0
 3259 0100 00       		.byte	0
 3260 0101 13       		.uleb128 0x13
 3261 0102 34       		.uleb128 0x34
 3262 0103 00       		.byte	0
 3263 0104 03       		.uleb128 0x3
 3264 0105 0E       		.uleb128 0xe
 3265 0106 3A       		.uleb128 0x3a
 3266 0107 0B       		.uleb128 0xb
 3267 0108 3B       		.uleb128 0x3b
 3268 0109 05       		.uleb128 0x5
 3269 010a 49       		.uleb128 0x49
 3270 010b 13       		.uleb128 0x13
 3271 010c 1C       		.uleb128 0x1c
 3272 010d 0B       		.uleb128 0xb
 3273 010e 00       		.byte	0
 3274 010f 00       		.byte	0
 3275 0110 14       		.uleb128 0x14
 3276 0111 2E       		.uleb128 0x2e
 3277 0112 01       		.byte	0x1
 3278 0113 3F       		.uleb128 0x3f
 3279 0114 19       		.uleb128 0x19
 3280 0115 03       		.uleb128 0x3
 3281 0116 0E       		.uleb128 0xe
 3282 0117 3A       		.uleb128 0x3a
 3283 0118 0B       		.uleb128 0xb
 3284 0119 3B       		.uleb128 0x3b
 3285 011a 05       		.uleb128 0x5
 3286 011b 27       		.uleb128 0x27
 3287 011c 19       		.uleb128 0x19
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 108


 3288 011d 49       		.uleb128 0x49
 3289 011e 13       		.uleb128 0x13
 3290 011f 11       		.uleb128 0x11
 3291 0120 01       		.uleb128 0x1
 3292 0121 12       		.uleb128 0x12
 3293 0122 06       		.uleb128 0x6
 3294 0123 40       		.uleb128 0x40
 3295 0124 18       		.uleb128 0x18
 3296 0125 9742     		.uleb128 0x2117
 3297 0127 19       		.uleb128 0x19
 3298 0128 01       		.uleb128 0x1
 3299 0129 13       		.uleb128 0x13
 3300 012a 00       		.byte	0
 3301 012b 00       		.byte	0
 3302 012c 15       		.uleb128 0x15
 3303 012d 05       		.uleb128 0x5
 3304 012e 00       		.byte	0
 3305 012f 03       		.uleb128 0x3
 3306 0130 0E       		.uleb128 0xe
 3307 0131 3A       		.uleb128 0x3a
 3308 0132 0B       		.uleb128 0xb
 3309 0133 3B       		.uleb128 0x3b
 3310 0134 05       		.uleb128 0x5
 3311 0135 49       		.uleb128 0x49
 3312 0136 13       		.uleb128 0x13
 3313 0137 02       		.uleb128 0x2
 3314 0138 18       		.uleb128 0x18
 3315 0139 00       		.byte	0
 3316 013a 00       		.byte	0
 3317 013b 16       		.uleb128 0x16
 3318 013c 34       		.uleb128 0x34
 3319 013d 00       		.byte	0
 3320 013e 03       		.uleb128 0x3
 3321 013f 0E       		.uleb128 0xe
 3322 0140 3A       		.uleb128 0x3a
 3323 0141 0B       		.uleb128 0xb
 3324 0142 3B       		.uleb128 0x3b
 3325 0143 05       		.uleb128 0x5
 3326 0144 49       		.uleb128 0x49
 3327 0145 13       		.uleb128 0x13
 3328 0146 02       		.uleb128 0x2
 3329 0147 18       		.uleb128 0x18
 3330 0148 00       		.byte	0
 3331 0149 00       		.byte	0
 3332 014a 17       		.uleb128 0x17
 3333 014b 01       		.uleb128 0x1
 3334 014c 01       		.byte	0x1
 3335 014d 49       		.uleb128 0x49
 3336 014e 13       		.uleb128 0x13
 3337 014f 01       		.uleb128 0x1
 3338 0150 13       		.uleb128 0x13
 3339 0151 00       		.byte	0
 3340 0152 00       		.byte	0
 3341 0153 18       		.uleb128 0x18
 3342 0154 21       		.uleb128 0x21
 3343 0155 00       		.byte	0
 3344 0156 49       		.uleb128 0x49
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 109


 3345 0157 13       		.uleb128 0x13
 3346 0158 2F       		.uleb128 0x2f
 3347 0159 0B       		.uleb128 0xb
 3348 015a 00       		.byte	0
 3349 015b 00       		.byte	0
 3350 015c 19       		.uleb128 0x19
 3351 015d 2E       		.uleb128 0x2e
 3352 015e 01       		.byte	0x1
 3353 015f 3F       		.uleb128 0x3f
 3354 0160 19       		.uleb128 0x19
 3355 0161 03       		.uleb128 0x3
 3356 0162 0E       		.uleb128 0xe
 3357 0163 3A       		.uleb128 0x3a
 3358 0164 0B       		.uleb128 0xb
 3359 0165 3B       		.uleb128 0x3b
 3360 0166 05       		.uleb128 0x5
 3361 0167 27       		.uleb128 0x27
 3362 0168 19       		.uleb128 0x19
 3363 0169 49       		.uleb128 0x49
 3364 016a 13       		.uleb128 0x13
 3365 016b 11       		.uleb128 0x11
 3366 016c 01       		.uleb128 0x1
 3367 016d 12       		.uleb128 0x12
 3368 016e 06       		.uleb128 0x6
 3369 016f 40       		.uleb128 0x40
 3370 0170 18       		.uleb128 0x18
 3371 0171 9642     		.uleb128 0x2116
 3372 0173 19       		.uleb128 0x19
 3373 0174 01       		.uleb128 0x1
 3374 0175 13       		.uleb128 0x13
 3375 0176 00       		.byte	0
 3376 0177 00       		.byte	0
 3377 0178 1A       		.uleb128 0x1a
 3378 0179 34       		.uleb128 0x34
 3379 017a 00       		.byte	0
 3380 017b 03       		.uleb128 0x3
 3381 017c 0E       		.uleb128 0xe
 3382 017d 3A       		.uleb128 0x3a
 3383 017e 0B       		.uleb128 0xb
 3384 017f 3B       		.uleb128 0x3b
 3385 0180 0B       		.uleb128 0xb
 3386 0181 49       		.uleb128 0x49
 3387 0182 13       		.uleb128 0x13
 3388 0183 00       		.byte	0
 3389 0184 00       		.byte	0
 3390 0185 1B       		.uleb128 0x1b
 3391 0186 34       		.uleb128 0x34
 3392 0187 00       		.byte	0
 3393 0188 03       		.uleb128 0x3
 3394 0189 0E       		.uleb128 0xe
 3395 018a 3A       		.uleb128 0x3a
 3396 018b 0B       		.uleb128 0xb
 3397 018c 3B       		.uleb128 0x3b
 3398 018d 0B       		.uleb128 0xb
 3399 018e 49       		.uleb128 0x49
 3400 018f 13       		.uleb128 0x13
 3401 0190 3F       		.uleb128 0x3f
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 110


 3402 0191 19       		.uleb128 0x19
 3403 0192 3C       		.uleb128 0x3c
 3404 0193 19       		.uleb128 0x19
 3405 0194 00       		.byte	0
 3406 0195 00       		.byte	0
 3407 0196 1C       		.uleb128 0x1c
 3408 0197 34       		.uleb128 0x34
 3409 0198 00       		.byte	0
 3410 0199 03       		.uleb128 0x3
 3411 019a 0E       		.uleb128 0xe
 3412 019b 3A       		.uleb128 0x3a
 3413 019c 0B       		.uleb128 0xb
 3414 019d 3B       		.uleb128 0x3b
 3415 019e 0B       		.uleb128 0xb
 3416 019f 49       		.uleb128 0x49
 3417 01a0 13       		.uleb128 0x13
 3418 01a1 3F       		.uleb128 0x3f
 3419 01a2 19       		.uleb128 0x19
 3420 01a3 02       		.uleb128 0x2
 3421 01a4 18       		.uleb128 0x18
 3422 01a5 00       		.byte	0
 3423 01a6 00       		.byte	0
 3424 01a7 1D       		.uleb128 0x1d
 3425 01a8 2E       		.uleb128 0x2e
 3426 01a9 01       		.byte	0x1
 3427 01aa 3F       		.uleb128 0x3f
 3428 01ab 19       		.uleb128 0x19
 3429 01ac 03       		.uleb128 0x3
 3430 01ad 0E       		.uleb128 0xe
 3431 01ae 3A       		.uleb128 0x3a
 3432 01af 0B       		.uleb128 0xb
 3433 01b0 3B       		.uleb128 0x3b
 3434 01b1 0B       		.uleb128 0xb
 3435 01b2 27       		.uleb128 0x27
 3436 01b3 19       		.uleb128 0x19
 3437 01b4 3C       		.uleb128 0x3c
 3438 01b5 19       		.uleb128 0x19
 3439 01b6 01       		.uleb128 0x1
 3440 01b7 13       		.uleb128 0x13
 3441 01b8 00       		.byte	0
 3442 01b9 00       		.byte	0
 3443 01ba 1E       		.uleb128 0x1e
 3444 01bb 05       		.uleb128 0x5
 3445 01bc 00       		.byte	0
 3446 01bd 49       		.uleb128 0x49
 3447 01be 13       		.uleb128 0x13
 3448 01bf 00       		.byte	0
 3449 01c0 00       		.byte	0
 3450 01c1 1F       		.uleb128 0x1f
 3451 01c2 2E       		.uleb128 0x2e
 3452 01c3 00       		.byte	0
 3453 01c4 3F       		.uleb128 0x3f
 3454 01c5 19       		.uleb128 0x19
 3455 01c6 03       		.uleb128 0x3
 3456 01c7 0E       		.uleb128 0xe
 3457 01c8 3A       		.uleb128 0x3a
 3458 01c9 0B       		.uleb128 0xb
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 111


 3459 01ca 3B       		.uleb128 0x3b
 3460 01cb 0B       		.uleb128 0xb
 3461 01cc 27       		.uleb128 0x27
 3462 01cd 19       		.uleb128 0x19
 3463 01ce 49       		.uleb128 0x49
 3464 01cf 13       		.uleb128 0x13
 3465 01d0 3C       		.uleb128 0x3c
 3466 01d1 19       		.uleb128 0x19
 3467 01d2 00       		.byte	0
 3468 01d3 00       		.byte	0
 3469 01d4 20       		.uleb128 0x20
 3470 01d5 2E       		.uleb128 0x2e
 3471 01d6 00       		.byte	0
 3472 01d7 3F       		.uleb128 0x3f
 3473 01d8 19       		.uleb128 0x19
 3474 01d9 03       		.uleb128 0x3
 3475 01da 0E       		.uleb128 0xe
 3476 01db 3A       		.uleb128 0x3a
 3477 01dc 0B       		.uleb128 0xb
 3478 01dd 3B       		.uleb128 0x3b
 3479 01de 0B       		.uleb128 0xb
 3480 01df 27       		.uleb128 0x27
 3481 01e0 19       		.uleb128 0x19
 3482 01e1 3C       		.uleb128 0x3c
 3483 01e2 19       		.uleb128 0x19
 3484 01e3 00       		.byte	0
 3485 01e4 00       		.byte	0
 3486 01e5 21       		.uleb128 0x21
 3487 01e6 2E       		.uleb128 0x2e
 3488 01e7 01       		.byte	0x1
 3489 01e8 3F       		.uleb128 0x3f
 3490 01e9 19       		.uleb128 0x19
 3491 01ea 03       		.uleb128 0x3
 3492 01eb 0E       		.uleb128 0xe
 3493 01ec 3A       		.uleb128 0x3a
 3494 01ed 0B       		.uleb128 0xb
 3495 01ee 3B       		.uleb128 0x3b
 3496 01ef 0B       		.uleb128 0xb
 3497 01f0 27       		.uleb128 0x27
 3498 01f1 19       		.uleb128 0x19
 3499 01f2 49       		.uleb128 0x49
 3500 01f3 13       		.uleb128 0x13
 3501 01f4 3C       		.uleb128 0x3c
 3502 01f5 19       		.uleb128 0x19
 3503 01f6 01       		.uleb128 0x1
 3504 01f7 13       		.uleb128 0x13
 3505 01f8 00       		.byte	0
 3506 01f9 00       		.byte	0
 3507 01fa 22       		.uleb128 0x22
 3508 01fb 2E       		.uleb128 0x2e
 3509 01fc 01       		.byte	0x1
 3510 01fd 3F       		.uleb128 0x3f
 3511 01fe 19       		.uleb128 0x19
 3512 01ff 03       		.uleb128 0x3
 3513 0200 0E       		.uleb128 0xe
 3514 0201 3A       		.uleb128 0x3a
 3515 0202 0B       		.uleb128 0xb
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 112


 3516 0203 3B       		.uleb128 0x3b
 3517 0204 0B       		.uleb128 0xb
 3518 0205 27       		.uleb128 0x27
 3519 0206 19       		.uleb128 0x19
 3520 0207 3C       		.uleb128 0x3c
 3521 0208 19       		.uleb128 0x19
 3522 0209 00       		.byte	0
 3523 020a 00       		.byte	0
 3524 020b 00       		.byte	0
 3525              		.section	.debug_loc,"",%progbits
 3526              	.Ldebug_loc0:
 3527              	.LLST0:
 3528 0000 00000000 		.4byte	.LVL0
 3529 0004 0C000000 		.4byte	.LVL1
 3530 0008 0100     		.2byte	0x1
 3531 000a 50       		.byte	0x50
 3532 000b 0C000000 		.4byte	.LVL1
 3533 000f 20000000 		.4byte	.LFE35
 3534 0013 0400     		.2byte	0x4
 3535 0015 F3       		.byte	0xf3
 3536 0016 01       		.uleb128 0x1
 3537 0017 50       		.byte	0x50
 3538 0018 9F       		.byte	0x9f
 3539 0019 00000000 		.4byte	0
 3540 001d 00000000 		.4byte	0
 3541              	.LLST1:
 3542 0021 00000000 		.4byte	.LVL2
 3543 0025 07000000 		.4byte	.LVL3-1
 3544 0029 0100     		.2byte	0x1
 3545 002b 50       		.byte	0x50
 3546 002c 07000000 		.4byte	.LVL3-1
 3547 0030 16000000 		.4byte	.LVL6
 3548 0034 0100     		.2byte	0x1
 3549 0036 54       		.byte	0x54
 3550 0037 16000000 		.4byte	.LVL6
 3551 003b 18000000 		.4byte	.LFE36
 3552 003f 0400     		.2byte	0x4
 3553 0041 F3       		.byte	0xf3
 3554 0042 01       		.uleb128 0x1
 3555 0043 50       		.byte	0x50
 3556 0044 9F       		.byte	0x9f
 3557 0045 00000000 		.4byte	0
 3558 0049 00000000 		.4byte	0
 3559              	.LLST2:
 3560 004d 02000000 		.4byte	.LVL7
 3561 0051 06000000 		.4byte	.LVL8
 3562 0055 0200     		.2byte	0x2
 3563 0057 30       		.byte	0x30
 3564 0058 9F       		.byte	0x9f
 3565 0059 06000000 		.4byte	.LVL8
 3566 005d 12000000 		.4byte	.LVL11
 3567 0061 0100     		.2byte	0x1
 3568 0063 54       		.byte	0x54
 3569 0064 00000000 		.4byte	0
 3570 0068 00000000 		.4byte	0
 3571              	.LLST3:
 3572 006c 14000000 		.4byte	.LVL14
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 113


 3573 0070 2C000000 		.4byte	.LVL19
 3574 0074 0100     		.2byte	0x1
 3575 0076 54       		.byte	0x54
 3576 0077 00000000 		.4byte	0
 3577 007b 00000000 		.4byte	0
 3578              	.LLST4:
 3579 007f 1C000000 		.4byte	.LVL15
 3580 0083 22000000 		.4byte	.LVL16
 3581 0087 0100     		.2byte	0x1
 3582 0089 50       		.byte	0x50
 3583 008a 00000000 		.4byte	0
 3584 008e 00000000 		.4byte	0
 3585              	.LLST5:
 3586 0092 00000000 		.4byte	.LVL20
 3587 0096 1A000000 		.4byte	.LVL24
 3588 009a 0100     		.2byte	0x1
 3589 009c 50       		.byte	0x50
 3590 009d 1A000000 		.4byte	.LVL24
 3591 00a1 26000000 		.4byte	.LVL26
 3592 00a5 0100     		.2byte	0x1
 3593 00a7 54       		.byte	0x54
 3594 00a8 26000000 		.4byte	.LVL26
 3595 00ac 2C000000 		.4byte	.LVL28
 3596 00b0 0100     		.2byte	0x1
 3597 00b2 50       		.byte	0x50
 3598 00b3 2C000000 		.4byte	.LVL28
 3599 00b7 92000000 		.4byte	.LVL38
 3600 00bb 0100     		.2byte	0x1
 3601 00bd 54       		.byte	0x54
 3602 00be 92000000 		.4byte	.LVL38
 3603 00c2 9A000000 		.4byte	.LVL39
 3604 00c6 0400     		.2byte	0x4
 3605 00c8 F3       		.byte	0xf3
 3606 00c9 01       		.uleb128 0x1
 3607 00ca 50       		.byte	0x50
 3608 00cb 9F       		.byte	0x9f
 3609 00cc 9A000000 		.4byte	.LVL39
 3610 00d0 9C000000 		.4byte	.LVL40
 3611 00d4 0100     		.2byte	0x1
 3612 00d6 54       		.byte	0x54
 3613 00d7 9C000000 		.4byte	.LVL40
 3614 00db BC000000 		.4byte	.LFE39
 3615 00df 0400     		.2byte	0x4
 3616 00e1 F3       		.byte	0xf3
 3617 00e2 01       		.uleb128 0x1
 3618 00e3 50       		.byte	0x50
 3619 00e4 9F       		.byte	0x9f
 3620 00e5 00000000 		.4byte	0
 3621 00e9 00000000 		.4byte	0
 3622              	.LLST6:
 3623 00ed 66000000 		.4byte	.LVL31
 3624 00f1 6E000000 		.4byte	.LVL32
 3625 00f5 0100     		.2byte	0x1
 3626 00f7 51       		.byte	0x51
 3627 00f8 6E000000 		.4byte	.LVL32
 3628 00fc 74000000 		.4byte	.LVL33
 3629 0100 0100     		.2byte	0x1
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 114


 3630 0102 58       		.byte	0x58
 3631 0103 74000000 		.4byte	.LVL33
 3632 0107 76000000 		.4byte	.LVL34
 3633 010b 0100     		.2byte	0x1
 3634 010d 57       		.byte	0x57
 3635 010e 76000000 		.4byte	.LVL34
 3636 0112 78000000 		.4byte	.LVL35
 3637 0116 0100     		.2byte	0x1
 3638 0118 52       		.byte	0x52
 3639 0119 78000000 		.4byte	.LVL35
 3640 011d 86000000 		.4byte	.LVL36
 3641 0121 0100     		.2byte	0x1
 3642 0123 53       		.byte	0x53
 3643 0124 00000000 		.4byte	0
 3644 0128 00000000 		.4byte	0
 3645              	.LLST7:
 3646 012c 22000000 		.4byte	.LVL25
 3647 0130 26000000 		.4byte	.LVL26
 3648 0134 0200     		.2byte	0x2
 3649 0136 31       		.byte	0x31
 3650 0137 9F       		.byte	0x9f
 3651 0138 2A000000 		.4byte	.LVL27
 3652 013c 2C000000 		.4byte	.LVL28
 3653 0140 0200     		.2byte	0x2
 3654 0142 30       		.byte	0x30
 3655 0143 9F       		.byte	0x9f
 3656 0144 2C000000 		.4byte	.LVL28
 3657 0148 A4000000 		.4byte	.LVL42
 3658 014c 0100     		.2byte	0x1
 3659 014e 56       		.byte	0x56
 3660 014f 00000000 		.4byte	0
 3661 0153 00000000 		.4byte	0
 3662              	.LLST8:
 3663 0157 22000000 		.4byte	.LVL25
 3664 015b 26000000 		.4byte	.LVL26
 3665 015f 0100     		.2byte	0x1
 3666 0161 55       		.byte	0x55
 3667 0162 2A000000 		.4byte	.LVL27
 3668 0166 A4000000 		.4byte	.LVL41
 3669 016a 0100     		.2byte	0x1
 3670 016c 55       		.byte	0x55
 3671 016d 00000000 		.4byte	0
 3672 0171 00000000 		.4byte	0
 3673              	.LLST9:
 3674 0175 10000000 		.4byte	.LVL22
 3675 0179 14000000 		.4byte	.LVL23
 3676 017d 0200     		.2byte	0x2
 3677 017f 73       		.byte	0x73
 3678 0180 00       		.sleb128 0
 3679 0181 14000000 		.4byte	.LVL23
 3680 0185 1A000000 		.4byte	.LVL24
 3681 0189 0400     		.2byte	0x4
 3682 018b 70       		.byte	0x70
 3683 018c 00       		.sleb128 0
 3684 018d 31       		.byte	0x31
 3685 018e 24       		.byte	0x24
 3686 018f 1A000000 		.4byte	.LVL24
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 115


 3687 0193 26000000 		.4byte	.LVL26
 3688 0197 0400     		.2byte	0x4
 3689 0199 74       		.byte	0x74
 3690 019a 00       		.sleb128 0
 3691 019b 31       		.byte	0x31
 3692 019c 24       		.byte	0x24
 3693 019d 26000000 		.4byte	.LVL26
 3694 01a1 2C000000 		.4byte	.LVL28
 3695 01a5 0400     		.2byte	0x4
 3696 01a7 70       		.byte	0x70
 3697 01a8 00       		.sleb128 0
 3698 01a9 31       		.byte	0x31
 3699 01aa 24       		.byte	0x24
 3700 01ab 2C000000 		.4byte	.LVL28
 3701 01af 45000000 		.4byte	.LVL29-1
 3702 01b3 0400     		.2byte	0x4
 3703 01b5 74       		.byte	0x74
 3704 01b6 00       		.sleb128 0
 3705 01b7 31       		.byte	0x31
 3706 01b8 24       		.byte	0x24
 3707 01b9 4E000000 		.4byte	.LVL30
 3708 01bd 88000000 		.4byte	.LVL37
 3709 01c1 0400     		.2byte	0x4
 3710 01c3 74       		.byte	0x74
 3711 01c4 00       		.sleb128 0
 3712 01c5 31       		.byte	0x31
 3713 01c6 24       		.byte	0x24
 3714 01c7 00000000 		.4byte	0
 3715 01cb 00000000 		.4byte	0
 3716              	.LLST10:
 3717 01cf 00000000 		.4byte	.LVL43
 3718 01d3 05000000 		.4byte	.LVL44-1
 3719 01d7 0100     		.2byte	0x1
 3720 01d9 50       		.byte	0x50
 3721 01da 05000000 		.4byte	.LVL44-1
 3722 01de 08000000 		.4byte	.LFE40
 3723 01e2 0400     		.2byte	0x4
 3724 01e4 F3       		.byte	0xf3
 3725 01e5 01       		.uleb128 0x1
 3726 01e6 50       		.byte	0x50
 3727 01e7 9F       		.byte	0x9f
 3728 01e8 00000000 		.4byte	0
 3729 01ec 00000000 		.4byte	0
 3730              	.LLST11:
 3731 01f0 02000000 		.4byte	.LVL45
 3732 01f4 08000000 		.4byte	.LVL46
 3733 01f8 0200     		.2byte	0x2
 3734 01fa 30       		.byte	0x30
 3735 01fb 9F       		.byte	0x9f
 3736 01fc 08000000 		.4byte	.LVL46
 3737 0200 20000000 		.4byte	.LVL51
 3738 0204 0100     		.2byte	0x1
 3739 0206 54       		.byte	0x54
 3740 0207 00000000 		.4byte	0
 3741 020b 00000000 		.4byte	0
 3742              	.LLST12:
 3743 020f 10000000 		.4byte	.LVL47
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 116


 3744 0213 16000000 		.4byte	.LVL48
 3745 0217 0100     		.2byte	0x1
 3746 0219 50       		.byte	0x50
 3747 021a 00000000 		.4byte	0
 3748 021e 00000000 		.4byte	0
 3749              	.LLST13:
 3750 0222 00000000 		.4byte	.LVL52
 3751 0226 08000000 		.4byte	.LVL54
 3752 022a 0100     		.2byte	0x1
 3753 022c 50       		.byte	0x50
 3754 022d 08000000 		.4byte	.LVL54
 3755 0231 28000000 		.4byte	.LFE42
 3756 0235 0400     		.2byte	0x4
 3757 0237 F3       		.byte	0xf3
 3758 0238 01       		.uleb128 0x1
 3759 0239 50       		.byte	0x50
 3760 023a 9F       		.byte	0x9f
 3761 023b 00000000 		.4byte	0
 3762 023f 00000000 		.4byte	0
 3763              	.LLST14:
 3764 0243 02000000 		.4byte	.LVL53
 3765 0247 08000000 		.4byte	.LVL54
 3766 024b 0200     		.2byte	0x2
 3767 024d 30       		.byte	0x30
 3768 024e 9F       		.byte	0x9f
 3769 024f 08000000 		.4byte	.LVL54
 3770 0253 20000000 		.4byte	.LVL59
 3771 0257 0100     		.2byte	0x1
 3772 0259 54       		.byte	0x54
 3773 025a 00000000 		.4byte	0
 3774 025e 00000000 		.4byte	0
 3775              	.LLST15:
 3776 0262 10000000 		.4byte	.LVL55
 3777 0266 16000000 		.4byte	.LVL56
 3778 026a 0100     		.2byte	0x1
 3779 026c 50       		.byte	0x50
 3780 026d 00000000 		.4byte	0
 3781 0271 00000000 		.4byte	0
 3782              	.LLST16:
 3783 0275 00000000 		.4byte	.LVL60
 3784 0279 02000000 		.4byte	.LVL61
 3785 027d 0100     		.2byte	0x1
 3786 027f 50       		.byte	0x50
 3787 0280 02000000 		.4byte	.LVL61
 3788 0284 0C000000 		.4byte	.LFE43
 3789 0288 0400     		.2byte	0x4
 3790 028a F3       		.byte	0xf3
 3791 028b 01       		.uleb128 0x1
 3792 028c 50       		.byte	0x50
 3793 028d 9F       		.byte	0x9f
 3794 028e 00000000 		.4byte	0
 3795 0292 00000000 		.4byte	0
 3796              	.LLST17:
 3797 0296 00000000 		.4byte	.LVL62
 3798 029a 02000000 		.4byte	.LVL63
 3799 029e 0100     		.2byte	0x1
 3800 02a0 50       		.byte	0x50
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 117


 3801 02a1 02000000 		.4byte	.LVL63
 3802 02a5 0C000000 		.4byte	.LFE44
 3803 02a9 0400     		.2byte	0x4
 3804 02ab F3       		.byte	0xf3
 3805 02ac 01       		.uleb128 0x1
 3806 02ad 50       		.byte	0x50
 3807 02ae 9F       		.byte	0x9f
 3808 02af 00000000 		.4byte	0
 3809 02b3 00000000 		.4byte	0
 3810              	.LLST18:
 3811 02b7 00000000 		.4byte	.LVL64
 3812 02bb 02000000 		.4byte	.LVL65
 3813 02bf 0100     		.2byte	0x1
 3814 02c1 50       		.byte	0x50
 3815 02c2 02000000 		.4byte	.LVL65
 3816 02c6 10000000 		.4byte	.LFE45
 3817 02ca 0400     		.2byte	0x4
 3818 02cc F3       		.byte	0xf3
 3819 02cd 01       		.uleb128 0x1
 3820 02ce 50       		.byte	0x50
 3821 02cf 9F       		.byte	0x9f
 3822 02d0 00000000 		.4byte	0
 3823 02d4 00000000 		.4byte	0
 3824              	.LLST19:
 3825 02d8 00000000 		.4byte	.LVL66
 3826 02dc 02000000 		.4byte	.LVL67
 3827 02e0 0100     		.2byte	0x1
 3828 02e2 50       		.byte	0x50
 3829 02e3 02000000 		.4byte	.LVL67
 3830 02e7 10000000 		.4byte	.LFE46
 3831 02eb 0400     		.2byte	0x4
 3832 02ed F3       		.byte	0xf3
 3833 02ee 01       		.uleb128 0x1
 3834 02ef 50       		.byte	0x50
 3835 02f0 9F       		.byte	0x9f
 3836 02f1 00000000 		.4byte	0
 3837 02f5 00000000 		.4byte	0
 3838              	.LLST20:
 3839 02f9 00000000 		.4byte	.LVL68
 3840 02fd 02000000 		.4byte	.LVL69
 3841 0301 0100     		.2byte	0x1
 3842 0303 50       		.byte	0x50
 3843 0304 02000000 		.4byte	.LVL69
 3844 0308 04000000 		.4byte	.LFE47
 3845 030c 0400     		.2byte	0x4
 3846 030e F3       		.byte	0xf3
 3847 030f 01       		.uleb128 0x1
 3848 0310 50       		.byte	0x50
 3849 0311 9F       		.byte	0x9f
 3850 0312 00000000 		.4byte	0
 3851 0316 00000000 		.4byte	0
 3852              	.LLST21:
 3853 031a 00000000 		.4byte	.LVL70
 3854 031e 02000000 		.4byte	.LVL71
 3855 0322 0100     		.2byte	0x1
 3856 0324 50       		.byte	0x50
 3857 0325 02000000 		.4byte	.LVL71
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 118


 3858 0329 04000000 		.4byte	.LFE48
 3859 032d 0400     		.2byte	0x4
 3860 032f F3       		.byte	0xf3
 3861 0330 01       		.uleb128 0x1
 3862 0331 50       		.byte	0x50
 3863 0332 9F       		.byte	0x9f
 3864 0333 00000000 		.4byte	0
 3865 0337 00000000 		.4byte	0
 3866              	.LLST22:
 3867 033b 00000000 		.4byte	.LVL72
 3868 033f 02000000 		.4byte	.LVL73
 3869 0343 0100     		.2byte	0x1
 3870 0345 50       		.byte	0x50
 3871 0346 02000000 		.4byte	.LVL73
 3872 034a 04000000 		.4byte	.LFE49
 3873 034e 0400     		.2byte	0x4
 3874 0350 F3       		.byte	0xf3
 3875 0351 01       		.uleb128 0x1
 3876 0352 50       		.byte	0x50
 3877 0353 9F       		.byte	0x9f
 3878 0354 00000000 		.4byte	0
 3879 0358 00000000 		.4byte	0
 3880              	.LLST23:
 3881 035c 00000000 		.4byte	.LVL74
 3882 0360 02000000 		.4byte	.LVL75
 3883 0364 0100     		.2byte	0x1
 3884 0366 50       		.byte	0x50
 3885 0367 02000000 		.4byte	.LVL75
 3886 036b 04000000 		.4byte	.LFE50
 3887 036f 0400     		.2byte	0x4
 3888 0371 F3       		.byte	0xf3
 3889 0372 01       		.uleb128 0x1
 3890 0373 50       		.byte	0x50
 3891 0374 9F       		.byte	0x9f
 3892 0375 00000000 		.4byte	0
 3893 0379 00000000 		.4byte	0
 3894              	.LLST24:
 3895 037d 00000000 		.4byte	.LVL76
 3896 0381 06000000 		.4byte	.LVL78
 3897 0385 0100     		.2byte	0x1
 3898 0387 50       		.byte	0x50
 3899 0388 06000000 		.4byte	.LVL78
 3900 038c 80000000 		.4byte	.LVL83
 3901 0390 0100     		.2byte	0x1
 3902 0392 54       		.byte	0x54
 3903 0393 80000000 		.4byte	.LVL83
 3904 0397 88000000 		.4byte	.LFE51
 3905 039b 0400     		.2byte	0x4
 3906 039d F3       		.byte	0xf3
 3907 039e 01       		.uleb128 0x1
 3908 039f 50       		.byte	0x50
 3909 03a0 9F       		.byte	0x9f
 3910 03a1 00000000 		.4byte	0
 3911 03a5 00000000 		.4byte	0
 3912              	.LLST25:
 3913 03a9 00000000 		.4byte	.LVL84
 3914 03ad 08000000 		.4byte	.LVL86
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 119


 3915 03b1 0100     		.2byte	0x1
 3916 03b3 50       		.byte	0x50
 3917 03b4 08000000 		.4byte	.LVL86
 3918 03b8 1E000000 		.4byte	.LFE52
 3919 03bc 0400     		.2byte	0x4
 3920 03be F3       		.byte	0xf3
 3921 03bf 01       		.uleb128 0x1
 3922 03c0 50       		.byte	0x50
 3923 03c1 9F       		.byte	0x9f
 3924 03c2 00000000 		.4byte	0
 3925 03c6 00000000 		.4byte	0
 3926              	.LLST26:
 3927 03ca 02000000 		.4byte	.LVL85
 3928 03ce 08000000 		.4byte	.LVL86
 3929 03d2 0200     		.2byte	0x2
 3930 03d4 30       		.byte	0x30
 3931 03d5 9F       		.byte	0x9f
 3932 03d6 08000000 		.4byte	.LVL86
 3933 03da 1C000000 		.4byte	.LVL90
 3934 03de 0100     		.2byte	0x1
 3935 03e0 54       		.byte	0x54
 3936 03e1 00000000 		.4byte	0
 3937 03e5 00000000 		.4byte	0
 3938              	.LLST27:
 3939 03e9 02000000 		.4byte	.LVL85
 3940 03ed 08000000 		.4byte	.LVL86
 3941 03f1 0200     		.2byte	0x2
 3942 03f3 30       		.byte	0x30
 3943 03f4 9F       		.byte	0x9f
 3944 03f5 08000000 		.4byte	.LVL86
 3945 03f9 1C000000 		.4byte	.LVL91
 3946 03fd 0100     		.2byte	0x1
 3947 03ff 55       		.byte	0x55
 3948 0400 1C000000 		.4byte	.LVL91
 3949 0404 1E000000 		.4byte	.LFE52
 3950 0408 0100     		.2byte	0x1
 3951 040a 50       		.byte	0x50
 3952 040b 00000000 		.4byte	0
 3953 040f 00000000 		.4byte	0
 3954              	.LLST28:
 3955 0413 02000000 		.4byte	.LVL92
 3956 0417 0A000000 		.4byte	.LVL93
 3957 041b 0200     		.2byte	0x2
 3958 041d 30       		.byte	0x30
 3959 041e 9F       		.byte	0x9f
 3960 041f 0A000000 		.4byte	.LVL93
 3961 0423 1E000000 		.4byte	.LVL97
 3962 0427 0100     		.2byte	0x1
 3963 0429 54       		.byte	0x54
 3964 042a 00000000 		.4byte	0
 3965 042e 00000000 		.4byte	0
 3966              	.LLST29:
 3967 0432 02000000 		.4byte	.LVL92
 3968 0436 0A000000 		.4byte	.LVL93
 3969 043a 0200     		.2byte	0x2
 3970 043c 30       		.byte	0x30
 3971 043d 9F       		.byte	0x9f
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 120


 3972 043e 0A000000 		.4byte	.LVL93
 3973 0442 1E000000 		.4byte	.LVL98
 3974 0446 0100     		.2byte	0x1
 3975 0448 55       		.byte	0x55
 3976 0449 1E000000 		.4byte	.LVL98
 3977 044d 20000000 		.4byte	.LFE53
 3978 0451 0100     		.2byte	0x1
 3979 0453 50       		.byte	0x50
 3980 0454 00000000 		.4byte	0
 3981 0458 00000000 		.4byte	0
 3982              	.LLST30:
 3983 045c 00000000 		.4byte	.LVL99
 3984 0460 06000000 		.4byte	.LVL101
 3985 0464 0100     		.2byte	0x1
 3986 0466 50       		.byte	0x50
 3987 0467 06000000 		.4byte	.LVL101
 3988 046b 20000000 		.4byte	.LFE54
 3989 046f 0400     		.2byte	0x4
 3990 0471 F3       		.byte	0xf3
 3991 0472 01       		.uleb128 0x1
 3992 0473 50       		.byte	0x50
 3993 0474 9F       		.byte	0x9f
 3994 0475 00000000 		.4byte	0
 3995 0479 00000000 		.4byte	0
 3996              	.LLST31:
 3997 047d 02000000 		.4byte	.LVL100
 3998 0481 06000000 		.4byte	.LVL101
 3999 0485 0200     		.2byte	0x2
 4000 0487 30       		.byte	0x30
 4001 0488 9F       		.byte	0x9f
 4002 0489 06000000 		.4byte	.LVL101
 4003 048d 12000000 		.4byte	.LVL103
 4004 0491 0100     		.2byte	0x1
 4005 0493 54       		.byte	0x54
 4006 0494 12000000 		.4byte	.LVL103
 4007 0498 14000000 		.4byte	.LVL104
 4008 049c 0300     		.2byte	0x3
 4009 049e 74       		.byte	0x74
 4010 049f 7F       		.sleb128 -1
 4011 04a0 9F       		.byte	0x9f
 4012 04a1 14000000 		.4byte	.LVL104
 4013 04a5 18000000 		.4byte	.LVL105
 4014 04a9 0100     		.2byte	0x1
 4015 04ab 54       		.byte	0x54
 4016 04ac 00000000 		.4byte	0
 4017 04b0 00000000 		.4byte	0
 4018              	.LLST32:
 4019 04b4 00000000 		.4byte	.LVL106
 4020 04b8 06000000 		.4byte	.LVL108
 4021 04bc 0100     		.2byte	0x1
 4022 04be 50       		.byte	0x50
 4023 04bf 06000000 		.4byte	.LVL108
 4024 04c3 20000000 		.4byte	.LFE55
 4025 04c7 0400     		.2byte	0x4
 4026 04c9 F3       		.byte	0xf3
 4027 04ca 01       		.uleb128 0x1
 4028 04cb 50       		.byte	0x50
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 121


 4029 04cc 9F       		.byte	0x9f
 4030 04cd 00000000 		.4byte	0
 4031 04d1 00000000 		.4byte	0
 4032              	.LLST33:
 4033 04d5 02000000 		.4byte	.LVL107
 4034 04d9 06000000 		.4byte	.LVL108
 4035 04dd 0200     		.2byte	0x2
 4036 04df 30       		.byte	0x30
 4037 04e0 9F       		.byte	0x9f
 4038 04e1 06000000 		.4byte	.LVL108
 4039 04e5 12000000 		.4byte	.LVL110
 4040 04e9 0100     		.2byte	0x1
 4041 04eb 54       		.byte	0x54
 4042 04ec 12000000 		.4byte	.LVL110
 4043 04f0 14000000 		.4byte	.LVL111
 4044 04f4 0300     		.2byte	0x3
 4045 04f6 74       		.byte	0x74
 4046 04f7 7F       		.sleb128 -1
 4047 04f8 9F       		.byte	0x9f
 4048 04f9 14000000 		.4byte	.LVL111
 4049 04fd 18000000 		.4byte	.LVL112
 4050 0501 0100     		.2byte	0x1
 4051 0503 54       		.byte	0x54
 4052 0504 00000000 		.4byte	0
 4053 0508 00000000 		.4byte	0
 4054              	.LLST34:
 4055 050c 00000000 		.4byte	.LVL113
 4056 0510 04000000 		.4byte	.LVL115
 4057 0514 0100     		.2byte	0x1
 4058 0516 50       		.byte	0x50
 4059 0517 04000000 		.4byte	.LVL115
 4060 051b 30000000 		.4byte	.LFE56
 4061 051f 0400     		.2byte	0x4
 4062 0521 F3       		.byte	0xf3
 4063 0522 01       		.uleb128 0x1
 4064 0523 50       		.byte	0x50
 4065 0524 9F       		.byte	0x9f
 4066 0525 00000000 		.4byte	0
 4067 0529 00000000 		.4byte	0
 4068              	.LLST35:
 4069 052d 0A000000 		.4byte	.LVL116
 4070 0531 12000000 		.4byte	.LVL117
 4071 0535 0200     		.2byte	0x2
 4072 0537 30       		.byte	0x30
 4073 0538 9F       		.byte	0x9f
 4074 0539 12000000 		.4byte	.LVL117
 4075 053d 24000000 		.4byte	.LVL120
 4076 0541 0100     		.2byte	0x1
 4077 0543 53       		.byte	0x53
 4078 0544 24000000 		.4byte	.LVL120
 4079 0548 26000000 		.4byte	.LVL121
 4080 054c 0300     		.2byte	0x3
 4081 054e 73       		.byte	0x73
 4082 054f 7F       		.sleb128 -1
 4083 0550 9F       		.byte	0x9f
 4084 0551 26000000 		.4byte	.LVL121
 4085 0555 30000000 		.4byte	.LFE56
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 122


 4086 0559 0100     		.2byte	0x1
 4087 055b 53       		.byte	0x53
 4088 055c 00000000 		.4byte	0
 4089 0560 00000000 		.4byte	0
 4090              	.LLST36:
 4091 0564 02000000 		.4byte	.LVL114
 4092 0568 12000000 		.4byte	.LVL117
 4093 056c 0300     		.2byte	0x3
 4094 056e 09       		.byte	0x9
 4095 056f FF       		.byte	0xff
 4096 0570 9F       		.byte	0x9f
 4097 0571 12000000 		.4byte	.LVL117
 4098 0575 30000000 		.4byte	.LFE56
 4099 0579 0100     		.2byte	0x1
 4100 057b 50       		.byte	0x50
 4101 057c 00000000 		.4byte	0
 4102 0580 00000000 		.4byte	0
 4103              	.LLST37:
 4104 0584 02000000 		.4byte	.LVL114
 4105 0588 12000000 		.4byte	.LVL117
 4106 058c 0200     		.2byte	0x2
 4107 058e 30       		.byte	0x30
 4108 058f 9F       		.byte	0x9f
 4109 0590 12000000 		.4byte	.LVL117
 4110 0594 20000000 		.4byte	.LVL118
 4111 0598 0100     		.2byte	0x1
 4112 059a 56       		.byte	0x56
 4113 059b 22000000 		.4byte	.LVL119
 4114 059f 2A000000 		.4byte	.LVL123
 4115 05a3 0100     		.2byte	0x1
 4116 05a5 56       		.byte	0x56
 4117 05a6 00000000 		.4byte	0
 4118 05aa 00000000 		.4byte	0
 4119              	.LLST38:
 4120 05ae 0A000000 		.4byte	.LVL116
 4121 05b2 2A000000 		.4byte	.LVL122
 4122 05b6 0100     		.2byte	0x1
 4123 05b8 55       		.byte	0x55
 4124 05b9 00000000 		.4byte	0
 4125 05bd 00000000 		.4byte	0
 4126              	.LLST39:
 4127 05c1 00000000 		.4byte	.LVL124
 4128 05c5 0E000000 		.4byte	.LVL126
 4129 05c9 0100     		.2byte	0x1
 4130 05cb 50       		.byte	0x50
 4131 05cc 0E000000 		.4byte	.LVL126
 4132 05d0 D0000000 		.4byte	.LFE57
 4133 05d4 0400     		.2byte	0x4
 4134 05d6 F3       		.byte	0xf3
 4135 05d7 01       		.uleb128 0x1
 4136 05d8 50       		.byte	0x50
 4137 05d9 9F       		.byte	0x9f
 4138 05da 00000000 		.4byte	0
 4139 05de 00000000 		.4byte	0
 4140              	.LLST40:
 4141 05e2 00000000 		.4byte	.LVL124
 4142 05e6 10000000 		.4byte	.LVL127
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 123


 4143 05ea 0100     		.2byte	0x1
 4144 05ec 51       		.byte	0x51
 4145 05ed 10000000 		.4byte	.LVL127
 4146 05f1 D0000000 		.4byte	.LFE57
 4147 05f5 0400     		.2byte	0x4
 4148 05f7 F3       		.byte	0xf3
 4149 05f8 01       		.uleb128 0x1
 4150 05f9 51       		.byte	0x51
 4151 05fa 9F       		.byte	0x9f
 4152 05fb 00000000 		.4byte	0
 4153 05ff 00000000 		.4byte	0
 4154              	.LLST41:
 4155 0603 00000000 		.4byte	.LVL124
 4156 0607 3A000000 		.4byte	.LVL134
 4157 060b 0100     		.2byte	0x1
 4158 060d 52       		.byte	0x52
 4159 060e 3A000000 		.4byte	.LVL134
 4160 0612 46000000 		.4byte	.LVL136
 4161 0616 0400     		.2byte	0x4
 4162 0618 F3       		.byte	0xf3
 4163 0619 01       		.uleb128 0x1
 4164 061a 52       		.byte	0x52
 4165 061b 9F       		.byte	0x9f
 4166 061c 46000000 		.4byte	.LVL136
 4167 0620 48000000 		.4byte	.LVL137
 4168 0624 0100     		.2byte	0x1
 4169 0626 52       		.byte	0x52
 4170 0627 48000000 		.4byte	.LVL137
 4171 062b D0000000 		.4byte	.LFE57
 4172 062f 0400     		.2byte	0x4
 4173 0631 F3       		.byte	0xf3
 4174 0632 01       		.uleb128 0x1
 4175 0633 52       		.byte	0x52
 4176 0634 9F       		.byte	0x9f
 4177 0635 00000000 		.4byte	0
 4178 0639 00000000 		.4byte	0
 4179              	.LLST42:
 4180 063d 00000000 		.4byte	.LVL124
 4181 0641 0C000000 		.4byte	.LVL125
 4182 0645 0100     		.2byte	0x1
 4183 0647 53       		.byte	0x53
 4184 0648 0C000000 		.4byte	.LVL125
 4185 064c D0000000 		.4byte	.LFE57
 4186 0650 0400     		.2byte	0x4
 4187 0652 F3       		.byte	0xf3
 4188 0653 01       		.uleb128 0x1
 4189 0654 53       		.byte	0x53
 4190 0655 9F       		.byte	0x9f
 4191 0656 00000000 		.4byte	0
 4192 065a 00000000 		.4byte	0
 4193              	.LLST43:
 4194 065e 00000000 		.4byte	.LVL124
 4195 0662 0C000000 		.4byte	.LVL125
 4196 0666 0200     		.2byte	0x2
 4197 0668 91       		.byte	0x91
 4198 0669 00       		.sleb128 0
 4199 066a 0C000000 		.4byte	.LVL125
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 124


 4200 066e 12000000 		.4byte	.LVL128
 4201 0672 0200     		.2byte	0x2
 4202 0674 73       		.byte	0x73
 4203 0675 00       		.sleb128 0
 4204 0676 12000000 		.4byte	.LVL128
 4205 067a D0000000 		.4byte	.LFE57
 4206 067e 0200     		.2byte	0x2
 4207 0680 7D       		.byte	0x7d
 4208 0681 18       		.sleb128 24
 4209 0682 00000000 		.4byte	0
 4210 0686 00000000 		.4byte	0
 4211              	.LLST44:
 4212 068a 16000000 		.4byte	.LVL129
 4213 068e 20000000 		.4byte	.LVL130
 4214 0692 0200     		.2byte	0x2
 4215 0694 30       		.byte	0x30
 4216 0695 9F       		.byte	0x9f
 4217 0696 20000000 		.4byte	.LVL130
 4218 069a 22000000 		.4byte	.LVL131
 4219 069e 0100     		.2byte	0x1
 4220 06a0 53       		.byte	0x53
 4221 06a1 22000000 		.4byte	.LVL131
 4222 06a5 26000000 		.4byte	.LVL132
 4223 06a9 0200     		.2byte	0x2
 4224 06ab 30       		.byte	0x30
 4225 06ac 9F       		.byte	0x9f
 4226 06ad 26000000 		.4byte	.LVL132
 4227 06b1 C4000000 		.4byte	.LVL152
 4228 06b5 0100     		.2byte	0x1
 4229 06b7 58       		.byte	0x58
 4230 06b8 00000000 		.4byte	0
 4231 06bc 00000000 		.4byte	0
 4232              	.LLST45:
 4233 06c0 2C000000 		.4byte	.LVL133
 4234 06c4 40000000 		.4byte	.LVL135
 4235 06c8 0100     		.2byte	0x1
 4236 06ca 53       		.byte	0x53
 4237 06cb 40000000 		.4byte	.LVL135
 4238 06cf 46000000 		.4byte	.LVL136
 4239 06d3 0100     		.2byte	0x1
 4240 06d5 55       		.byte	0x55
 4241 06d6 46000000 		.4byte	.LVL136
 4242 06da 50000000 		.4byte	.LVL138
 4243 06de 0100     		.2byte	0x1
 4244 06e0 53       		.byte	0x53
 4245 06e1 50000000 		.4byte	.LVL138
 4246 06e5 5C000000 		.4byte	.LVL139
 4247 06e9 0100     		.2byte	0x1
 4248 06eb 5C       		.byte	0x5c
 4249 06ec 5C000000 		.4byte	.LVL139
 4250 06f0 60000000 		.4byte	.LVL140
 4251 06f4 0100     		.2byte	0x1
 4252 06f6 53       		.byte	0x53
 4253 06f7 60000000 		.4byte	.LVL140
 4254 06fb B1000000 		.4byte	.LVL145-1
 4255 06ff 0100     		.2byte	0x1
 4256 0701 5C       		.byte	0x5c
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 125


 4257 0702 B1000000 		.4byte	.LVL145-1
 4258 0706 B4000000 		.4byte	.LVL146
 4259 070a 0300     		.2byte	0x3
 4260 070c 74       		.byte	0x74
 4261 070d 01       		.sleb128 1
 4262 070e 9F       		.byte	0x9f
 4263 070f 00000000 		.4byte	0
 4264 0713 00000000 		.4byte	0
 4265              	.LLST46:
 4266 0717 A8000000 		.4byte	.LVL142
 4267 071b AE000000 		.4byte	.LVL144
 4268 071f 0100     		.2byte	0x1
 4269 0721 50       		.byte	0x50
 4270 0722 AE000000 		.4byte	.LVL144
 4271 0726 B1000000 		.4byte	.LVL145-1
 4272 072a 0600     		.2byte	0x6
 4273 072c 72       		.byte	0x72
 4274 072d 00       		.sleb128 0
 4275 072e 75       		.byte	0x75
 4276 072f 00       		.sleb128 0
 4277 0730 1C       		.byte	0x1c
 4278 0731 9F       		.byte	0x9f
 4279 0732 00000000 		.4byte	0
 4280 0736 00000000 		.4byte	0
 4281              	.LLST47:
 4282 073a AC000000 		.4byte	.LVL143
 4283 073e B1000000 		.4byte	.LVL145-1
 4284 0742 0100     		.2byte	0x1
 4285 0744 51       		.byte	0x51
 4286 0745 B6000000 		.4byte	.LVL147
 4287 0749 C0000000 		.4byte	.LVL149
 4288 074d 0100     		.2byte	0x1
 4289 074f 50       		.byte	0x50
 4290 0750 C0000000 		.4byte	.LVL149
 4291 0754 C2000000 		.4byte	.LVL150
 4292 0758 0500     		.2byte	0x5
 4293 075a 70       		.byte	0x70
 4294 075b 80827E   		.sleb128 -32512
 4295 075e 9F       		.byte	0x9f
 4296 075f 00000000 		.4byte	0
 4297 0763 00000000 		.4byte	0
 4298              	.LLST48:
 4299 0767 16000000 		.4byte	.LVL129
 4300 076b 88000000 		.4byte	.LVL141
 4301 076f 0100     		.2byte	0x1
 4302 0771 51       		.byte	0x51
 4303 0772 00000000 		.4byte	0
 4304 0776 00000000 		.4byte	0
 4305              	.LLST49:
 4306 077a 00000000 		.4byte	.LVL153
 4307 077e 06000000 		.4byte	.LVL155
 4308 0782 0100     		.2byte	0x1
 4309 0784 50       		.byte	0x50
 4310 0785 06000000 		.4byte	.LVL155
 4311 0789 30000000 		.4byte	.LFE58
 4312 078d 0400     		.2byte	0x4
 4313 078f F3       		.byte	0xf3
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 126


 4314 0790 01       		.uleb128 0x1
 4315 0791 50       		.byte	0x50
 4316 0792 9F       		.byte	0x9f
 4317 0793 00000000 		.4byte	0
 4318 0797 00000000 		.4byte	0
 4319              	.LLST50:
 4320 079b 0E000000 		.4byte	.LVL156
 4321 079f 21000000 		.4byte	.LVL157-1
 4322 07a3 0100     		.2byte	0x1
 4323 07a5 50       		.byte	0x50
 4324 07a6 24000000 		.4byte	.LVL158
 4325 07aa 26000000 		.4byte	.LVL159
 4326 07ae 0100     		.2byte	0x1
 4327 07b0 50       		.byte	0x50
 4328 07b1 00000000 		.4byte	0
 4329 07b5 00000000 		.4byte	0
 4330              	.LLST51:
 4331 07b9 22000000 		.4byte	.LVL157
 4332 07bd 24000000 		.4byte	.LVL158
 4333 07c1 0100     		.2byte	0x1
 4334 07c3 50       		.byte	0x50
 4335 07c4 26000000 		.4byte	.LVL159
 4336 07c8 30000000 		.4byte	.LFE58
 4337 07cc 0100     		.2byte	0x1
 4338 07ce 50       		.byte	0x50
 4339 07cf 00000000 		.4byte	0
 4340 07d3 00000000 		.4byte	0
 4341              	.LLST52:
 4342 07d7 00000000 		.4byte	.LVL160
 4343 07db 06000000 		.4byte	.LVL162
 4344 07df 0100     		.2byte	0x1
 4345 07e1 50       		.byte	0x50
 4346 07e2 06000000 		.4byte	.LVL162
 4347 07e6 30000000 		.4byte	.LFE59
 4348 07ea 0400     		.2byte	0x4
 4349 07ec F3       		.byte	0xf3
 4350 07ed 01       		.uleb128 0x1
 4351 07ee 50       		.byte	0x50
 4352 07ef 9F       		.byte	0x9f
 4353 07f0 00000000 		.4byte	0
 4354 07f4 00000000 		.4byte	0
 4355              	.LLST53:
 4356 07f8 0E000000 		.4byte	.LVL163
 4357 07fc 21000000 		.4byte	.LVL164-1
 4358 0800 0100     		.2byte	0x1
 4359 0802 50       		.byte	0x50
 4360 0803 24000000 		.4byte	.LVL165
 4361 0807 26000000 		.4byte	.LVL166
 4362 080b 0100     		.2byte	0x1
 4363 080d 50       		.byte	0x50
 4364 080e 00000000 		.4byte	0
 4365 0812 00000000 		.4byte	0
 4366              	.LLST54:
 4367 0816 22000000 		.4byte	.LVL164
 4368 081a 24000000 		.4byte	.LVL165
 4369 081e 0100     		.2byte	0x1
 4370 0820 50       		.byte	0x50
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 127


 4371 0821 26000000 		.4byte	.LVL166
 4372 0825 30000000 		.4byte	.LFE59
 4373 0829 0100     		.2byte	0x1
 4374 082b 50       		.byte	0x50
 4375 082c 00000000 		.4byte	0
 4376 0830 00000000 		.4byte	0
 4377              	.LLST55:
 4378 0834 00000000 		.4byte	.LVL167
 4379 0838 04000000 		.4byte	.LVL168
 4380 083c 0100     		.2byte	0x1
 4381 083e 50       		.byte	0x50
 4382 083f 04000000 		.4byte	.LVL168
 4383 0843 0C000000 		.4byte	.LFE60
 4384 0847 0400     		.2byte	0x4
 4385 0849 F3       		.byte	0xf3
 4386 084a 01       		.uleb128 0x1
 4387 084b 50       		.byte	0x50
 4388 084c 9F       		.byte	0x9f
 4389 084d 00000000 		.4byte	0
 4390 0851 00000000 		.4byte	0
 4391              	.LLST56:
 4392 0855 00000000 		.4byte	.LVL169
 4393 0859 04000000 		.4byte	.LVL170
 4394 085d 0100     		.2byte	0x1
 4395 085f 50       		.byte	0x50
 4396 0860 04000000 		.4byte	.LVL170
 4397 0864 0C000000 		.4byte	.LFE61
 4398 0868 0400     		.2byte	0x4
 4399 086a F3       		.byte	0xf3
 4400 086b 01       		.uleb128 0x1
 4401 086c 50       		.byte	0x50
 4402 086d 9F       		.byte	0x9f
 4403 086e 00000000 		.4byte	0
 4404 0872 00000000 		.4byte	0
 4405              	.LLST57:
 4406 0876 00000000 		.4byte	.LVL171
 4407 087a 02000000 		.4byte	.LVL172
 4408 087e 0100     		.2byte	0x1
 4409 0880 50       		.byte	0x50
 4410 0881 02000000 		.4byte	.LVL172
 4411 0885 04000000 		.4byte	.LFE62
 4412 0889 0400     		.2byte	0x4
 4413 088b F3       		.byte	0xf3
 4414 088c 01       		.uleb128 0x1
 4415 088d 50       		.byte	0x50
 4416 088e 9F       		.byte	0x9f
 4417 088f 00000000 		.4byte	0
 4418 0893 00000000 		.4byte	0
 4419              		.section	.debug_aranges,"",%progbits
 4420 0000 F4000000 		.4byte	0xf4
 4421 0004 0200     		.2byte	0x2
 4422 0006 00000000 		.4byte	.Ldebug_info0
 4423 000a 04       		.byte	0x4
 4424 000b 00       		.byte	0
 4425 000c 0000     		.2byte	0
 4426 000e 0000     		.2byte	0
 4427 0010 00000000 		.4byte	.LFB35
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 128


 4428 0014 20000000 		.4byte	.LFE35-.LFB35
 4429 0018 00000000 		.4byte	.LFB36
 4430 001c 18000000 		.4byte	.LFE36-.LFB36
 4431 0020 00000000 		.4byte	.LFB37
 4432 0024 14000000 		.4byte	.LFE37-.LFB37
 4433 0028 00000000 		.4byte	.LFB38
 4434 002c 34000000 		.4byte	.LFE38-.LFB38
 4435 0030 00000000 		.4byte	.LFB39
 4436 0034 BC000000 		.4byte	.LFE39-.LFB39
 4437 0038 00000000 		.4byte	.LFB40
 4438 003c 08000000 		.4byte	.LFE40-.LFB40
 4439 0040 00000000 		.4byte	.LFB41
 4440 0044 28000000 		.4byte	.LFE41-.LFB41
 4441 0048 00000000 		.4byte	.LFB42
 4442 004c 28000000 		.4byte	.LFE42-.LFB42
 4443 0050 00000000 		.4byte	.LFB43
 4444 0054 0C000000 		.4byte	.LFE43-.LFB43
 4445 0058 00000000 		.4byte	.LFB44
 4446 005c 0C000000 		.4byte	.LFE44-.LFB44
 4447 0060 00000000 		.4byte	.LFB45
 4448 0064 10000000 		.4byte	.LFE45-.LFB45
 4449 0068 00000000 		.4byte	.LFB46
 4450 006c 10000000 		.4byte	.LFE46-.LFB46
 4451 0070 00000000 		.4byte	.LFB47
 4452 0074 04000000 		.4byte	.LFE47-.LFB47
 4453 0078 00000000 		.4byte	.LFB48
 4454 007c 04000000 		.4byte	.LFE48-.LFB48
 4455 0080 00000000 		.4byte	.LFB49
 4456 0084 04000000 		.4byte	.LFE49-.LFB49
 4457 0088 00000000 		.4byte	.LFB50
 4458 008c 04000000 		.4byte	.LFE50-.LFB50
 4459 0090 00000000 		.4byte	.LFB51
 4460 0094 88000000 		.4byte	.LFE51-.LFB51
 4461 0098 00000000 		.4byte	.LFB52
 4462 009c 1E000000 		.4byte	.LFE52-.LFB52
 4463 00a0 00000000 		.4byte	.LFB53
 4464 00a4 20000000 		.4byte	.LFE53-.LFB53
 4465 00a8 00000000 		.4byte	.LFB54
 4466 00ac 20000000 		.4byte	.LFE54-.LFB54
 4467 00b0 00000000 		.4byte	.LFB55
 4468 00b4 20000000 		.4byte	.LFE55-.LFB55
 4469 00b8 00000000 		.4byte	.LFB56
 4470 00bc 30000000 		.4byte	.LFE56-.LFB56
 4471 00c0 00000000 		.4byte	.LFB57
 4472 00c4 D0000000 		.4byte	.LFE57-.LFB57
 4473 00c8 00000000 		.4byte	.LFB58
 4474 00cc 30000000 		.4byte	.LFE58-.LFB58
 4475 00d0 00000000 		.4byte	.LFB59
 4476 00d4 30000000 		.4byte	.LFE59-.LFB59
 4477 00d8 00000000 		.4byte	.LFB60
 4478 00dc 0C000000 		.4byte	.LFE60-.LFB60
 4479 00e0 00000000 		.4byte	.LFB61
 4480 00e4 0C000000 		.4byte	.LFE61-.LFB61
 4481 00e8 00000000 		.4byte	.LFB62
 4482 00ec 04000000 		.4byte	.LFE62-.LFB62
 4483 00f0 00000000 		.4byte	0
 4484 00f4 00000000 		.4byte	0
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 129


 4485              		.section	.debug_ranges,"",%progbits
 4486              	.Ldebug_ranges0:
 4487 0000 00000000 		.4byte	.LFB35
 4488 0004 20000000 		.4byte	.LFE35
 4489 0008 00000000 		.4byte	.LFB36
 4490 000c 18000000 		.4byte	.LFE36
 4491 0010 00000000 		.4byte	.LFB37
 4492 0014 14000000 		.4byte	.LFE37
 4493 0018 00000000 		.4byte	.LFB38
 4494 001c 34000000 		.4byte	.LFE38
 4495 0020 00000000 		.4byte	.LFB39
 4496 0024 BC000000 		.4byte	.LFE39
 4497 0028 00000000 		.4byte	.LFB40
 4498 002c 08000000 		.4byte	.LFE40
 4499 0030 00000000 		.4byte	.LFB41
 4500 0034 28000000 		.4byte	.LFE41
 4501 0038 00000000 		.4byte	.LFB42
 4502 003c 28000000 		.4byte	.LFE42
 4503 0040 00000000 		.4byte	.LFB43
 4504 0044 0C000000 		.4byte	.LFE43
 4505 0048 00000000 		.4byte	.LFB44
 4506 004c 0C000000 		.4byte	.LFE44
 4507 0050 00000000 		.4byte	.LFB45
 4508 0054 10000000 		.4byte	.LFE45
 4509 0058 00000000 		.4byte	.LFB46
 4510 005c 10000000 		.4byte	.LFE46
 4511 0060 00000000 		.4byte	.LFB47
 4512 0064 04000000 		.4byte	.LFE47
 4513 0068 00000000 		.4byte	.LFB48
 4514 006c 04000000 		.4byte	.LFE48
 4515 0070 00000000 		.4byte	.LFB49
 4516 0074 04000000 		.4byte	.LFE49
 4517 0078 00000000 		.4byte	.LFB50
 4518 007c 04000000 		.4byte	.LFE50
 4519 0080 00000000 		.4byte	.LFB51
 4520 0084 88000000 		.4byte	.LFE51
 4521 0088 00000000 		.4byte	.LFB52
 4522 008c 1E000000 		.4byte	.LFE52
 4523 0090 00000000 		.4byte	.LFB53
 4524 0094 20000000 		.4byte	.LFE53
 4525 0098 00000000 		.4byte	.LFB54
 4526 009c 20000000 		.4byte	.LFE54
 4527 00a0 00000000 		.4byte	.LFB55
 4528 00a4 20000000 		.4byte	.LFE55
 4529 00a8 00000000 		.4byte	.LFB56
 4530 00ac 30000000 		.4byte	.LFE56
 4531 00b0 00000000 		.4byte	.LFB57
 4532 00b4 D0000000 		.4byte	.LFE57
 4533 00b8 00000000 		.4byte	.LFB58
 4534 00bc 30000000 		.4byte	.LFE58
 4535 00c0 00000000 		.4byte	.LFB59
 4536 00c4 30000000 		.4byte	.LFE59
 4537 00c8 00000000 		.4byte	.LFB60
 4538 00cc 0C000000 		.4byte	.LFE60
 4539 00d0 00000000 		.4byte	.LFB61
 4540 00d4 0C000000 		.4byte	.LFE61
 4541 00d8 00000000 		.4byte	.LFB62
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 130


 4542 00dc 04000000 		.4byte	.LFE62
 4543 00e0 00000000 		.4byte	0
 4544 00e4 00000000 		.4byte	0
 4545              		.section	.debug_line,"",%progbits
 4546              	.Ldebug_line0:
 4547 0000 8F030000 		.section	.debug_str,"MS",%progbits,1
 4547      02006C00 
 4547      00000201 
 4547      FB0E0D00 
 4547      01010101 
 4548              	.LASF62:
 4549 0000 636F756E 		.ascii	"count\000"
 4549      7400
 4550              	.LASF10:
 4551 0006 75696E74 		.ascii	"uint16\000"
 4551      313600
 4552              	.LASF28:
 4553 000d 66696C74 		.ascii	"filteredRawData\000"
 4553      65726564 
 4553      52617744 
 4553      61746100 
 4554              	.LASF91:
 4555 001d 43617053 		.ascii	"CapSense_hysteresis\000"
 4555      656E7365 
 4555      5F687973 
 4555      74657265 
 4555      73697300 
 4556              	.LASF93:
 4557 0031 43617053 		.ascii	"CapSense_rawDataIndex\000"
 4557      656E7365 
 4557      5F726177 
 4557      44617461 
 4557      496E6465 
 4558              	.LASF86:
 4559 0047 43617053 		.ascii	"CapSense_sensorOnMask\000"
 4559      656E7365 
 4559      5F73656E 
 4559      736F724F 
 4559      6E4D6173 
 4560              	.LASF46:
 4561 005d 43617053 		.ascii	"CapSense_GetNegativeNoiseThreshold\000"
 4561      656E7365 
 4561      5F476574 
 4561      4E656761 
 4561      74697665 
 4562              	.LASF50:
 4563 0080 66696E67 		.ascii	"fingerThreshold\000"
 4563      65725468 
 4563      72657368 
 4563      6F6C6400 
 4564              	.LASF32:
 4565 0090 43617053 		.ascii	"CapSense_UpdateWidgetBaseline\000"
 4565      656E7365 
 4565      5F557064 
 4565      61746557 
 4565      69646765 
 4566              	.LASF78:
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 131


 4567 00ae 43617053 		.ascii	"CapSense_GetDebounce\000"
 4567      656E7365 
 4567      5F476574 
 4567      4465626F 
 4567      756E6365 
 4568              	.LASF68:
 4569 00c3 706F7350 		.ascii	"posPrev\000"
 4569      72657600 
 4570              	.LASF95:
 4571 00cb 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 4571      4320342E 
 4571      382E3420 
 4571      32303134 
 4571      30353236 
 4572 00fe 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 4572      20726576 
 4572      6973696F 
 4572      6E203231 
 4572      31333538 
 4573 0131 67202D66 		.ascii	"g -ffunction-sections\000"
 4573      66756E63 
 4573      74696F6E 
 4573      2D736563 
 4573      74696F6E 
 4574              	.LASF7:
 4575 0147 6C6F6E67 		.ascii	"long long unsigned int\000"
 4575      206C6F6E 
 4575      6720756E 
 4575      7369676E 
 4575      65642069 
 4576              	.LASF97:
 4577 015e 433A5C55 		.ascii	"C:\\Users\\Alexandre\\Documents\\GitHub\\CoRo_PW_PS"
 4577      73657273 
 4577      5C416C65 
 4577      78616E64 
 4577      72655C44 
 4578 018c 4F435C50 		.ascii	"OC\\PSOC_CapSense_2_BLE\\PSOC_CapSense_2_BLE.cydsn\000"
 4578      534F435F 
 4578      43617053 
 4578      656E7365 
 4578      5F325F42 
 4579              	.LASF85:
 4580 01bd 43617053 		.ascii	"CapSense_sensorSignal\000"
 4580      656E7365 
 4580      5F73656E 
 4580      736F7253 
 4580      69676E61 
 4581              	.LASF44:
 4582 01d3 43617053 		.ascii	"CapSense_GetNoiseThreshold\000"
 4582      656E7365 
 4582      5F476574 
 4582      4E6F6973 
 4582      65546872 
 4583              	.LASF22:
 4584 01ee 43617053 		.ascii	"CapSense_InitializeEnabledBaselines\000"
 4584      656E7365 
 4584      5F496E69 
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 132


 4584      7469616C 
 4584      697A6545 
 4585              	.LASF31:
 4586 0212 43617053 		.ascii	"CapSense_UpdateEnabledBaselines\000"
 4586      656E7365 
 4586      5F557064 
 4586      61746545 
 4586      6E61626C 
 4587              	.LASF6:
 4588 0232 6C6F6E67 		.ascii	"long long int\000"
 4588      206C6F6E 
 4588      6720696E 
 4588      7400
 4589              	.LASF0:
 4590 0240 7369676E 		.ascii	"signed char\000"
 4590      65642063 
 4590      68617200 
 4591              	.LASF59:
 4592 024c 43617053 		.ascii	"CapSense_DisableWidget\000"
 4592      656E7365 
 4592      5F446973 
 4592      61626C65 
 4592      57696467 
 4593              	.LASF54:
 4594 0263 72617749 		.ascii	"rawIndex\000"
 4594      6E646578 
 4594      00
 4595              	.LASF13:
 4596 026c 696E7433 		.ascii	"int32\000"
 4596      3200
 4597              	.LASF39:
 4598 0272 43617053 		.ascii	"CapSense_GetBaselineData\000"
 4598      656E7365 
 4598      5F476574 
 4598      42617365 
 4598      6C696E65 
 4599              	.LASF56:
 4600 028b 73746174 		.ascii	"state\000"
 4600      6500
 4601              	.LASF64:
 4602 0291 74656D70 		.ascii	"temp\000"
 4602      00
 4603              	.LASF4:
 4604 0296 6C6F6E67 		.ascii	"long int\000"
 4604      20696E74 
 4604      00
 4605              	.LASF72:
 4606 029f 6E756D65 		.ascii	"numerator\000"
 4606      7261746F 
 4606      7200
 4607              	.LASF57:
 4608 02a9 43617053 		.ascii	"CapSense_CheckIsAnyWidgetActive\000"
 4608      656E7365 
 4608      5F436865 
 4608      636B4973 
 4608      416E7957 
 4609              	.LASF73:
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 133


 4610 02c9 64656E6F 		.ascii	"denominator\000"
 4610      6D696E61 
 4610      746F7200 
 4611              	.LASF9:
 4612 02d5 75696E74 		.ascii	"uint8\000"
 4612      3800
 4613              	.LASF88:
 4614 02db 43617053 		.ascii	"CapSense_lowBaselineReset\000"
 4614      656E7365 
 4614      5F6C6F77 
 4614      42617365 
 4614      6C696E65 
 4615              	.LASF15:
 4616 02f5 646F7562 		.ascii	"double\000"
 4616      6C6500
 4617              	.LASF82:
 4618 02fc 43617053 		.ascii	"CapSense_widgetNumber\000"
 4618      656E7365 
 4618      5F776964 
 4618      6765744E 
 4618      756D6265 
 4619              	.LASF11:
 4620 0312 75696E74 		.ascii	"uint32\000"
 4620      333200
 4621              	.LASF51:
 4622 0319 68797374 		.ascii	"hysteresis\000"
 4622      65726573 
 4622      697300
 4623              	.LASF61:
 4624 0324 6F666673 		.ascii	"offset\000"
 4624      657400
 4625              	.LASF69:
 4626 032b 706F734E 		.ascii	"posNext\000"
 4626      65787400 
 4627              	.LASF65:
 4628 0333 73746172 		.ascii	"startOfSlider\000"
 4628      744F6653 
 4628      6C696465 
 4628      7200
 4629              	.LASF42:
 4630 0341 76616C75 		.ascii	"value\000"
 4630      6500
 4631              	.LASF36:
 4632 0347 6C617374 		.ascii	"lastSensor\000"
 4632      53656E73 
 4632      6F7200
 4633              	.LASF98:
 4634 0352 43617053 		.ascii	"CapSense_ScanSensor\000"
 4634      656E7365 
 4634      5F536361 
 4634      6E53656E 
 4634      736F7200 
 4635              	.LASF8:
 4636 0366 756E7369 		.ascii	"unsigned int\000"
 4636      676E6564 
 4636      20696E74 
 4636      00
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 134


 4637              	.LASF71:
 4638 0373 706F7369 		.ascii	"position\000"
 4638      74696F6E 
 4638      00
 4639              	.LASF5:
 4640 037c 6C6F6E67 		.ascii	"long unsigned int\000"
 4640      20756E73 
 4640      69676E65 
 4640      6420696E 
 4640      7400
 4641              	.LASF84:
 4642 038e 43617053 		.ascii	"CapSense_sensorBaselineLow\000"
 4642      656E7365 
 4642      5F73656E 
 4642      736F7242 
 4642      6173656C 
 4643              	.LASF24:
 4644 03a9 43617053 		.ascii	"CapSense_UpdateBaselineNoThreshold\000"
 4644      656E7365 
 4644      5F557064 
 4644      61746542 
 4644      6173656C 
 4645              	.LASF38:
 4646 03cc 64617461 		.ascii	"data\000"
 4646      00
 4647              	.LASF3:
 4648 03d1 73686F72 		.ascii	"short unsigned int\000"
 4648      7420756E 
 4648      7369676E 
 4648      65642069 
 4648      6E7400
 4649              	.LASF20:
 4650 03e4 73656E73 		.ascii	"sensor\000"
 4650      6F7200
 4651              	.LASF81:
 4652 03eb 43617053 		.ascii	"CapSense_sensorEnableMask\000"
 4652      656E7365 
 4652      5F73656E 
 4652      736F7245 
 4652      6E61626C 
 4653              	.LASF60:
 4654 0405 43617053 		.ascii	"CapSense_FindMaximum\000"
 4654      656E7365 
 4654      5F46696E 
 4654      644D6178 
 4654      696D756D 
 4655              	.LASF30:
 4656 041a 43617053 		.ascii	"CapSense_UpdateSensorBaseline\000"
 4656      656E7365 
 4656      5F557064 
 4656      61746553 
 4656      656E736F 
 4657              	.LASF25:
 4658 0438 63616C63 		.ascii	"calc\000"
 4658      00
 4659              	.LASF96:
 4660 043d 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\CapSense_CSHL.c\000"
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 135


 4660      6E657261 
 4660      7465645F 
 4660      536F7572 
 4660      63655C50 
 4661              	.LASF87:
 4662 0466 43617053 		.ascii	"CapSense_lowBaselineResetCnt\000"
 4662      656E7365 
 4662      5F6C6F77 
 4662      42617365 
 4662      6C696E65 
 4663              	.LASF40:
 4664 0483 43617053 		.ascii	"CapSense_GetDiffCountData\000"
 4664      656E7365 
 4664      5F476574 
 4664      44696666 
 4664      436F756E 
 4665              	.LASF48:
 4666 049d 6465626F 		.ascii	"debounce\000"
 4666      756E6365 
 4666      00
 4667              	.LASF17:
 4668 04a6 73697A65 		.ascii	"sizetype\000"
 4668      74797065 
 4668      00
 4669              	.LASF58:
 4670 04af 43617053 		.ascii	"CapSense_EnableWidget\000"
 4670      656E7365 
 4670      5F456E61 
 4670      626C6557 
 4670      69646765 
 4671              	.LASF19:
 4672 04c5 43617053 		.ascii	"CapSense_InitializeSensorBaseline\000"
 4672      656E7365 
 4672      5F496E69 
 4672      7469616C 
 4672      697A6553 
 4673              	.LASF47:
 4674 04e7 43617053 		.ascii	"CapSense_CheckIsSensorActive\000"
 4674      656E7365 
 4674      5F436865 
 4674      636B4973 
 4674      53656E73 
 4675              	.LASF43:
 4676 0504 43617053 		.ascii	"CapSense_GetFingerThreshold\000"
 4676      656E7365 
 4676      5F476574 
 4676      46696E67 
 4676      65725468 
 4677              	.LASF90:
 4678 0520 43617053 		.ascii	"CapSense_noiseThreshold\000"
 4678      656E7365 
 4678      5F6E6F69 
 4678      73655468 
 4678      72657368 
 4679              	.LASF89:
 4680 0538 43617053 		.ascii	"CapSense_fingerThreshold\000"
 4680      656E7365 
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 136


 4680      5F66696E 
 4680      67657254 
 4680      68726573 
 4681              	.LASF102:
 4682 0551 43617053 		.ascii	"CapSense_SetBitValue\000"
 4682      656E7365 
 4682      5F536574 
 4682      42697456 
 4682      616C7565 
 4683              	.LASF79:
 4684 0566 43617053 		.ascii	"CapSense_centroidMult\000"
 4684      656E7365 
 4684      5F63656E 
 4684      74726F69 
 4684      644D756C 
 4685              	.LASF14:
 4686 057c 666C6F61 		.ascii	"float\000"
 4686      7400
 4687              	.LASF77:
 4688 0582 43617053 		.ascii	"CapSense_GetLowBaselineReset\000"
 4688      656E7365 
 4688      5F476574 
 4688      4C6F7742 
 4688      6173656C 
 4689              	.LASF53:
 4690 059f 43617053 		.ascii	"CapSense_CheckIsWidgetActive\000"
 4690      656E7365 
 4690      5F436865 
 4690      636B4973 
 4690      57696467 
 4691              	.LASF1:
 4692 05bc 756E7369 		.ascii	"unsigned char\000"
 4692      676E6564 
 4692      20636861 
 4692      7200
 4693              	.LASF21:
 4694 05ca 43617053 		.ascii	"CapSense_InitializeAllBaselines\000"
 4694      656E7365 
 4694      5F496E69 
 4694      7469616C 
 4694      697A6541 
 4695              	.LASF37:
 4696 05ea 43617053 		.ascii	"CapSense_SetBaselineData\000"
 4696      656E7365 
 4696      5F536574 
 4696      42617365 
 4696      6C696E65 
 4697              	.LASF29:
 4698 0603 6E6F6973 		.ascii	"noiseThreshold\000"
 4698      65546872 
 4698      6573686F 
 4698      6C6400
 4699              	.LASF2:
 4700 0612 73686F72 		.ascii	"short int\000"
 4700      7420696E 
 4700      7400
 4701              	.LASF33:
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 137


 4702 061c 77696467 		.ascii	"widget\000"
 4702      657400
 4703              	.LASF63:
 4704 0623 6D617869 		.ascii	"maximum\000"
 4704      6D756D00 
 4705              	.LASF23:
 4706 062b 69735365 		.ascii	"isSensorEnabled\000"
 4706      6E736F72 
 4706      456E6162 
 4706      6C656400 
 4707              	.LASF18:
 4708 063b 43617053 		.ascii	"CapSense_BaseInit\000"
 4708      656E7365 
 4708      5F426173 
 4708      65496E69 
 4708      7400
 4709              	.LASF34:
 4710 064d 73656E73 		.ascii	"sensorsPerWidget\000"
 4710      6F727350 
 4710      65725769 
 4710      64676574 
 4710      00
 4711              	.LASF67:
 4712 065e 7265736F 		.ascii	"resolution\000"
 4712      6C757469 
 4712      6F6E00
 4713              	.LASF92:
 4714 0669 43617053 		.ascii	"CapSense_debounce\000"
 4714      656E7365 
 4714      5F646562 
 4714      6F756E63 
 4714      6500
 4715              	.LASF75:
 4716 067b 43617053 		.ascii	"CapSense_GetRadialCentroidPos\000"
 4716      656E7365 
 4716      5F476574 
 4716      52616469 
 4716      616C4365 
 4717              	.LASF74:
 4718 0699 43617053 		.ascii	"CapSense_GetCentroidPos\000"
 4718      656E7365 
 4718      5F476574 
 4718      43656E74 
 4718      726F6964 
 4719              	.LASF16:
 4720 06b1 63686172 		.ascii	"char\000"
 4720      00
 4721              	.LASF70:
 4722 06b6 43617053 		.ascii	"CapSense_centroid\000"
 4722      656E7365 
 4722      5F63656E 
 4722      74726F69 
 4722      6400
 4723              	.LASF45:
 4724 06c8 43617053 		.ascii	"CapSense_GetFingerHysteresis\000"
 4724      656E7365 
 4724      5F476574 
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 138


 4724      46696E67 
 4724      65724879 
 4725              	.LASF35:
 4726 06e5 66697273 		.ascii	"firstSensor\000"
 4726      7453656E 
 4726      736F7200 
 4727              	.LASF49:
 4728 06f1 6465626F 		.ascii	"debounceIndex\000"
 4728      756E6365 
 4728      496E6465 
 4728      7800
 4729              	.LASF26:
 4730 06ff 7369676E 		.ascii	"sign\000"
 4730      00
 4731              	.LASF55:
 4732 0704 6E756D4F 		.ascii	"numOfSensors\000"
 4732      6653656E 
 4732      736F7273 
 4732      00
 4733              	.LASF12:
 4734 0711 696E7431 		.ascii	"int16\000"
 4734      3600
 4735              	.LASF80:
 4736 0717 43617053 		.ascii	"CapSense_sensorRaw\000"
 4736      656E7365 
 4736      5F73656E 
 4736      736F7252 
 4736      617700
 4737              	.LASF41:
 4738 072a 43617053 		.ascii	"CapSense_SetDiffCountData\000"
 4738      656E7365 
 4738      5F536574 
 4738      44696666 
 4738      436F756E 
 4739              	.LASF66:
 4740 0744 43617053 		.ascii	"CapSense_CalcCentroid\000"
 4740      656E7365 
 4740      5F43616C 
 4740      6343656E 
 4740      74726F69 
 4741              	.LASF101:
 4742 075a 43617053 		.ascii	"CapSense_GetBitValue\000"
 4742      656E7365 
 4742      5F476574 
 4742      42697456 
 4742      616C7565 
 4743              	.LASF76:
 4744 076f 43617053 		.ascii	"CapSense_GetWidgetNumber\000"
 4744      656E7365 
 4744      5F476574 
 4744      57696467 
 4744      65744E75 
 4745              	.LASF100:
 4746 0788 43617053 		.ascii	"CapSense_ScanEnabledWidgets\000"
 4746      656E7365 
 4746      5F536361 
 4746      6E456E61 
ARM GAS  C:\Users\ALEXAN~1\AppData\Local\Temp\cc9HWPtE.s 			page 139


 4746      626C6564 
 4747              	.LASF83:
 4748 07a4 43617053 		.ascii	"CapSense_sensorBaseline\000"
 4748      656E7365 
 4748      5F73656E 
 4748      736F7242 
 4748      6173656C 
 4749              	.LASF52:
 4750 07bc 43617053 		.ascii	"CapSense_debounceCounter\000"
 4750      656E7365 
 4750      5F646562 
 4750      6F756E63 
 4750      65436F75 
 4751              	.LASF27:
 4752 07d5 74656D70 		.ascii	"tempRaw\000"
 4752      52617700 
 4753              	.LASF99:
 4754 07dd 43617053 		.ascii	"CapSense_IsBusy\000"
 4754      656E7365 
 4754      5F497342 
 4754      75737900 
 4755              	.LASF94:
 4756 07ed 43617053 		.ascii	"CapSense_numberOfSensors\000"
 4756      656E7365 
 4756      5F6E756D 
 4756      6265724F 
 4756      6653656E 
 4757              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
